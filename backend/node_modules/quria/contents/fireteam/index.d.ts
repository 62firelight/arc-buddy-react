import { APIResponse } from "../../types/api";
import { DestinyActivityModeType } from "../../types/enum";
import { Tokens } from "../../types/general";
import { FireteamResponse, SearchResultOfFireteamResponse, SearchResultOfFireteamSummary } from "../../types/interface";
export declare class Fireteam {
    private url;
    private headers;
    constructor(url: string, headers: {
        [key: string]: string;
    });
    /**
     * Gets a count of all active non-public fireteams for the specified clan. Maximum value returned is 25.
     * @param groupId The group id of the clan.
     * @returns A count of all active non-public fireteams for the specified clan. Maximum value returned is 25.
     */
    GetActivePrivateClanFireteamCount(groupId: string, tokens?: Tokens): Promise<APIResponse<number>>;
    /**
     * Gets a listing of all of this clan's fireteams that are have available slots. Caller is not checked for join criteria so caching is maximized.
     * @param activityType The activity type to filter by.
     * @param dateRange The date range to grab available fireteams.
     * @param groupId The group id of the clan.
     * @param page Zero based page
     * @param platform The platform filter.
     * @param publicOnly Determines public/private filtering.
     * @param slotFilter Filters based on available slots
     * @returns A listing of all of this clan's fireteams that are have available slots. Caller is not checked for join criteria so caching is maximized.
     */
    GetAvailableClanFireteams(activityType: DestinyActivityModeType, dateRange: string, groupId: string, page: number, platform: string, publicOnly: string, slotFilter: string, queryString?: {
        langFilter: string;
    }, tokens?: Tokens): Promise<APIResponse<SearchResultOfFireteamSummary>>;
    /**
     * Gets a listing of all public fireteams starting now with open slots.
     * @param activityType The activity type to filter by.
     * @param dateRange The date range to grab available fireteams.
     * @param page Zero based page
     * @param platform The platform filter.
     * @param slotFilter The platform filter.
     * @returns A listing of all public fireteams starting now with open slots.
     */
    SearchPublicAvailableClanFireteams(activityType: DestinyActivityModeType, dateRange: string, page: number, platform: string, slotFilter: string, queryString?: {
        langFilter: string;
    }, tokens?: Tokens): Promise<APIResponse<SearchResultOfFireteamSummary>>;
    /**
     * Gets a listing of all fireteams that caller is an applicant, a member, or an alternate of.
     * @param groupId The group id of the clan. (This parameter is ignored unless the optional query parameter groupFilter is true).
     * @param includeClosed If true, return fireteams that have been closed.
     * @param page Deprecated parameter, ignored.
     * @param platform The platform filter.
     * @returns A listing of all fireteams that caller is an applicant, a member, or an alternate of.
     */
    GetMyClanFireteams(groupId: string, includeClosed: boolean, page: number, platform: string, queryString?: {
        groupFilter?: boolean;
        langFilter?: string;
    }, tokens?: Tokens): Promise<APIResponse<SearchResultOfFireteamResponse>>;
    /**
     * Gets a specific fireteam.
     * @param fireteamId The unique id of the fireteam.
     * @param groupId The group id of the clan.
     * @returns Gets a specific fireteam.
     */
    GetClanFireteam(fireteamId: string, groupId: string, tokens?: Tokens): Promise<APIResponse<FireteamResponse>>;
}
