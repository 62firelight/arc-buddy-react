"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DestinyClass = exports.DestinyAmmunitionType = exports.EquippingItemBlockAttributes = exports.DestinyStatCategory = exports.DestinyStatAggregationType = exports.ItemLocation = exports.BucketCategory = exports.BucketScope = exports.TierType = exports.DestinySocketCategoryStyle = exports.DestinySocketVisibility = exports.SocketTypeActionType = exports.DestinyProgressionStepDisplayEffect = exports.DestinyProgressionScope = exports.DestinyProgressionRewardItemState = exports.ForumFlagsEnum = exports.ForumPostCategoryEnums = exports.CommunityContentSortMode = exports.ForumPostSortEnum = exports.ForumRecruitmentToneLabel = exports.ForumRecruitmentIntensityLabel = exports.ForumPostPopularity = exports.ForumMediaType = exports.ForumTopicsSortEnum = exports.ForumTopicsQuickDateEnum = exports.ForumTopicsCategoryFiltersEnum = exports.ContentPropertyDataTypeEnum = exports.GroupsForMemberFilter = exports.GroupApplicationResolveState = exports.GroupMemberCountFilter = exports.GroupSortBy = exports.GroupDateRange = exports.GroupPotentialMemberStatus = exports.GroupAllianceStatus = exports.RuntimeGroupMemberType = exports.HostGuidedGamesPermissionLevel = exports.Capabilities = exports.GroupPostPublicity = exports.MembershipOption = exports.GroupHomepage = exports.ChatSecuritySetting = exports.GroupType = exports.BungieCredentialType = exports.IgnoreLength = exports.IgnoreStatus = exports.BungieMembershipType = exports.OptInFlags = exports.DeveloperRole = exports.ApplicationStatus = exports.ApplicationScopes = void 0;
exports.DestinyGamePrivacySetting = exports.DestinyPartyMemberStates = exports.DestinyCollectibleState = exports.DestinyRecordState = exports.DestinyPresentationNodeState = exports.DestinyComponentType = exports.DestinyGameVersions = exports.ItemState = exports.TransferStatuses = exports.ItemBindStatus = exports.DestinyProgressionRewardItemAcquisitionBehavior = exports.DestinyBreakerType = exports.DestinyItemType = exports.SpecialItemType = exports.ItemPerkVisibility = exports.SocketPlugSources = exports.DestinyEnergyType = exports.PlugAvailabilityMode = exports.PlugUiStyles = exports.DestinyPresentationScreenStyle = exports.DestinyRecordToastStyle = exports.DestinyRecordValueStyle = exports.DestinyPresentationDisplayStyle = exports.DestinyScope = exports.DestinyPresentationNodeType = exports.DestinyRewardSourceCategory = exports.DestinyGraphNodeState = exports.DestinyItemSubType = exports.DestinyActivityModeCategory = exports.DestinyActivityModeType = exports.DestinyActivityNavPointType = exports.DestinyObjectiveUiStyle = exports.DestinyTalentNodeStepDamageTypes = exports.DestinyTalentNodeStepLightAbilities = exports.DestinyTalentNodeStepGuardianAttributes = exports.DestinyTalentNodeStepImpactEffects = exports.DestinyTalentNodeStepWeaponPerformances = exports.DamageType = exports.DestinyObjectiveGrantStyle = exports.DestinyUnlockValueUIStyle = exports.ActivityGraphNodeHighlightType = exports.DestinyGatingScope = exports.DestinyVendorItemRefundPolicy = exports.DestinyItemSortType = exports.VendorInteractionType = exports.DestinyVendorReplyType = exports.DestinyVendorInteractionRewardSelection = exports.VendorDisplayCategorySortOrder = exports.DestinyVendorProgressionType = exports.DestinyGender = void 0;
exports.GlobalAlertType = exports.GlobalAlertLevel = exports.PlatformFriendType = exports.FriendRelationshipState = exports.PresenceOnlineStateFlags = exports.PresenceStatus = exports.FireteamPlatformInviteResult = exports.FireteamSlotSearch = exports.FireteamPublicSearchOption = exports.FireteamPlatform = exports.FireteamDateRange = exports.TrendingEntryType = exports.ComponentPrivacySetting = exports.DropStateEnum = exports.PlatformErrorCodes = exports.AwaResponseReason = exports.AwaUserSelection = exports.AwaType = exports.PeriodType = exports.DestinyStatsMergeMethod = exports.UnitType = exports.DestinyStatsCategoryType = exports.DestinyStatsGroupType = exports.DestinySocketArrayType = exports.DestinyVendorItemState = exports.VendorItemStatus = exports.DestinyVendorFilter = exports.DestinyTalentNodeState = exports.EquipFailureReason = exports.DestinyActivityDifficultyTier = exports.DestinyMilestoneType = exports.DestinyMilestoneDisplayPreference = exports.DestinyRace = exports.DestinyJoinClosedReasons = void 0;
var ApplicationScopes;
(function (ApplicationScopes) {
    ApplicationScopes[ApplicationScopes["ReadBasicUserProfile"] = 1] = "ReadBasicUserProfile";
    ApplicationScopes[ApplicationScopes["ReadGroups"] = 2] = "ReadGroups";
    ApplicationScopes[ApplicationScopes["WriteGroups"] = 4] = "WriteGroups";
    ApplicationScopes[ApplicationScopes["AdminGroups"] = 8] = "AdminGroups";
    ApplicationScopes[ApplicationScopes["BnetWrite"] = 16] = "BnetWrite";
    ApplicationScopes[ApplicationScopes["MoveEquipDestinyItems"] = 32] = "MoveEquipDestinyItems";
    ApplicationScopes[ApplicationScopes["ReadDestinyInventoryAndVault"] = 64] = "ReadDestinyInventoryAndVault";
    ApplicationScopes[ApplicationScopes["ReadUserData"] = 128] = "ReadUserData";
    ApplicationScopes[ApplicationScopes["EditUserData"] = 256] = "EditUserData";
    ApplicationScopes[ApplicationScopes["ReadDestinyVendorsAndAdvisors"] = 512] = "ReadDestinyVendorsAndAdvisors";
    ApplicationScopes[ApplicationScopes["ReadAndApplyTokens"] = 1024] = "ReadAndApplyTokens";
    ApplicationScopes[ApplicationScopes["AdvancedWriteActions"] = 2048] = "AdvancedWriteActions";
    ApplicationScopes[ApplicationScopes["PartnerOfferGrant"] = 4096] = "PartnerOfferGrant";
    ApplicationScopes[ApplicationScopes["DestinyUnlockValueQuery"] = 8192] = "DestinyUnlockValueQuery";
    ApplicationScopes[ApplicationScopes["UserPiiRead"] = 16384] = "UserPiiRead";
})(ApplicationScopes = exports.ApplicationScopes || (exports.ApplicationScopes = {}));
var ApplicationStatus;
(function (ApplicationStatus) {
    ApplicationStatus[ApplicationStatus["None"] = 0] = "None";
    ApplicationStatus[ApplicationStatus["Private"] = 1] = "Private";
    ApplicationStatus[ApplicationStatus["Public"] = 2] = "Public";
    ApplicationStatus[ApplicationStatus["Disabled"] = 3] = "Disabled";
    ApplicationStatus[ApplicationStatus["Blocked"] = 4] = "Blocked";
})(ApplicationStatus = exports.ApplicationStatus || (exports.ApplicationStatus = {}));
var DeveloperRole;
(function (DeveloperRole) {
    DeveloperRole[DeveloperRole["None"] = 0] = "None";
    DeveloperRole[DeveloperRole["Owner"] = 1] = "Owner";
    DeveloperRole[DeveloperRole["TeamMember"] = 2] = "TeamMember";
})(DeveloperRole = exports.DeveloperRole || (exports.DeveloperRole = {}));
var OptInFlags;
(function (OptInFlags) {
    OptInFlags[OptInFlags["None"] = 0] = "None";
    OptInFlags[OptInFlags["Newsletter"] = 1] = "Newsletter";
    OptInFlags[OptInFlags["System"] = 2] = "System";
    OptInFlags[OptInFlags["Marketing"] = 4] = "Marketing";
    OptInFlags[OptInFlags["UserResearch"] = 8] = "UserResearch";
    OptInFlags[OptInFlags["CustomerService"] = 16] = "CustomerService";
    OptInFlags[OptInFlags["Social"] = 32] = "Social";
    OptInFlags[OptInFlags["PlayTests"] = 64] = "PlayTests";
    OptInFlags[OptInFlags["PlayTestsLocal"] = 128] = "PlayTestsLocal";
    OptInFlags[OptInFlags["Careers"] = 256] = "Careers";
})(OptInFlags = exports.OptInFlags || (exports.OptInFlags = {}));
var BungieMembershipType;
(function (BungieMembershipType) {
    BungieMembershipType[BungieMembershipType["None"] = 0] = "None";
    BungieMembershipType[BungieMembershipType["TigerXbox"] = 1] = "TigerXbox";
    BungieMembershipType[BungieMembershipType["TigerPsn"] = 2] = "TigerPsn";
    BungieMembershipType[BungieMembershipType["TigerSteam"] = 3] = "TigerSteam";
    BungieMembershipType[BungieMembershipType["TigerBlizzard"] = 4] = "TigerBlizzard";
    BungieMembershipType[BungieMembershipType["TigerStadia"] = 5] = "TigerStadia";
    BungieMembershipType[BungieMembershipType["TigerEgs"] = 6] = "TigerEgs";
    BungieMembershipType[BungieMembershipType["TigerDemon"] = 10] = "TigerDemon";
    BungieMembershipType[BungieMembershipType["BungieNext"] = 254] = "BungieNext";
    BungieMembershipType[BungieMembershipType["All"] = -1] = "All";
})(BungieMembershipType = exports.BungieMembershipType || (exports.BungieMembershipType = {}));
var IgnoreStatus;
(function (IgnoreStatus) {
    IgnoreStatus[IgnoreStatus["NotIgnored"] = 0] = "NotIgnored";
    IgnoreStatus[IgnoreStatus["IgnoredUser"] = 1] = "IgnoredUser";
    IgnoreStatus[IgnoreStatus["IgnoredGroup"] = 2] = "IgnoredGroup";
    IgnoreStatus[IgnoreStatus["IgnoredByGroup"] = 4] = "IgnoredByGroup";
    IgnoreStatus[IgnoreStatus["IgnoredPost"] = 8] = "IgnoredPost";
    IgnoreStatus[IgnoreStatus["IgnoredTag"] = 16] = "IgnoredTag";
    IgnoreStatus[IgnoreStatus["IgnoredGlobal"] = 32] = "IgnoredGlobal";
})(IgnoreStatus = exports.IgnoreStatus || (exports.IgnoreStatus = {}));
var IgnoreLength;
(function (IgnoreLength) {
    IgnoreLength[IgnoreLength["None"] = 0] = "None";
    IgnoreLength[IgnoreLength["Week"] = 1] = "Week";
    IgnoreLength[IgnoreLength["TwoWeeks"] = 2] = "TwoWeeks";
    IgnoreLength[IgnoreLength["ThreeWeeks"] = 3] = "ThreeWeeks";
    IgnoreLength[IgnoreLength["Month"] = 4] = "Month";
    IgnoreLength[IgnoreLength["ThreeMonths"] = 5] = "ThreeMonths";
    IgnoreLength[IgnoreLength["SixMonths"] = 6] = "SixMonths";
    IgnoreLength[IgnoreLength["Year"] = 7] = "Year";
    IgnoreLength[IgnoreLength["Forever"] = 8] = "Forever";
    IgnoreLength[IgnoreLength["ThreeMinutes"] = 9] = "ThreeMinutes";
    IgnoreLength[IgnoreLength["Hour"] = 10] = "Hour";
    IgnoreLength[IgnoreLength["ThirtyDays"] = 11] = "ThirtyDays";
})(IgnoreLength = exports.IgnoreLength || (exports.IgnoreLength = {}));
var BungieCredentialType;
(function (BungieCredentialType) {
    BungieCredentialType[BungieCredentialType["None"] = 0] = "None";
    BungieCredentialType[BungieCredentialType["Xuid"] = 1] = "Xuid";
    BungieCredentialType[BungieCredentialType["Psnid"] = 2] = "Psnid";
    BungieCredentialType[BungieCredentialType["Wlid"] = 3] = "Wlid";
    BungieCredentialType[BungieCredentialType["Fake"] = 4] = "Fake";
    BungieCredentialType[BungieCredentialType["Facebook"] = 5] = "Facebook";
    BungieCredentialType[BungieCredentialType["Google"] = 8] = "Google";
    BungieCredentialType[BungieCredentialType["Windows"] = 9] = "Windows";
    BungieCredentialType[BungieCredentialType["DemonId"] = 10] = "DemonId";
    BungieCredentialType[BungieCredentialType["SteamId"] = 12] = "SteamId";
    BungieCredentialType[BungieCredentialType["BattleNetId"] = 14] = "BattleNetId";
    BungieCredentialType[BungieCredentialType["StadiaId"] = 16] = "StadiaId";
    BungieCredentialType[BungieCredentialType["TwitchId"] = 18] = "TwitchId";
    BungieCredentialType[BungieCredentialType["EgsId"] = 20] = "EgsId";
})(BungieCredentialType = exports.BungieCredentialType || (exports.BungieCredentialType = {}));
var GroupType;
(function (GroupType) {
    GroupType[GroupType["General"] = 0] = "General";
    GroupType[GroupType["Clan"] = 1] = "Clan";
})(GroupType = exports.GroupType || (exports.GroupType = {}));
var ChatSecuritySetting;
(function (ChatSecuritySetting) {
    ChatSecuritySetting[ChatSecuritySetting["Group"] = 0] = "Group";
    ChatSecuritySetting[ChatSecuritySetting["Admins"] = 1] = "Admins";
})(ChatSecuritySetting = exports.ChatSecuritySetting || (exports.ChatSecuritySetting = {}));
var GroupHomepage;
(function (GroupHomepage) {
    GroupHomepage[GroupHomepage["Wall"] = 0] = "Wall";
    GroupHomepage[GroupHomepage["Forum"] = 1] = "Forum";
    GroupHomepage[GroupHomepage["AllianceForum"] = 2] = "AllianceForum";
})(GroupHomepage = exports.GroupHomepage || (exports.GroupHomepage = {}));
var MembershipOption;
(function (MembershipOption) {
    MembershipOption[MembershipOption["Reviewed"] = 0] = "Reviewed";
    MembershipOption[MembershipOption["Open"] = 1] = "Open";
    MembershipOption[MembershipOption["Closed"] = 2] = "Closed";
})(MembershipOption = exports.MembershipOption || (exports.MembershipOption = {}));
var GroupPostPublicity;
(function (GroupPostPublicity) {
    GroupPostPublicity[GroupPostPublicity["Public"] = 0] = "Public";
    GroupPostPublicity[GroupPostPublicity["Alliance"] = 1] = "Alliance";
    GroupPostPublicity[GroupPostPublicity["Private"] = 2] = "Private";
})(GroupPostPublicity = exports.GroupPostPublicity || (exports.GroupPostPublicity = {}));
var Capabilities;
(function (Capabilities) {
    Capabilities[Capabilities["None"] = 0] = "None";
    Capabilities[Capabilities["Leaderboards"] = 1] = "Leaderboards";
    Capabilities[Capabilities["Callsign"] = 2] = "Callsign";
    Capabilities[Capabilities["OptionalConversations"] = 4] = "OptionalConversations";
    Capabilities[Capabilities["ClanBanner"] = 8] = "ClanBanner";
    Capabilities[Capabilities["D2InvestmentData"] = 16] = "D2InvestmentData";
    Capabilities[Capabilities["Tags"] = 32] = "Tags";
    Capabilities[Capabilities["Alliances"] = 64] = "Alliances";
})(Capabilities = exports.Capabilities || (exports.Capabilities = {}));
var HostGuidedGamesPermissionLevel;
(function (HostGuidedGamesPermissionLevel) {
    HostGuidedGamesPermissionLevel[HostGuidedGamesPermissionLevel["None"] = 0] = "None";
    HostGuidedGamesPermissionLevel[HostGuidedGamesPermissionLevel["Beginner"] = 1] = "Beginner";
    HostGuidedGamesPermissionLevel[HostGuidedGamesPermissionLevel["Member"] = 2] = "Member";
})(HostGuidedGamesPermissionLevel = exports.HostGuidedGamesPermissionLevel || (exports.HostGuidedGamesPermissionLevel = {}));
var RuntimeGroupMemberType;
(function (RuntimeGroupMemberType) {
    RuntimeGroupMemberType[RuntimeGroupMemberType["None"] = 0] = "None";
    RuntimeGroupMemberType[RuntimeGroupMemberType["Beginner"] = 1] = "Beginner";
    RuntimeGroupMemberType[RuntimeGroupMemberType["Member"] = 2] = "Member";
    RuntimeGroupMemberType[RuntimeGroupMemberType["Admin"] = 3] = "Admin";
    RuntimeGroupMemberType[RuntimeGroupMemberType["ActingFounder"] = 4] = "ActingFounder";
    RuntimeGroupMemberType[RuntimeGroupMemberType["Founder"] = 5] = "Founder";
})(RuntimeGroupMemberType = exports.RuntimeGroupMemberType || (exports.RuntimeGroupMemberType = {}));
var GroupAllianceStatus;
(function (GroupAllianceStatus) {
    GroupAllianceStatus[GroupAllianceStatus["Unallied"] = 0] = "Unallied";
    GroupAllianceStatus[GroupAllianceStatus["Parent"] = 1] = "Parent";
    GroupAllianceStatus[GroupAllianceStatus["Child"] = 2] = "Child";
})(GroupAllianceStatus = exports.GroupAllianceStatus || (exports.GroupAllianceStatus = {}));
var GroupPotentialMemberStatus;
(function (GroupPotentialMemberStatus) {
    GroupPotentialMemberStatus[GroupPotentialMemberStatus["None"] = 0] = "None";
    GroupPotentialMemberStatus[GroupPotentialMemberStatus["Applicant"] = 1] = "Applicant";
    GroupPotentialMemberStatus[GroupPotentialMemberStatus["Invitee"] = 2] = "Invitee";
})(GroupPotentialMemberStatus = exports.GroupPotentialMemberStatus || (exports.GroupPotentialMemberStatus = {}));
var GroupDateRange;
(function (GroupDateRange) {
    GroupDateRange[GroupDateRange["All"] = 0] = "All";
    GroupDateRange[GroupDateRange["PastDay"] = 1] = "PastDay";
    GroupDateRange[GroupDateRange["PastWeek"] = 2] = "PastWeek";
    GroupDateRange[GroupDateRange["PastMonth"] = 3] = "PastMonth";
    GroupDateRange[GroupDateRange["PastYear"] = 4] = "PastYear";
})(GroupDateRange = exports.GroupDateRange || (exports.GroupDateRange = {}));
var GroupSortBy;
(function (GroupSortBy) {
    GroupSortBy[GroupSortBy["Name"] = 0] = "Name";
    GroupSortBy[GroupSortBy["Date"] = 1] = "Date";
    GroupSortBy[GroupSortBy["Popularity"] = 2] = "Popularity";
    GroupSortBy[GroupSortBy["Id"] = 3] = "Id";
})(GroupSortBy = exports.GroupSortBy || (exports.GroupSortBy = {}));
var GroupMemberCountFilter;
(function (GroupMemberCountFilter) {
    GroupMemberCountFilter[GroupMemberCountFilter["All"] = 0] = "All";
    GroupMemberCountFilter[GroupMemberCountFilter["OneToTen"] = 1] = "OneToTen";
    GroupMemberCountFilter[GroupMemberCountFilter["ElevenToOneHundred"] = 2] = "ElevenToOneHundred";
    GroupMemberCountFilter[GroupMemberCountFilter["GreaterThanOneHundred"] = 3] = "GreaterThanOneHundred";
})(GroupMemberCountFilter = exports.GroupMemberCountFilter || (exports.GroupMemberCountFilter = {}));
var GroupApplicationResolveState;
(function (GroupApplicationResolveState) {
    GroupApplicationResolveState[GroupApplicationResolveState["Unresolved"] = 0] = "Unresolved";
    GroupApplicationResolveState[GroupApplicationResolveState["Accepted"] = 1] = "Accepted";
    GroupApplicationResolveState[GroupApplicationResolveState["Denied"] = 2] = "Denied";
    GroupApplicationResolveState[GroupApplicationResolveState["Rescinded"] = 3] = "Rescinded";
})(GroupApplicationResolveState = exports.GroupApplicationResolveState || (exports.GroupApplicationResolveState = {}));
var GroupsForMemberFilter;
(function (GroupsForMemberFilter) {
    GroupsForMemberFilter[GroupsForMemberFilter["All"] = 0] = "All";
    GroupsForMemberFilter[GroupsForMemberFilter["Founded"] = 1] = "Founded";
    GroupsForMemberFilter[GroupsForMemberFilter["NonFounded"] = 2] = "NonFounded";
})(GroupsForMemberFilter = exports.GroupsForMemberFilter || (exports.GroupsForMemberFilter = {}));
var ContentPropertyDataTypeEnum;
(function (ContentPropertyDataTypeEnum) {
    ContentPropertyDataTypeEnum[ContentPropertyDataTypeEnum["None"] = 0] = "None";
    ContentPropertyDataTypeEnum[ContentPropertyDataTypeEnum["Plaintext"] = 1] = "Plaintext";
    ContentPropertyDataTypeEnum[ContentPropertyDataTypeEnum["Html"] = 2] = "Html";
    ContentPropertyDataTypeEnum[ContentPropertyDataTypeEnum["Dropdown"] = 3] = "Dropdown";
    ContentPropertyDataTypeEnum[ContentPropertyDataTypeEnum["List"] = 4] = "List";
    ContentPropertyDataTypeEnum[ContentPropertyDataTypeEnum["Json"] = 5] = "Json";
    ContentPropertyDataTypeEnum[ContentPropertyDataTypeEnum["Content"] = 6] = "Content";
    ContentPropertyDataTypeEnum[ContentPropertyDataTypeEnum["Representation"] = 7] = "Representation";
    ContentPropertyDataTypeEnum[ContentPropertyDataTypeEnum["Set"] = 8] = "Set";
    ContentPropertyDataTypeEnum[ContentPropertyDataTypeEnum["File"] = 9] = "File";
    ContentPropertyDataTypeEnum[ContentPropertyDataTypeEnum["FolderSet"] = 10] = "FolderSet";
    ContentPropertyDataTypeEnum[ContentPropertyDataTypeEnum["Date"] = 11] = "Date";
    ContentPropertyDataTypeEnum[ContentPropertyDataTypeEnum["MultilinePlaintext"] = 12] = "MultilinePlaintext";
    ContentPropertyDataTypeEnum[ContentPropertyDataTypeEnum["DestinyContent"] = 13] = "DestinyContent";
    ContentPropertyDataTypeEnum[ContentPropertyDataTypeEnum["Color"] = 14] = "Color";
})(ContentPropertyDataTypeEnum = exports.ContentPropertyDataTypeEnum || (exports.ContentPropertyDataTypeEnum = {}));
var ForumTopicsCategoryFiltersEnum;
(function (ForumTopicsCategoryFiltersEnum) {
    ForumTopicsCategoryFiltersEnum[ForumTopicsCategoryFiltersEnum["None"] = 0] = "None";
    ForumTopicsCategoryFiltersEnum[ForumTopicsCategoryFiltersEnum["Links"] = 1] = "Links";
    ForumTopicsCategoryFiltersEnum[ForumTopicsCategoryFiltersEnum["Questions"] = 2] = "Questions";
    ForumTopicsCategoryFiltersEnum[ForumTopicsCategoryFiltersEnum["AnsweredQuestions"] = 4] = "AnsweredQuestions";
    ForumTopicsCategoryFiltersEnum[ForumTopicsCategoryFiltersEnum["Media"] = 8] = "Media";
    ForumTopicsCategoryFiltersEnum[ForumTopicsCategoryFiltersEnum["TextOnly"] = 16] = "TextOnly";
    ForumTopicsCategoryFiltersEnum[ForumTopicsCategoryFiltersEnum["Announcement"] = 32] = "Announcement";
    ForumTopicsCategoryFiltersEnum[ForumTopicsCategoryFiltersEnum["BungieOfficial"] = 64] = "BungieOfficial";
    ForumTopicsCategoryFiltersEnum[ForumTopicsCategoryFiltersEnum["Polls"] = 128] = "Polls";
})(ForumTopicsCategoryFiltersEnum = exports.ForumTopicsCategoryFiltersEnum || (exports.ForumTopicsCategoryFiltersEnum = {}));
var ForumTopicsQuickDateEnum;
(function (ForumTopicsQuickDateEnum) {
    ForumTopicsQuickDateEnum[ForumTopicsQuickDateEnum["All"] = 0] = "All";
    ForumTopicsQuickDateEnum[ForumTopicsQuickDateEnum["LastYear"] = 1] = "LastYear";
    ForumTopicsQuickDateEnum[ForumTopicsQuickDateEnum["LastMonth"] = 2] = "LastMonth";
    ForumTopicsQuickDateEnum[ForumTopicsQuickDateEnum["LastWeek"] = 3] = "LastWeek";
    ForumTopicsQuickDateEnum[ForumTopicsQuickDateEnum["LastDay"] = 4] = "LastDay";
})(ForumTopicsQuickDateEnum = exports.ForumTopicsQuickDateEnum || (exports.ForumTopicsQuickDateEnum = {}));
var ForumTopicsSortEnum;
(function (ForumTopicsSortEnum) {
    ForumTopicsSortEnum[ForumTopicsSortEnum["Default"] = 0] = "Default";
    ForumTopicsSortEnum[ForumTopicsSortEnum["LastReplied"] = 1] = "LastReplied";
    ForumTopicsSortEnum[ForumTopicsSortEnum["MostReplied"] = 2] = "MostReplied";
    ForumTopicsSortEnum[ForumTopicsSortEnum["Popularity"] = 3] = "Popularity";
    ForumTopicsSortEnum[ForumTopicsSortEnum["Controversiality"] = 4] = "Controversiality";
    ForumTopicsSortEnum[ForumTopicsSortEnum["Liked"] = 5] = "Liked";
    ForumTopicsSortEnum[ForumTopicsSortEnum["HighestRated"] = 6] = "HighestRated";
    ForumTopicsSortEnum[ForumTopicsSortEnum["MostUpvoted"] = 7] = "MostUpvoted";
})(ForumTopicsSortEnum = exports.ForumTopicsSortEnum || (exports.ForumTopicsSortEnum = {}));
var ForumMediaType;
(function (ForumMediaType) {
    ForumMediaType[ForumMediaType["None"] = 0] = "None";
    ForumMediaType[ForumMediaType["Image"] = 1] = "Image";
    ForumMediaType[ForumMediaType["Video"] = 2] = "Video";
    ForumMediaType[ForumMediaType["Youtube"] = 3] = "Youtube";
})(ForumMediaType = exports.ForumMediaType || (exports.ForumMediaType = {}));
var ForumPostPopularity;
(function (ForumPostPopularity) {
    ForumPostPopularity[ForumPostPopularity["Empty"] = 0] = "Empty";
    ForumPostPopularity[ForumPostPopularity["Default"] = 1] = "Default";
    ForumPostPopularity[ForumPostPopularity["Discussed"] = 2] = "Discussed";
    ForumPostPopularity[ForumPostPopularity["CoolStory"] = 3] = "CoolStory";
    ForumPostPopularity[ForumPostPopularity["HeatingUp"] = 4] = "HeatingUp";
    ForumPostPopularity[ForumPostPopularity["Hot"] = 5] = "Hot";
})(ForumPostPopularity = exports.ForumPostPopularity || (exports.ForumPostPopularity = {}));
var ForumRecruitmentIntensityLabel;
(function (ForumRecruitmentIntensityLabel) {
    ForumRecruitmentIntensityLabel[ForumRecruitmentIntensityLabel["None"] = 0] = "None";
    ForumRecruitmentIntensityLabel[ForumRecruitmentIntensityLabel["Casual"] = 1] = "Casual";
    ForumRecruitmentIntensityLabel[ForumRecruitmentIntensityLabel["Professional"] = 2] = "Professional";
})(ForumRecruitmentIntensityLabel = exports.ForumRecruitmentIntensityLabel || (exports.ForumRecruitmentIntensityLabel = {}));
var ForumRecruitmentToneLabel;
(function (ForumRecruitmentToneLabel) {
    ForumRecruitmentToneLabel[ForumRecruitmentToneLabel["None"] = 0] = "None";
    ForumRecruitmentToneLabel[ForumRecruitmentToneLabel["FamilyFriendly"] = 1] = "FamilyFriendly";
    ForumRecruitmentToneLabel[ForumRecruitmentToneLabel["Rowdy"] = 2] = "Rowdy";
})(ForumRecruitmentToneLabel = exports.ForumRecruitmentToneLabel || (exports.ForumRecruitmentToneLabel = {}));
var ForumPostSortEnum;
(function (ForumPostSortEnum) {
    ForumPostSortEnum[ForumPostSortEnum["Default"] = 0] = "Default";
    ForumPostSortEnum[ForumPostSortEnum["OldestFirst"] = 1] = "OldestFirst";
})(ForumPostSortEnum = exports.ForumPostSortEnum || (exports.ForumPostSortEnum = {}));
var CommunityContentSortMode;
(function (CommunityContentSortMode) {
    CommunityContentSortMode[CommunityContentSortMode["Trending"] = 0] = "Trending";
    CommunityContentSortMode[CommunityContentSortMode["Latest"] = 1] = "Latest";
    CommunityContentSortMode[CommunityContentSortMode["HighestRated"] = 2] = "HighestRated";
})(CommunityContentSortMode = exports.CommunityContentSortMode || (exports.CommunityContentSortMode = {}));
var ForumPostCategoryEnums;
(function (ForumPostCategoryEnums) {
    ForumPostCategoryEnums[ForumPostCategoryEnums["None"] = 0] = "None";
    ForumPostCategoryEnums[ForumPostCategoryEnums["TextOnly"] = 1] = "TextOnly";
    ForumPostCategoryEnums[ForumPostCategoryEnums["Media"] = 2] = "Media";
    ForumPostCategoryEnums[ForumPostCategoryEnums["Link"] = 4] = "Link";
    ForumPostCategoryEnums[ForumPostCategoryEnums["Poll"] = 8] = "Poll";
    ForumPostCategoryEnums[ForumPostCategoryEnums["Question"] = 16] = "Question";
    ForumPostCategoryEnums[ForumPostCategoryEnums["Answered"] = 32] = "Answered";
    ForumPostCategoryEnums[ForumPostCategoryEnums["Announcement"] = 64] = "Announcement";
    ForumPostCategoryEnums[ForumPostCategoryEnums["ContentComment"] = 128] = "ContentComment";
    ForumPostCategoryEnums[ForumPostCategoryEnums["BungieOfficial"] = 256] = "BungieOfficial";
    ForumPostCategoryEnums[ForumPostCategoryEnums["NinjaOfficial"] = 512] = "NinjaOfficial";
    ForumPostCategoryEnums[ForumPostCategoryEnums["Recruitment"] = 1024] = "Recruitment";
})(ForumPostCategoryEnums = exports.ForumPostCategoryEnums || (exports.ForumPostCategoryEnums = {}));
var ForumFlagsEnum;
(function (ForumFlagsEnum) {
    ForumFlagsEnum[ForumFlagsEnum["None"] = 0] = "None";
    ForumFlagsEnum[ForumFlagsEnum["BungieStaffPost"] = 1] = "BungieStaffPost";
    ForumFlagsEnum[ForumFlagsEnum["ForumNinjaPost"] = 2] = "ForumNinjaPost";
    ForumFlagsEnum[ForumFlagsEnum["ForumMentorPost"] = 4] = "ForumMentorPost";
    ForumFlagsEnum[ForumFlagsEnum["TopicBungieStaffPosted"] = 8] = "TopicBungieStaffPosted";
    ForumFlagsEnum[ForumFlagsEnum["TopicBungieVolunteerPosted"] = 16] = "TopicBungieVolunteerPosted";
    ForumFlagsEnum[ForumFlagsEnum["QuestionAnsweredByBungie"] = 32] = "QuestionAnsweredByBungie";
    ForumFlagsEnum[ForumFlagsEnum["QuestionAnsweredByNinja"] = 64] = "QuestionAnsweredByNinja";
    ForumFlagsEnum[ForumFlagsEnum["CommunityContent"] = 128] = "CommunityContent";
})(ForumFlagsEnum = exports.ForumFlagsEnum || (exports.ForumFlagsEnum = {}));
var DestinyProgressionRewardItemState;
(function (DestinyProgressionRewardItemState) {
    DestinyProgressionRewardItemState[DestinyProgressionRewardItemState["None"] = 0] = "None";
    DestinyProgressionRewardItemState[DestinyProgressionRewardItemState["Invisible"] = 1] = "Invisible";
    DestinyProgressionRewardItemState[DestinyProgressionRewardItemState["Earned"] = 2] = "Earned";
    DestinyProgressionRewardItemState[DestinyProgressionRewardItemState["Claimed"] = 4] = "Claimed";
    DestinyProgressionRewardItemState[DestinyProgressionRewardItemState["ClaimAllowed"] = 8] = "ClaimAllowed";
})(DestinyProgressionRewardItemState = exports.DestinyProgressionRewardItemState || (exports.DestinyProgressionRewardItemState = {}));
var DestinyProgressionScope;
(function (DestinyProgressionScope) {
    DestinyProgressionScope[DestinyProgressionScope["Account"] = 0] = "Account";
    DestinyProgressionScope[DestinyProgressionScope["Character"] = 1] = "Character";
    DestinyProgressionScope[DestinyProgressionScope["Clan"] = 2] = "Clan";
    DestinyProgressionScope[DestinyProgressionScope["Item"] = 3] = "Item";
    DestinyProgressionScope[DestinyProgressionScope["ImplicitFromEquipment"] = 4] = "ImplicitFromEquipment";
    DestinyProgressionScope[DestinyProgressionScope["Mapped"] = 5] = "Mapped";
    DestinyProgressionScope[DestinyProgressionScope["MappedAggregate"] = 6] = "MappedAggregate";
    DestinyProgressionScope[DestinyProgressionScope["MappedStat"] = 7] = "MappedStat";
    DestinyProgressionScope[DestinyProgressionScope["MappedUnlockValue"] = 8] = "MappedUnlockValue";
})(DestinyProgressionScope = exports.DestinyProgressionScope || (exports.DestinyProgressionScope = {}));
var DestinyProgressionStepDisplayEffect;
(function (DestinyProgressionStepDisplayEffect) {
    DestinyProgressionStepDisplayEffect[DestinyProgressionStepDisplayEffect["None"] = 0] = "None";
    DestinyProgressionStepDisplayEffect[DestinyProgressionStepDisplayEffect["Character"] = 1] = "Character";
    DestinyProgressionStepDisplayEffect[DestinyProgressionStepDisplayEffect["Item"] = 2] = "Item";
})(DestinyProgressionStepDisplayEffect = exports.DestinyProgressionStepDisplayEffect || (exports.DestinyProgressionStepDisplayEffect = {}));
var SocketTypeActionType;
(function (SocketTypeActionType) {
    SocketTypeActionType[SocketTypeActionType["InsertPlug"] = 0] = "InsertPlug";
    SocketTypeActionType[SocketTypeActionType["InfuseItem"] = 1] = "InfuseItem";
    SocketTypeActionType[SocketTypeActionType["ReinitializeSocket"] = 2] = "ReinitializeSocket";
})(SocketTypeActionType = exports.SocketTypeActionType || (exports.SocketTypeActionType = {}));
var DestinySocketVisibility;
(function (DestinySocketVisibility) {
    DestinySocketVisibility[DestinySocketVisibility["Visible"] = 0] = "Visible";
    DestinySocketVisibility[DestinySocketVisibility["Hidden"] = 1] = "Hidden";
    DestinySocketVisibility[DestinySocketVisibility["HiddenWhenEmpty"] = 2] = "HiddenWhenEmpty";
    DestinySocketVisibility[DestinySocketVisibility["HiddenIfNoPlugsAvailable"] = 3] = "HiddenIfNoPlugsAvailable";
})(DestinySocketVisibility = exports.DestinySocketVisibility || (exports.DestinySocketVisibility = {}));
var DestinySocketCategoryStyle;
(function (DestinySocketCategoryStyle) {
    DestinySocketCategoryStyle[DestinySocketCategoryStyle["Unknown"] = 0] = "Unknown";
    DestinySocketCategoryStyle[DestinySocketCategoryStyle["Reusable"] = 1] = "Reusable";
    DestinySocketCategoryStyle[DestinySocketCategoryStyle["Consumable"] = 2] = "Consumable";
    DestinySocketCategoryStyle[DestinySocketCategoryStyle["Unlockable"] = 3] = "Unlockable";
    DestinySocketCategoryStyle[DestinySocketCategoryStyle["Intrinsic"] = 4] = "Intrinsic";
    DestinySocketCategoryStyle[DestinySocketCategoryStyle["EnergyMeter"] = 5] = "EnergyMeter";
    DestinySocketCategoryStyle[DestinySocketCategoryStyle["LargePerk"] = 6] = "LargePerk";
    DestinySocketCategoryStyle[DestinySocketCategoryStyle["Abilities"] = 7] = "Abilities";
    DestinySocketCategoryStyle[DestinySocketCategoryStyle["Supers"] = 8] = "Supers";
})(DestinySocketCategoryStyle = exports.DestinySocketCategoryStyle || (exports.DestinySocketCategoryStyle = {}));
var TierType;
(function (TierType) {
    TierType[TierType["Unknown"] = 0] = "Unknown";
    TierType[TierType["Currency"] = 1] = "Currency";
    TierType[TierType["Basic"] = 2] = "Basic";
    TierType[TierType["Common"] = 3] = "Common";
    TierType[TierType["Rare"] = 4] = "Rare";
    TierType[TierType["Superior"] = 5] = "Superior";
    TierType[TierType["Exotic"] = 6] = "Exotic";
})(TierType = exports.TierType || (exports.TierType = {}));
var BucketScope;
(function (BucketScope) {
    BucketScope[BucketScope["Character"] = 0] = "Character";
    BucketScope[BucketScope["Account"] = 1] = "Account";
})(BucketScope = exports.BucketScope || (exports.BucketScope = {}));
var BucketCategory;
(function (BucketCategory) {
    BucketCategory[BucketCategory["Invisible"] = 0] = "Invisible";
    BucketCategory[BucketCategory["Item"] = 1] = "Item";
    BucketCategory[BucketCategory["Currency"] = 2] = "Currency";
    BucketCategory[BucketCategory["Equippable"] = 3] = "Equippable";
    BucketCategory[BucketCategory["Ignored"] = 4] = "Ignored";
})(BucketCategory = exports.BucketCategory || (exports.BucketCategory = {}));
var ItemLocation;
(function (ItemLocation) {
    ItemLocation[ItemLocation["Unknown"] = 0] = "Unknown";
    ItemLocation[ItemLocation["Inventory"] = 1] = "Inventory";
    ItemLocation[ItemLocation["Vault"] = 2] = "Vault";
    ItemLocation[ItemLocation["Vendor"] = 3] = "Vendor";
    ItemLocation[ItemLocation["Postmaster"] = 4] = "Postmaster";
})(ItemLocation = exports.ItemLocation || (exports.ItemLocation = {}));
var DestinyStatAggregationType;
(function (DestinyStatAggregationType) {
    DestinyStatAggregationType[DestinyStatAggregationType["CharacterAverage"] = 0] = "CharacterAverage";
    DestinyStatAggregationType[DestinyStatAggregationType["Character"] = 1] = "Character";
    DestinyStatAggregationType[DestinyStatAggregationType["Item"] = 2] = "Item";
})(DestinyStatAggregationType = exports.DestinyStatAggregationType || (exports.DestinyStatAggregationType = {}));
var DestinyStatCategory;
(function (DestinyStatCategory) {
    DestinyStatCategory[DestinyStatCategory["Gameplay"] = 0] = "Gameplay";
    DestinyStatCategory[DestinyStatCategory["Weapon"] = 1] = "Weapon";
    DestinyStatCategory[DestinyStatCategory["Defense"] = 2] = "Defense";
    DestinyStatCategory[DestinyStatCategory["Primary"] = 3] = "Primary";
})(DestinyStatCategory = exports.DestinyStatCategory || (exports.DestinyStatCategory = {}));
var EquippingItemBlockAttributes;
(function (EquippingItemBlockAttributes) {
    EquippingItemBlockAttributes[EquippingItemBlockAttributes["None"] = 0] = "None";
    EquippingItemBlockAttributes[EquippingItemBlockAttributes["EquipOnAcquire"] = 1] = "EquipOnAcquire";
})(EquippingItemBlockAttributes = exports.EquippingItemBlockAttributes || (exports.EquippingItemBlockAttributes = {}));
var DestinyAmmunitionType;
(function (DestinyAmmunitionType) {
    DestinyAmmunitionType[DestinyAmmunitionType["None"] = 0] = "None";
    DestinyAmmunitionType[DestinyAmmunitionType["Primary"] = 1] = "Primary";
    DestinyAmmunitionType[DestinyAmmunitionType["Special"] = 2] = "Special";
    DestinyAmmunitionType[DestinyAmmunitionType["Heavy"] = 3] = "Heavy";
    DestinyAmmunitionType[DestinyAmmunitionType["Unknown"] = 4] = "Unknown";
})(DestinyAmmunitionType = exports.DestinyAmmunitionType || (exports.DestinyAmmunitionType = {}));
var DestinyClass;
(function (DestinyClass) {
    DestinyClass[DestinyClass["Titan"] = 0] = "Titan";
    DestinyClass[DestinyClass["Hunter"] = 1] = "Hunter";
    DestinyClass[DestinyClass["Warlock"] = 2] = "Warlock";
    DestinyClass[DestinyClass["Unknown"] = 3] = "Unknown";
})(DestinyClass = exports.DestinyClass || (exports.DestinyClass = {}));
var DestinyGender;
(function (DestinyGender) {
    DestinyGender[DestinyGender["Male"] = 0] = "Male";
    DestinyGender[DestinyGender["Female"] = 1] = "Female";
    DestinyGender[DestinyGender["Unknown"] = 2] = "Unknown";
})(DestinyGender = exports.DestinyGender || (exports.DestinyGender = {}));
var DestinyVendorProgressionType;
(function (DestinyVendorProgressionType) {
    DestinyVendorProgressionType[DestinyVendorProgressionType["Default"] = 0] = "Default";
    DestinyVendorProgressionType[DestinyVendorProgressionType["Ritual"] = 1] = "Ritual";
    DestinyVendorProgressionType[DestinyVendorProgressionType["NoSeasonalRefresh"] = 2] = "NoSeasonalRefresh";
})(DestinyVendorProgressionType = exports.DestinyVendorProgressionType || (exports.DestinyVendorProgressionType = {}));
var VendorDisplayCategorySortOrder;
(function (VendorDisplayCategorySortOrder) {
    VendorDisplayCategorySortOrder[VendorDisplayCategorySortOrder["Default"] = 0] = "Default";
    VendorDisplayCategorySortOrder[VendorDisplayCategorySortOrder["SortByTier"] = 1] = "SortByTier";
})(VendorDisplayCategorySortOrder = exports.VendorDisplayCategorySortOrder || (exports.VendorDisplayCategorySortOrder = {}));
var DestinyVendorInteractionRewardSelection;
(function (DestinyVendorInteractionRewardSelection) {
    DestinyVendorInteractionRewardSelection[DestinyVendorInteractionRewardSelection["None"] = 0] = "None";
    DestinyVendorInteractionRewardSelection[DestinyVendorInteractionRewardSelection["One"] = 1] = "One";
    DestinyVendorInteractionRewardSelection[DestinyVendorInteractionRewardSelection["All"] = 2] = "All";
})(DestinyVendorInteractionRewardSelection = exports.DestinyVendorInteractionRewardSelection || (exports.DestinyVendorInteractionRewardSelection = {}));
var DestinyVendorReplyType;
(function (DestinyVendorReplyType) {
    DestinyVendorReplyType[DestinyVendorReplyType["Accept"] = 0] = "Accept";
    DestinyVendorReplyType[DestinyVendorReplyType["Decline"] = 1] = "Decline";
    DestinyVendorReplyType[DestinyVendorReplyType["Complete"] = 2] = "Complete";
})(DestinyVendorReplyType = exports.DestinyVendorReplyType || (exports.DestinyVendorReplyType = {}));
var VendorInteractionType;
(function (VendorInteractionType) {
    VendorInteractionType[VendorInteractionType["Unknown"] = 0] = "Unknown";
    VendorInteractionType[VendorInteractionType["Undefined"] = 1] = "Undefined";
    VendorInteractionType[VendorInteractionType["QuestComplete"] = 2] = "QuestComplete";
    VendorInteractionType[VendorInteractionType["QuestContinue"] = 3] = "QuestContinue";
    VendorInteractionType[VendorInteractionType["ReputationPreview"] = 4] = "ReputationPreview";
    VendorInteractionType[VendorInteractionType["RankUpReward"] = 5] = "RankUpReward";
    VendorInteractionType[VendorInteractionType["TokenTurnIn"] = 6] = "TokenTurnIn";
    VendorInteractionType[VendorInteractionType["QuestAccept"] = 7] = "QuestAccept";
    VendorInteractionType[VendorInteractionType["ProgressTab"] = 8] = "ProgressTab";
    VendorInteractionType[VendorInteractionType["End"] = 9] = "End";
    VendorInteractionType[VendorInteractionType["Start"] = 10] = "Start";
})(VendorInteractionType = exports.VendorInteractionType || (exports.VendorInteractionType = {}));
var DestinyItemSortType;
(function (DestinyItemSortType) {
    DestinyItemSortType[DestinyItemSortType["ItemId"] = 0] = "ItemId";
    DestinyItemSortType[DestinyItemSortType["Timestamp"] = 1] = "Timestamp";
    DestinyItemSortType[DestinyItemSortType["StackSize"] = 2] = "StackSize";
})(DestinyItemSortType = exports.DestinyItemSortType || (exports.DestinyItemSortType = {}));
var DestinyVendorItemRefundPolicy;
(function (DestinyVendorItemRefundPolicy) {
    DestinyVendorItemRefundPolicy[DestinyVendorItemRefundPolicy["NotRefundable"] = 0] = "NotRefundable";
    DestinyVendorItemRefundPolicy[DestinyVendorItemRefundPolicy["DeletesItem"] = 1] = "DeletesItem";
    DestinyVendorItemRefundPolicy[DestinyVendorItemRefundPolicy["RevokesLicense"] = 2] = "RevokesLicense";
})(DestinyVendorItemRefundPolicy = exports.DestinyVendorItemRefundPolicy || (exports.DestinyVendorItemRefundPolicy = {}));
var DestinyGatingScope;
(function (DestinyGatingScope) {
    DestinyGatingScope[DestinyGatingScope["None"] = 0] = "None";
    DestinyGatingScope[DestinyGatingScope["Global"] = 1] = "Global";
    DestinyGatingScope[DestinyGatingScope["Clan"] = 2] = "Clan";
    DestinyGatingScope[DestinyGatingScope["Profile"] = 3] = "Profile";
    DestinyGatingScope[DestinyGatingScope["Character"] = 4] = "Character";
    DestinyGatingScope[DestinyGatingScope["Item"] = 5] = "Item";
    DestinyGatingScope[DestinyGatingScope["AssumedWorstCase"] = 6] = "AssumedWorstCase";
})(DestinyGatingScope = exports.DestinyGatingScope || (exports.DestinyGatingScope = {}));
var ActivityGraphNodeHighlightType;
(function (ActivityGraphNodeHighlightType) {
    ActivityGraphNodeHighlightType[ActivityGraphNodeHighlightType["None"] = 0] = "None";
    ActivityGraphNodeHighlightType[ActivityGraphNodeHighlightType["Normal"] = 1] = "Normal";
    ActivityGraphNodeHighlightType[ActivityGraphNodeHighlightType["Hyper"] = 2] = "Hyper";
    ActivityGraphNodeHighlightType[ActivityGraphNodeHighlightType["Comet"] = 3] = "Comet";
    ActivityGraphNodeHighlightType[ActivityGraphNodeHighlightType["RiseOfIron"] = 4] = "RiseOfIron";
})(ActivityGraphNodeHighlightType = exports.ActivityGraphNodeHighlightType || (exports.ActivityGraphNodeHighlightType = {}));
var DestinyUnlockValueUIStyle;
(function (DestinyUnlockValueUIStyle) {
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["Automatic"] = 0] = "Automatic";
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["Fraction"] = 1] = "Fraction";
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["Checkbox"] = 2] = "Checkbox";
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["Percentage"] = 3] = "Percentage";
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["DateTime"] = 4] = "DateTime";
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["FractionFloat"] = 5] = "FractionFloat";
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["Integer"] = 6] = "Integer";
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["TimeDuration"] = 7] = "TimeDuration";
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["Hidden"] = 8] = "Hidden";
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["Multiplier"] = 9] = "Multiplier";
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["GreenPips"] = 10] = "GreenPips";
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["RedPips"] = 11] = "RedPips";
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["ExplicitPercentage"] = 12] = "ExplicitPercentage";
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["RawFloat"] = 13] = "RawFloat";
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["LevelAndReward"] = 14] = "LevelAndReward";
})(DestinyUnlockValueUIStyle = exports.DestinyUnlockValueUIStyle || (exports.DestinyUnlockValueUIStyle = {}));
var DestinyObjectiveGrantStyle;
(function (DestinyObjectiveGrantStyle) {
    DestinyObjectiveGrantStyle[DestinyObjectiveGrantStyle["WhenIncomplete"] = 0] = "WhenIncomplete";
    DestinyObjectiveGrantStyle[DestinyObjectiveGrantStyle["WhenComplete"] = 1] = "WhenComplete";
    DestinyObjectiveGrantStyle[DestinyObjectiveGrantStyle["Always"] = 2] = "Always";
})(DestinyObjectiveGrantStyle = exports.DestinyObjectiveGrantStyle || (exports.DestinyObjectiveGrantStyle = {}));
var DamageType;
(function (DamageType) {
    DamageType[DamageType["None"] = 0] = "None";
    DamageType[DamageType["Kinetic"] = 1] = "Kinetic";
    DamageType[DamageType["Arc"] = 2] = "Arc";
    DamageType[DamageType["Thermal"] = 3] = "Thermal";
    DamageType[DamageType["Void"] = 4] = "Void";
    DamageType[DamageType["Raid"] = 5] = "Raid";
    DamageType[DamageType["Stasis"] = 6] = "Stasis";
})(DamageType = exports.DamageType || (exports.DamageType = {}));
var DestinyTalentNodeStepWeaponPerformances;
(function (DestinyTalentNodeStepWeaponPerformances) {
    DestinyTalentNodeStepWeaponPerformances[DestinyTalentNodeStepWeaponPerformances["None"] = 0] = "None";
    DestinyTalentNodeStepWeaponPerformances[DestinyTalentNodeStepWeaponPerformances["RateOfFire"] = 1] = "RateOfFire";
    DestinyTalentNodeStepWeaponPerformances[DestinyTalentNodeStepWeaponPerformances["Damage"] = 2] = "Damage";
    DestinyTalentNodeStepWeaponPerformances[DestinyTalentNodeStepWeaponPerformances["Accuracy"] = 4] = "Accuracy";
    DestinyTalentNodeStepWeaponPerformances[DestinyTalentNodeStepWeaponPerformances["Range"] = 8] = "Range";
    DestinyTalentNodeStepWeaponPerformances[DestinyTalentNodeStepWeaponPerformances["Zoom"] = 16] = "Zoom";
    DestinyTalentNodeStepWeaponPerformances[DestinyTalentNodeStepWeaponPerformances["Recoil"] = 32] = "Recoil";
    DestinyTalentNodeStepWeaponPerformances[DestinyTalentNodeStepWeaponPerformances["Ready"] = 64] = "Ready";
    DestinyTalentNodeStepWeaponPerformances[DestinyTalentNodeStepWeaponPerformances["Reload"] = 128] = "Reload";
    DestinyTalentNodeStepWeaponPerformances[DestinyTalentNodeStepWeaponPerformances["HairTrigger"] = 256] = "HairTrigger";
    DestinyTalentNodeStepWeaponPerformances[DestinyTalentNodeStepWeaponPerformances["AmmoAndMagazine"] = 512] = "AmmoAndMagazine";
    DestinyTalentNodeStepWeaponPerformances[DestinyTalentNodeStepWeaponPerformances["TrackingAndDetonation"] = 1024] = "TrackingAndDetonation";
    DestinyTalentNodeStepWeaponPerformances[DestinyTalentNodeStepWeaponPerformances["ShotgunSpread"] = 2048] = "ShotgunSpread";
    DestinyTalentNodeStepWeaponPerformances[DestinyTalentNodeStepWeaponPerformances["ChargeTime"] = 4096] = "ChargeTime";
    DestinyTalentNodeStepWeaponPerformances[DestinyTalentNodeStepWeaponPerformances["All"] = 8191] = "All";
})(DestinyTalentNodeStepWeaponPerformances = exports.DestinyTalentNodeStepWeaponPerformances || (exports.DestinyTalentNodeStepWeaponPerformances = {}));
var DestinyTalentNodeStepImpactEffects;
(function (DestinyTalentNodeStepImpactEffects) {
    DestinyTalentNodeStepImpactEffects[DestinyTalentNodeStepImpactEffects["None"] = 0] = "None";
    DestinyTalentNodeStepImpactEffects[DestinyTalentNodeStepImpactEffects["ArmorPiercing"] = 1] = "ArmorPiercing";
    DestinyTalentNodeStepImpactEffects[DestinyTalentNodeStepImpactEffects["Ricochet"] = 2] = "Ricochet";
    DestinyTalentNodeStepImpactEffects[DestinyTalentNodeStepImpactEffects["Flinch"] = 4] = "Flinch";
    DestinyTalentNodeStepImpactEffects[DestinyTalentNodeStepImpactEffects["CollateralDamage"] = 8] = "CollateralDamage";
    DestinyTalentNodeStepImpactEffects[DestinyTalentNodeStepImpactEffects["Disorient"] = 16] = "Disorient";
    DestinyTalentNodeStepImpactEffects[DestinyTalentNodeStepImpactEffects["HighlightTarget"] = 32] = "HighlightTarget";
    DestinyTalentNodeStepImpactEffects[DestinyTalentNodeStepImpactEffects["All"] = 63] = "All";
})(DestinyTalentNodeStepImpactEffects = exports.DestinyTalentNodeStepImpactEffects || (exports.DestinyTalentNodeStepImpactEffects = {}));
var DestinyTalentNodeStepGuardianAttributes;
(function (DestinyTalentNodeStepGuardianAttributes) {
    DestinyTalentNodeStepGuardianAttributes[DestinyTalentNodeStepGuardianAttributes["None"] = 0] = "None";
    DestinyTalentNodeStepGuardianAttributes[DestinyTalentNodeStepGuardianAttributes["Stats"] = 1] = "Stats";
    DestinyTalentNodeStepGuardianAttributes[DestinyTalentNodeStepGuardianAttributes["Shields"] = 2] = "Shields";
    DestinyTalentNodeStepGuardianAttributes[DestinyTalentNodeStepGuardianAttributes["Health"] = 4] = "Health";
    DestinyTalentNodeStepGuardianAttributes[DestinyTalentNodeStepGuardianAttributes["Revive"] = 8] = "Revive";
    DestinyTalentNodeStepGuardianAttributes[DestinyTalentNodeStepGuardianAttributes["AimUnderFire"] = 16] = "AimUnderFire";
    DestinyTalentNodeStepGuardianAttributes[DestinyTalentNodeStepGuardianAttributes["Radar"] = 32] = "Radar";
    DestinyTalentNodeStepGuardianAttributes[DestinyTalentNodeStepGuardianAttributes["Invisibility"] = 64] = "Invisibility";
    DestinyTalentNodeStepGuardianAttributes[DestinyTalentNodeStepGuardianAttributes["Reputations"] = 128] = "Reputations";
    DestinyTalentNodeStepGuardianAttributes[DestinyTalentNodeStepGuardianAttributes["All"] = 255] = "All";
})(DestinyTalentNodeStepGuardianAttributes = exports.DestinyTalentNodeStepGuardianAttributes || (exports.DestinyTalentNodeStepGuardianAttributes = {}));
var DestinyTalentNodeStepLightAbilities;
(function (DestinyTalentNodeStepLightAbilities) {
    DestinyTalentNodeStepLightAbilities[DestinyTalentNodeStepLightAbilities["None"] = 0] = "None";
    DestinyTalentNodeStepLightAbilities[DestinyTalentNodeStepLightAbilities["Grenades"] = 1] = "Grenades";
    DestinyTalentNodeStepLightAbilities[DestinyTalentNodeStepLightAbilities["Melee"] = 2] = "Melee";
    DestinyTalentNodeStepLightAbilities[DestinyTalentNodeStepLightAbilities["MovementModes"] = 4] = "MovementModes";
    DestinyTalentNodeStepLightAbilities[DestinyTalentNodeStepLightAbilities["Orbs"] = 8] = "Orbs";
    DestinyTalentNodeStepLightAbilities[DestinyTalentNodeStepLightAbilities["SuperEnergy"] = 16] = "SuperEnergy";
    DestinyTalentNodeStepLightAbilities[DestinyTalentNodeStepLightAbilities["SuperMods"] = 32] = "SuperMods";
    DestinyTalentNodeStepLightAbilities[DestinyTalentNodeStepLightAbilities["All"] = 63] = "All";
})(DestinyTalentNodeStepLightAbilities = exports.DestinyTalentNodeStepLightAbilities || (exports.DestinyTalentNodeStepLightAbilities = {}));
var DestinyTalentNodeStepDamageTypes;
(function (DestinyTalentNodeStepDamageTypes) {
    DestinyTalentNodeStepDamageTypes[DestinyTalentNodeStepDamageTypes["None"] = 0] = "None";
    DestinyTalentNodeStepDamageTypes[DestinyTalentNodeStepDamageTypes["Kinetic"] = 1] = "Kinetic";
    DestinyTalentNodeStepDamageTypes[DestinyTalentNodeStepDamageTypes["Arc"] = 2] = "Arc";
    DestinyTalentNodeStepDamageTypes[DestinyTalentNodeStepDamageTypes["Solar"] = 4] = "Solar";
    DestinyTalentNodeStepDamageTypes[DestinyTalentNodeStepDamageTypes["Void"] = 8] = "Void";
    DestinyTalentNodeStepDamageTypes[DestinyTalentNodeStepDamageTypes["All"] = 15] = "All";
})(DestinyTalentNodeStepDamageTypes = exports.DestinyTalentNodeStepDamageTypes || (exports.DestinyTalentNodeStepDamageTypes = {}));
var DestinyObjectiveUiStyle;
(function (DestinyObjectiveUiStyle) {
    DestinyObjectiveUiStyle[DestinyObjectiveUiStyle["None"] = 0] = "None";
    DestinyObjectiveUiStyle[DestinyObjectiveUiStyle["Highlighted"] = 1] = "Highlighted";
    DestinyObjectiveUiStyle[DestinyObjectiveUiStyle["CraftingWeaponLevel"] = 2] = "CraftingWeaponLevel";
    DestinyObjectiveUiStyle[DestinyObjectiveUiStyle["CraftingWeaponLevelProgress"] = 3] = "CraftingWeaponLevelProgress";
    DestinyObjectiveUiStyle[DestinyObjectiveUiStyle["CraftingWeaponTimestamp"] = 4] = "CraftingWeaponTimestamp";
    DestinyObjectiveUiStyle[DestinyObjectiveUiStyle["CraftingMementos"] = 5] = "CraftingMementos";
    DestinyObjectiveUiStyle[DestinyObjectiveUiStyle["CraftingMementoTitle"] = 6] = "CraftingMementoTitle";
})(DestinyObjectiveUiStyle = exports.DestinyObjectiveUiStyle || (exports.DestinyObjectiveUiStyle = {}));
var DestinyActivityNavPointType;
(function (DestinyActivityNavPointType) {
    DestinyActivityNavPointType[DestinyActivityNavPointType["Inactive"] = 0] = "Inactive";
    DestinyActivityNavPointType[DestinyActivityNavPointType["PrimaryObjective"] = 1] = "PrimaryObjective";
    DestinyActivityNavPointType[DestinyActivityNavPointType["SecondaryObjective"] = 2] = "SecondaryObjective";
    DestinyActivityNavPointType[DestinyActivityNavPointType["TravelObjective"] = 3] = "TravelObjective";
    DestinyActivityNavPointType[DestinyActivityNavPointType["PublicEventObjective"] = 4] = "PublicEventObjective";
    DestinyActivityNavPointType[DestinyActivityNavPointType["AmmoCache"] = 5] = "AmmoCache";
    DestinyActivityNavPointType[DestinyActivityNavPointType["PointTypeFlag"] = 6] = "PointTypeFlag";
    DestinyActivityNavPointType[DestinyActivityNavPointType["CapturePoint"] = 7] = "CapturePoint";
    DestinyActivityNavPointType[DestinyActivityNavPointType["DefensiveEncounter"] = 8] = "DefensiveEncounter";
    DestinyActivityNavPointType[DestinyActivityNavPointType["GhostInteraction"] = 9] = "GhostInteraction";
    DestinyActivityNavPointType[DestinyActivityNavPointType["KillAi"] = 10] = "KillAi";
    DestinyActivityNavPointType[DestinyActivityNavPointType["QuestItem"] = 11] = "QuestItem";
    DestinyActivityNavPointType[DestinyActivityNavPointType["PatrolMission"] = 12] = "PatrolMission";
    DestinyActivityNavPointType[DestinyActivityNavPointType["Incoming"] = 13] = "Incoming";
    DestinyActivityNavPointType[DestinyActivityNavPointType["ArenaObjective"] = 14] = "ArenaObjective";
    DestinyActivityNavPointType[DestinyActivityNavPointType["AutomationHint"] = 15] = "AutomationHint";
    DestinyActivityNavPointType[DestinyActivityNavPointType["TrackedQuest"] = 16] = "TrackedQuest";
})(DestinyActivityNavPointType = exports.DestinyActivityNavPointType || (exports.DestinyActivityNavPointType = {}));
var DestinyActivityModeType;
(function (DestinyActivityModeType) {
    DestinyActivityModeType[DestinyActivityModeType["None"] = 0] = "None";
    DestinyActivityModeType[DestinyActivityModeType["Story"] = 2] = "Story";
    DestinyActivityModeType[DestinyActivityModeType["Strike"] = 3] = "Strike";
    DestinyActivityModeType[DestinyActivityModeType["Raid"] = 4] = "Raid";
    DestinyActivityModeType[DestinyActivityModeType["AllPvP"] = 5] = "AllPvP";
    DestinyActivityModeType[DestinyActivityModeType["Patrol"] = 6] = "Patrol";
    DestinyActivityModeType[DestinyActivityModeType["AllPvE"] = 7] = "AllPvE";
    DestinyActivityModeType[DestinyActivityModeType["Reserved9"] = 9] = "Reserved9";
    DestinyActivityModeType[DestinyActivityModeType["Control"] = 10] = "Control";
    DestinyActivityModeType[DestinyActivityModeType["Reserved11"] = 11] = "Reserved11";
    DestinyActivityModeType[DestinyActivityModeType["Clash"] = 12] = "Clash";
    DestinyActivityModeType[DestinyActivityModeType["Reserved13"] = 13] = "Reserved13";
    DestinyActivityModeType[DestinyActivityModeType["CrimsonDoubles"] = 15] = "CrimsonDoubles";
    DestinyActivityModeType[DestinyActivityModeType["Nightfall"] = 16] = "Nightfall";
    DestinyActivityModeType[DestinyActivityModeType["HeroicNightfall"] = 17] = "HeroicNightfall";
    DestinyActivityModeType[DestinyActivityModeType["AllStrikes"] = 18] = "AllStrikes";
    DestinyActivityModeType[DestinyActivityModeType["IronBanner"] = 19] = "IronBanner";
    DestinyActivityModeType[DestinyActivityModeType["Reserved20"] = 20] = "Reserved20";
    DestinyActivityModeType[DestinyActivityModeType["Reserved21"] = 21] = "Reserved21";
    DestinyActivityModeType[DestinyActivityModeType["Reserved22"] = 22] = "Reserved22";
    DestinyActivityModeType[DestinyActivityModeType["Reserved24"] = 24] = "Reserved24";
    DestinyActivityModeType[DestinyActivityModeType["AllMayhem"] = 25] = "AllMayhem";
    DestinyActivityModeType[DestinyActivityModeType["Reserved26"] = 26] = "Reserved26";
    DestinyActivityModeType[DestinyActivityModeType["Reserved27"] = 27] = "Reserved27";
    DestinyActivityModeType[DestinyActivityModeType["Reserved28"] = 28] = "Reserved28";
    DestinyActivityModeType[DestinyActivityModeType["Reserved29"] = 29] = "Reserved29";
    DestinyActivityModeType[DestinyActivityModeType["Reserved30"] = 30] = "Reserved30";
    DestinyActivityModeType[DestinyActivityModeType["Supremacy"] = 31] = "Supremacy";
    DestinyActivityModeType[DestinyActivityModeType["PrivateMatchesAll"] = 32] = "PrivateMatchesAll";
    DestinyActivityModeType[DestinyActivityModeType["Survival"] = 37] = "Survival";
    DestinyActivityModeType[DestinyActivityModeType["Countdown"] = 38] = "Countdown";
    DestinyActivityModeType[DestinyActivityModeType["TrialsOfTheNine"] = 39] = "TrialsOfTheNine";
    DestinyActivityModeType[DestinyActivityModeType["Social"] = 40] = "Social";
    DestinyActivityModeType[DestinyActivityModeType["TrialsCountdown"] = 41] = "TrialsCountdown";
    DestinyActivityModeType[DestinyActivityModeType["TrialsSurvival"] = 42] = "TrialsSurvival";
    DestinyActivityModeType[DestinyActivityModeType["IronBannerControl"] = 43] = "IronBannerControl";
    DestinyActivityModeType[DestinyActivityModeType["IronBannerClash"] = 44] = "IronBannerClash";
    DestinyActivityModeType[DestinyActivityModeType["IronBannerSupremacy"] = 45] = "IronBannerSupremacy";
    DestinyActivityModeType[DestinyActivityModeType["ScoredNightfall"] = 46] = "ScoredNightfall";
    DestinyActivityModeType[DestinyActivityModeType["ScoredHeroicNightfall"] = 47] = "ScoredHeroicNightfall";
    DestinyActivityModeType[DestinyActivityModeType["Rumble"] = 48] = "Rumble";
    DestinyActivityModeType[DestinyActivityModeType["AllDoubles"] = 49] = "AllDoubles";
    DestinyActivityModeType[DestinyActivityModeType["Doubles"] = 50] = "Doubles";
    DestinyActivityModeType[DestinyActivityModeType["PrivateMatchesClash"] = 51] = "PrivateMatchesClash";
    DestinyActivityModeType[DestinyActivityModeType["PrivateMatchesControl"] = 52] = "PrivateMatchesControl";
    DestinyActivityModeType[DestinyActivityModeType["PrivateMatchesSupremacy"] = 53] = "PrivateMatchesSupremacy";
    DestinyActivityModeType[DestinyActivityModeType["PrivateMatchesCountdown"] = 54] = "PrivateMatchesCountdown";
    DestinyActivityModeType[DestinyActivityModeType["PrivateMatchesSurvival"] = 55] = "PrivateMatchesSurvival";
    DestinyActivityModeType[DestinyActivityModeType["PrivateMatchesMayhem"] = 56] = "PrivateMatchesMayhem";
    DestinyActivityModeType[DestinyActivityModeType["PrivateMatchesRumble"] = 57] = "PrivateMatchesRumble";
    DestinyActivityModeType[DestinyActivityModeType["HeroicAdventure"] = 58] = "HeroicAdventure";
    DestinyActivityModeType[DestinyActivityModeType["Showdown"] = 59] = "Showdown";
    DestinyActivityModeType[DestinyActivityModeType["Lockdown"] = 60] = "Lockdown";
    DestinyActivityModeType[DestinyActivityModeType["Scorched"] = 61] = "Scorched";
    DestinyActivityModeType[DestinyActivityModeType["ScorchedTeam"] = 62] = "ScorchedTeam";
    DestinyActivityModeType[DestinyActivityModeType["Gambit"] = 63] = "Gambit";
    DestinyActivityModeType[DestinyActivityModeType["AllPvECompetitive"] = 64] = "AllPvECompetitive";
    DestinyActivityModeType[DestinyActivityModeType["Breakthrough"] = 65] = "Breakthrough";
    DestinyActivityModeType[DestinyActivityModeType["BlackArmoryRun"] = 66] = "BlackArmoryRun";
    DestinyActivityModeType[DestinyActivityModeType["Salvage"] = 67] = "Salvage";
    DestinyActivityModeType[DestinyActivityModeType["IronBannerSalvage"] = 68] = "IronBannerSalvage";
    DestinyActivityModeType[DestinyActivityModeType["PvPCompetitive"] = 69] = "PvPCompetitive";
    DestinyActivityModeType[DestinyActivityModeType["PvPQuickplay"] = 70] = "PvPQuickplay";
    DestinyActivityModeType[DestinyActivityModeType["ClashQuickplay"] = 71] = "ClashQuickplay";
    DestinyActivityModeType[DestinyActivityModeType["ClashCompetitive"] = 72] = "ClashCompetitive";
    DestinyActivityModeType[DestinyActivityModeType["ControlQuickplay"] = 73] = "ControlQuickplay";
    DestinyActivityModeType[DestinyActivityModeType["ControlCompetitive"] = 74] = "ControlCompetitive";
    DestinyActivityModeType[DestinyActivityModeType["GambitPrime"] = 75] = "GambitPrime";
    DestinyActivityModeType[DestinyActivityModeType["Reckoning"] = 76] = "Reckoning";
    DestinyActivityModeType[DestinyActivityModeType["Menagerie"] = 77] = "Menagerie";
    DestinyActivityModeType[DestinyActivityModeType["VexOffensive"] = 78] = "VexOffensive";
    DestinyActivityModeType[DestinyActivityModeType["NightmareHunt"] = 79] = "NightmareHunt";
    DestinyActivityModeType[DestinyActivityModeType["Elimination"] = 80] = "Elimination";
    DestinyActivityModeType[DestinyActivityModeType["Momentum"] = 81] = "Momentum";
    DestinyActivityModeType[DestinyActivityModeType["Dungeon"] = 82] = "Dungeon";
    DestinyActivityModeType[DestinyActivityModeType["Sundial"] = 83] = "Sundial";
    DestinyActivityModeType[DestinyActivityModeType["TrialsOfOsiris"] = 84] = "TrialsOfOsiris";
    DestinyActivityModeType[DestinyActivityModeType["Dares"] = 85] = "Dares";
    DestinyActivityModeType[DestinyActivityModeType["Offensive"] = 86] = "Offensive";
    DestinyActivityModeType[DestinyActivityModeType["LostSector"] = 87] = "LostSector";
    DestinyActivityModeType[DestinyActivityModeType["Rift"] = 88] = "Rift";
    DestinyActivityModeType[DestinyActivityModeType["ZoneControl"] = 89] = "ZoneControl";
    DestinyActivityModeType[DestinyActivityModeType["IronBannerRift"] = 90] = "IronBannerRift";
    DestinyActivityModeType[DestinyActivityModeType["IronBannerZoneControl"] = 91] = "IronBannerZoneControl";
})(DestinyActivityModeType = exports.DestinyActivityModeType || (exports.DestinyActivityModeType = {}));
var DestinyActivityModeCategory;
(function (DestinyActivityModeCategory) {
    DestinyActivityModeCategory[DestinyActivityModeCategory["None"] = 0] = "None";
    DestinyActivityModeCategory[DestinyActivityModeCategory["PvE"] = 1] = "PvE";
    DestinyActivityModeCategory[DestinyActivityModeCategory["PvP"] = 2] = "PvP";
    DestinyActivityModeCategory[DestinyActivityModeCategory["PvECompetitive"] = 3] = "PvECompetitive";
})(DestinyActivityModeCategory = exports.DestinyActivityModeCategory || (exports.DestinyActivityModeCategory = {}));
var DestinyItemSubType;
(function (DestinyItemSubType) {
    DestinyItemSubType[DestinyItemSubType["None"] = 0] = "None";
    DestinyItemSubType[DestinyItemSubType["Crucible"] = 1] = "Crucible";
    DestinyItemSubType[DestinyItemSubType["Vanguard"] = 2] = "Vanguard";
    DestinyItemSubType[DestinyItemSubType["Exotic"] = 5] = "Exotic";
    DestinyItemSubType[DestinyItemSubType["AutoRifle"] = 6] = "AutoRifle";
    DestinyItemSubType[DestinyItemSubType["Shotgun"] = 7] = "Shotgun";
    DestinyItemSubType[DestinyItemSubType["Machinegun"] = 8] = "Machinegun";
    DestinyItemSubType[DestinyItemSubType["HandCannon"] = 9] = "HandCannon";
    DestinyItemSubType[DestinyItemSubType["RocketLauncher"] = 10] = "RocketLauncher";
    DestinyItemSubType[DestinyItemSubType["FusionRifle"] = 11] = "FusionRifle";
    DestinyItemSubType[DestinyItemSubType["SniperRifle"] = 12] = "SniperRifle";
    DestinyItemSubType[DestinyItemSubType["PulseRifle"] = 13] = "PulseRifle";
    DestinyItemSubType[DestinyItemSubType["ScoutRifle"] = 14] = "ScoutRifle";
    DestinyItemSubType[DestinyItemSubType["Crm"] = 16] = "Crm";
    DestinyItemSubType[DestinyItemSubType["Sidearm"] = 17] = "Sidearm";
    DestinyItemSubType[DestinyItemSubType["Sword"] = 18] = "Sword";
    DestinyItemSubType[DestinyItemSubType["Mask"] = 19] = "Mask";
    DestinyItemSubType[DestinyItemSubType["Shader"] = 20] = "Shader";
    DestinyItemSubType[DestinyItemSubType["Ornament"] = 21] = "Ornament";
    DestinyItemSubType[DestinyItemSubType["FusionRifleLine"] = 22] = "FusionRifleLine";
    DestinyItemSubType[DestinyItemSubType["GrenadeLauncher"] = 23] = "GrenadeLauncher";
    DestinyItemSubType[DestinyItemSubType["SubmachineGun"] = 24] = "SubmachineGun";
    DestinyItemSubType[DestinyItemSubType["TraceRifle"] = 25] = "TraceRifle";
    DestinyItemSubType[DestinyItemSubType["HelmetArmor"] = 26] = "HelmetArmor";
    DestinyItemSubType[DestinyItemSubType["GauntletsArmor"] = 27] = "GauntletsArmor";
    DestinyItemSubType[DestinyItemSubType["ChestArmor"] = 28] = "ChestArmor";
    DestinyItemSubType[DestinyItemSubType["LegArmor"] = 29] = "LegArmor";
    DestinyItemSubType[DestinyItemSubType["ClassArmor"] = 30] = "ClassArmor";
    DestinyItemSubType[DestinyItemSubType["Bow"] = 31] = "Bow";
    DestinyItemSubType[DestinyItemSubType["DummyRepeatableBounty"] = 32] = "DummyRepeatableBounty";
    DestinyItemSubType[DestinyItemSubType["Glaive"] = 33] = "Glaive";
})(DestinyItemSubType = exports.DestinyItemSubType || (exports.DestinyItemSubType = {}));
var DestinyGraphNodeState;
(function (DestinyGraphNodeState) {
    DestinyGraphNodeState[DestinyGraphNodeState["Hidden"] = 0] = "Hidden";
    DestinyGraphNodeState[DestinyGraphNodeState["Visible"] = 1] = "Visible";
    DestinyGraphNodeState[DestinyGraphNodeState["Teaser"] = 2] = "Teaser";
    DestinyGraphNodeState[DestinyGraphNodeState["Incomplete"] = 3] = "Incomplete";
    DestinyGraphNodeState[DestinyGraphNodeState["Completed"] = 4] = "Completed";
})(DestinyGraphNodeState = exports.DestinyGraphNodeState || (exports.DestinyGraphNodeState = {}));
var DestinyRewardSourceCategory;
(function (DestinyRewardSourceCategory) {
    DestinyRewardSourceCategory[DestinyRewardSourceCategory["None"] = 0] = "None";
    DestinyRewardSourceCategory[DestinyRewardSourceCategory["Activity"] = 1] = "Activity";
    DestinyRewardSourceCategory[DestinyRewardSourceCategory["Vendor"] = 2] = "Vendor";
    DestinyRewardSourceCategory[DestinyRewardSourceCategory["Aggregate"] = 3] = "Aggregate";
})(DestinyRewardSourceCategory = exports.DestinyRewardSourceCategory || (exports.DestinyRewardSourceCategory = {}));
var DestinyPresentationNodeType;
(function (DestinyPresentationNodeType) {
    DestinyPresentationNodeType[DestinyPresentationNodeType["Default"] = 0] = "Default";
    DestinyPresentationNodeType[DestinyPresentationNodeType["Category"] = 1] = "Category";
    DestinyPresentationNodeType[DestinyPresentationNodeType["Collectibles"] = 2] = "Collectibles";
    DestinyPresentationNodeType[DestinyPresentationNodeType["Records"] = 3] = "Records";
    DestinyPresentationNodeType[DestinyPresentationNodeType["Metric"] = 4] = "Metric";
    DestinyPresentationNodeType[DestinyPresentationNodeType["Craftable"] = 5] = "Craftable";
})(DestinyPresentationNodeType = exports.DestinyPresentationNodeType || (exports.DestinyPresentationNodeType = {}));
var DestinyScope;
(function (DestinyScope) {
    DestinyScope[DestinyScope["Profile"] = 0] = "Profile";
    DestinyScope[DestinyScope["Character"] = 1] = "Character";
})(DestinyScope = exports.DestinyScope || (exports.DestinyScope = {}));
var DestinyPresentationDisplayStyle;
(function (DestinyPresentationDisplayStyle) {
    DestinyPresentationDisplayStyle[DestinyPresentationDisplayStyle["Category"] = 0] = "Category";
    DestinyPresentationDisplayStyle[DestinyPresentationDisplayStyle["Badge"] = 1] = "Badge";
    DestinyPresentationDisplayStyle[DestinyPresentationDisplayStyle["Medals"] = 2] = "Medals";
    DestinyPresentationDisplayStyle[DestinyPresentationDisplayStyle["Collectible"] = 3] = "Collectible";
    DestinyPresentationDisplayStyle[DestinyPresentationDisplayStyle["Record"] = 4] = "Record";
})(DestinyPresentationDisplayStyle = exports.DestinyPresentationDisplayStyle || (exports.DestinyPresentationDisplayStyle = {}));
var DestinyRecordValueStyle;
(function (DestinyRecordValueStyle) {
    DestinyRecordValueStyle[DestinyRecordValueStyle["Integer"] = 0] = "Integer";
    DestinyRecordValueStyle[DestinyRecordValueStyle["Percentage"] = 1] = "Percentage";
    DestinyRecordValueStyle[DestinyRecordValueStyle["Milliseconds"] = 2] = "Milliseconds";
    DestinyRecordValueStyle[DestinyRecordValueStyle["Boolean"] = 3] = "Boolean";
    DestinyRecordValueStyle[DestinyRecordValueStyle["Decimal"] = 4] = "Decimal";
})(DestinyRecordValueStyle = exports.DestinyRecordValueStyle || (exports.DestinyRecordValueStyle = {}));
var DestinyRecordToastStyle;
(function (DestinyRecordToastStyle) {
    DestinyRecordToastStyle[DestinyRecordToastStyle["None"] = 0] = "None";
    DestinyRecordToastStyle[DestinyRecordToastStyle["Record"] = 1] = "Record";
    DestinyRecordToastStyle[DestinyRecordToastStyle["Lore"] = 2] = "Lore";
    DestinyRecordToastStyle[DestinyRecordToastStyle["Badge"] = 3] = "Badge";
    DestinyRecordToastStyle[DestinyRecordToastStyle["MetaRecord"] = 4] = "MetaRecord";
    DestinyRecordToastStyle[DestinyRecordToastStyle["MedalComplete"] = 5] = "MedalComplete";
    DestinyRecordToastStyle[DestinyRecordToastStyle["SeasonChallengeComplete"] = 6] = "SeasonChallengeComplete";
    DestinyRecordToastStyle[DestinyRecordToastStyle["GildedTitleComplete"] = 7] = "GildedTitleComplete";
    DestinyRecordToastStyle[DestinyRecordToastStyle["CraftingRecipeUnlocked"] = 8] = "CraftingRecipeUnlocked";
})(DestinyRecordToastStyle = exports.DestinyRecordToastStyle || (exports.DestinyRecordToastStyle = {}));
var DestinyPresentationScreenStyle;
(function (DestinyPresentationScreenStyle) {
    DestinyPresentationScreenStyle[DestinyPresentationScreenStyle["Default"] = 0] = "Default";
    DestinyPresentationScreenStyle[DestinyPresentationScreenStyle["CategorySets"] = 1] = "CategorySets";
    DestinyPresentationScreenStyle[DestinyPresentationScreenStyle["Badge"] = 2] = "Badge";
})(DestinyPresentationScreenStyle = exports.DestinyPresentationScreenStyle || (exports.DestinyPresentationScreenStyle = {}));
var PlugUiStyles;
(function (PlugUiStyles) {
    PlugUiStyles[PlugUiStyles["None"] = 0] = "None";
    PlugUiStyles[PlugUiStyles["Masterwork"] = 1] = "Masterwork";
})(PlugUiStyles = exports.PlugUiStyles || (exports.PlugUiStyles = {}));
var PlugAvailabilityMode;
(function (PlugAvailabilityMode) {
    PlugAvailabilityMode[PlugAvailabilityMode["Normal"] = 0] = "Normal";
    PlugAvailabilityMode[PlugAvailabilityMode["UnavailableIfSocketContainsMatchingPlugCategory"] = 1] = "UnavailableIfSocketContainsMatchingPlugCategory";
    PlugAvailabilityMode[PlugAvailabilityMode["AvailableIfSocketContainsMatchingPlugCategory"] = 2] = "AvailableIfSocketContainsMatchingPlugCategory";
})(PlugAvailabilityMode = exports.PlugAvailabilityMode || (exports.PlugAvailabilityMode = {}));
var DestinyEnergyType;
(function (DestinyEnergyType) {
    DestinyEnergyType[DestinyEnergyType["Any"] = 0] = "Any";
    DestinyEnergyType[DestinyEnergyType["Arc"] = 1] = "Arc";
    DestinyEnergyType[DestinyEnergyType["Thermal"] = 2] = "Thermal";
    DestinyEnergyType[DestinyEnergyType["Void"] = 3] = "Void";
    DestinyEnergyType[DestinyEnergyType["Ghost"] = 4] = "Ghost";
    DestinyEnergyType[DestinyEnergyType["Subclass"] = 5] = "Subclass";
    DestinyEnergyType[DestinyEnergyType["Stasis"] = 6] = "Stasis";
})(DestinyEnergyType = exports.DestinyEnergyType || (exports.DestinyEnergyType = {}));
var SocketPlugSources;
(function (SocketPlugSources) {
    SocketPlugSources[SocketPlugSources["None"] = 0] = "None";
    SocketPlugSources[SocketPlugSources["InventorySourced"] = 1] = "InventorySourced";
    SocketPlugSources[SocketPlugSources["ReusablePlugItems"] = 2] = "ReusablePlugItems";
    SocketPlugSources[SocketPlugSources["ProfilePlugSet"] = 4] = "ProfilePlugSet";
    SocketPlugSources[SocketPlugSources["CharacterPlugSet"] = 8] = "CharacterPlugSet";
})(SocketPlugSources = exports.SocketPlugSources || (exports.SocketPlugSources = {}));
var ItemPerkVisibility;
(function (ItemPerkVisibility) {
    ItemPerkVisibility[ItemPerkVisibility["Visible"] = 0] = "Visible";
    ItemPerkVisibility[ItemPerkVisibility["Disabled"] = 1] = "Disabled";
    ItemPerkVisibility[ItemPerkVisibility["Hidden"] = 2] = "Hidden";
})(ItemPerkVisibility = exports.ItemPerkVisibility || (exports.ItemPerkVisibility = {}));
var SpecialItemType;
(function (SpecialItemType) {
    SpecialItemType[SpecialItemType["None"] = 0] = "None";
    SpecialItemType[SpecialItemType["SpecialCurrency"] = 1] = "SpecialCurrency";
    SpecialItemType[SpecialItemType["Armor"] = 8] = "Armor";
    SpecialItemType[SpecialItemType["Weapon"] = 9] = "Weapon";
    SpecialItemType[SpecialItemType["Engram"] = 23] = "Engram";
    SpecialItemType[SpecialItemType["Consumable"] = 24] = "Consumable";
    SpecialItemType[SpecialItemType["ExchangeMaterial"] = 25] = "ExchangeMaterial";
    SpecialItemType[SpecialItemType["MissionReward"] = 27] = "MissionReward";
    SpecialItemType[SpecialItemType["Currency"] = 29] = "Currency";
})(SpecialItemType = exports.SpecialItemType || (exports.SpecialItemType = {}));
var DestinyItemType;
(function (DestinyItemType) {
    DestinyItemType[DestinyItemType["None"] = 0] = "None";
    DestinyItemType[DestinyItemType["Currency"] = 1] = "Currency";
    DestinyItemType[DestinyItemType["Armor"] = 2] = "Armor";
    DestinyItemType[DestinyItemType["Weapon"] = 3] = "Weapon";
    DestinyItemType[DestinyItemType["Message"] = 7] = "Message";
    DestinyItemType[DestinyItemType["Engram"] = 8] = "Engram";
    DestinyItemType[DestinyItemType["Consumable"] = 9] = "Consumable";
    DestinyItemType[DestinyItemType["ExchangeMaterial"] = 10] = "ExchangeMaterial";
    DestinyItemType[DestinyItemType["MissionReward"] = 11] = "MissionReward";
    DestinyItemType[DestinyItemType["QuestStep"] = 12] = "QuestStep";
    DestinyItemType[DestinyItemType["QuestStepComplete"] = 13] = "QuestStepComplete";
    DestinyItemType[DestinyItemType["Emblem"] = 14] = "Emblem";
    DestinyItemType[DestinyItemType["Quest"] = 15] = "Quest";
    DestinyItemType[DestinyItemType["Subclass"] = 16] = "Subclass";
    DestinyItemType[DestinyItemType["ClanBanner"] = 17] = "ClanBanner";
    DestinyItemType[DestinyItemType["Aura"] = 18] = "Aura";
    DestinyItemType[DestinyItemType["Mod"] = 19] = "Mod";
    DestinyItemType[DestinyItemType["Dummy"] = 20] = "Dummy";
    DestinyItemType[DestinyItemType["Ship"] = 21] = "Ship";
    DestinyItemType[DestinyItemType["Vehicle"] = 22] = "Vehicle";
    DestinyItemType[DestinyItemType["Emote"] = 23] = "Emote";
    DestinyItemType[DestinyItemType["Ghost"] = 24] = "Ghost";
    DestinyItemType[DestinyItemType["Package"] = 25] = "Package";
    DestinyItemType[DestinyItemType["Bounty"] = 26] = "Bounty";
    DestinyItemType[DestinyItemType["Wrapper"] = 27] = "Wrapper";
    DestinyItemType[DestinyItemType["SeasonalArtifact"] = 28] = "SeasonalArtifact";
    DestinyItemType[DestinyItemType["Finisher"] = 29] = "Finisher";
    DestinyItemType[DestinyItemType["Pattern"] = 30] = "Pattern";
})(DestinyItemType = exports.DestinyItemType || (exports.DestinyItemType = {}));
var DestinyBreakerType;
(function (DestinyBreakerType) {
    DestinyBreakerType[DestinyBreakerType["None"] = 0] = "None";
    DestinyBreakerType[DestinyBreakerType["ShieldPiercing"] = 1] = "ShieldPiercing";
    DestinyBreakerType[DestinyBreakerType["Disruption"] = 2] = "Disruption";
    DestinyBreakerType[DestinyBreakerType["Stagger"] = 3] = "Stagger";
})(DestinyBreakerType = exports.DestinyBreakerType || (exports.DestinyBreakerType = {}));
var DestinyProgressionRewardItemAcquisitionBehavior;
(function (DestinyProgressionRewardItemAcquisitionBehavior) {
    DestinyProgressionRewardItemAcquisitionBehavior[DestinyProgressionRewardItemAcquisitionBehavior["Instant"] = 0] = "Instant";
    DestinyProgressionRewardItemAcquisitionBehavior[DestinyProgressionRewardItemAcquisitionBehavior["PlayerClaimRequired"] = 1] = "PlayerClaimRequired";
})(DestinyProgressionRewardItemAcquisitionBehavior = exports.DestinyProgressionRewardItemAcquisitionBehavior || (exports.DestinyProgressionRewardItemAcquisitionBehavior = {}));
var ItemBindStatus;
(function (ItemBindStatus) {
    ItemBindStatus[ItemBindStatus["NotBound"] = 0] = "NotBound";
    ItemBindStatus[ItemBindStatus["BoundToCharacter"] = 1] = "BoundToCharacter";
    ItemBindStatus[ItemBindStatus["BoundToAccount"] = 2] = "BoundToAccount";
    ItemBindStatus[ItemBindStatus["BoundToGuild"] = 3] = "BoundToGuild";
})(ItemBindStatus = exports.ItemBindStatus || (exports.ItemBindStatus = {}));
var TransferStatuses;
(function (TransferStatuses) {
    TransferStatuses[TransferStatuses["CanTransfer"] = 0] = "CanTransfer";
    TransferStatuses[TransferStatuses["ItemIsEquipped"] = 1] = "ItemIsEquipped";
    TransferStatuses[TransferStatuses["NotTransferrable"] = 2] = "NotTransferrable";
    TransferStatuses[TransferStatuses["NoRoomInDestination"] = 4] = "NoRoomInDestination";
})(TransferStatuses = exports.TransferStatuses || (exports.TransferStatuses = {}));
var ItemState;
(function (ItemState) {
    ItemState[ItemState["None"] = 0] = "None";
    ItemState[ItemState["Locked"] = 1] = "Locked";
    ItemState[ItemState["Tracked"] = 2] = "Tracked";
    ItemState[ItemState["Masterwork"] = 4] = "Masterwork";
    ItemState[ItemState["Crafted"] = 8] = "Crafted";
    ItemState[ItemState["HighlightedObjective"] = 16] = "HighlightedObjective";
})(ItemState = exports.ItemState || (exports.ItemState = {}));
var DestinyGameVersions;
(function (DestinyGameVersions) {
    DestinyGameVersions[DestinyGameVersions["None"] = 0] = "None";
    DestinyGameVersions[DestinyGameVersions["Destiny2"] = 1] = "Destiny2";
    DestinyGameVersions[DestinyGameVersions["DLC1"] = 2] = "DLC1";
    DestinyGameVersions[DestinyGameVersions["DLC2"] = 4] = "DLC2";
    DestinyGameVersions[DestinyGameVersions["Forsaken"] = 8] = "Forsaken";
    DestinyGameVersions[DestinyGameVersions["YearTwoAnnualPass"] = 16] = "YearTwoAnnualPass";
    DestinyGameVersions[DestinyGameVersions["Shadowkeep"] = 32] = "Shadowkeep";
    DestinyGameVersions[DestinyGameVersions["BeyondLight"] = 64] = "BeyondLight";
    DestinyGameVersions[DestinyGameVersions["Anniversary30th"] = 128] = "Anniversary30th";
    DestinyGameVersions[DestinyGameVersions["TheWitchQueen"] = 256] = "TheWitchQueen";
    DestinyGameVersions[DestinyGameVersions["Lightfall"] = 512] = "Lightfall";
})(DestinyGameVersions = exports.DestinyGameVersions || (exports.DestinyGameVersions = {}));
var DestinyComponentType;
(function (DestinyComponentType) {
    DestinyComponentType[DestinyComponentType["None"] = 0] = "None";
    DestinyComponentType[DestinyComponentType["Profiles"] = 100] = "Profiles";
    DestinyComponentType[DestinyComponentType["VendorReceipts"] = 101] = "VendorReceipts";
    DestinyComponentType[DestinyComponentType["ProfileInventories"] = 102] = "ProfileInventories";
    DestinyComponentType[DestinyComponentType["ProfileCurrencies"] = 103] = "ProfileCurrencies";
    DestinyComponentType[DestinyComponentType["ProfileProgression"] = 104] = "ProfileProgression";
    DestinyComponentType[DestinyComponentType["PlatformSilver"] = 105] = "PlatformSilver";
    DestinyComponentType[DestinyComponentType["Characters"] = 200] = "Characters";
    DestinyComponentType[DestinyComponentType["CharacterInventories"] = 201] = "CharacterInventories";
    DestinyComponentType[DestinyComponentType["CharacterProgressions"] = 202] = "CharacterProgressions";
    DestinyComponentType[DestinyComponentType["CharacterRenderData"] = 203] = "CharacterRenderData";
    DestinyComponentType[DestinyComponentType["CharacterActivities"] = 204] = "CharacterActivities";
    DestinyComponentType[DestinyComponentType["CharacterEquipment"] = 205] = "CharacterEquipment";
    DestinyComponentType[DestinyComponentType["ItemInstances"] = 300] = "ItemInstances";
    DestinyComponentType[DestinyComponentType["ItemObjectives"] = 301] = "ItemObjectives";
    DestinyComponentType[DestinyComponentType["ItemPerks"] = 302] = "ItemPerks";
    DestinyComponentType[DestinyComponentType["ItemRenderData"] = 303] = "ItemRenderData";
    DestinyComponentType[DestinyComponentType["ItemStats"] = 304] = "ItemStats";
    DestinyComponentType[DestinyComponentType["ItemSockets"] = 305] = "ItemSockets";
    DestinyComponentType[DestinyComponentType["ItemTalentGrids"] = 306] = "ItemTalentGrids";
    DestinyComponentType[DestinyComponentType["ItemCommonData"] = 307] = "ItemCommonData";
    DestinyComponentType[DestinyComponentType["ItemPlugStates"] = 308] = "ItemPlugStates";
    DestinyComponentType[DestinyComponentType["ItemPlugObjectives"] = 309] = "ItemPlugObjectives";
    DestinyComponentType[DestinyComponentType["ItemReusablePlugs"] = 310] = "ItemReusablePlugs";
    DestinyComponentType[DestinyComponentType["Vendors"] = 400] = "Vendors";
    DestinyComponentType[DestinyComponentType["VendorCategories"] = 401] = "VendorCategories";
    DestinyComponentType[DestinyComponentType["VendorSales"] = 402] = "VendorSales";
    DestinyComponentType[DestinyComponentType["Kiosks"] = 500] = "Kiosks";
    DestinyComponentType[DestinyComponentType["CurrencyLookups"] = 600] = "CurrencyLookups";
    DestinyComponentType[DestinyComponentType["PresentationNodes"] = 700] = "PresentationNodes";
    DestinyComponentType[DestinyComponentType["Collectibles"] = 800] = "Collectibles";
    DestinyComponentType[DestinyComponentType["Records"] = 900] = "Records";
    DestinyComponentType[DestinyComponentType["Transitory"] = 1000] = "Transitory";
    DestinyComponentType[DestinyComponentType["Metrics"] = 1100] = "Metrics";
    DestinyComponentType[DestinyComponentType["StringVariables"] = 1200] = "StringVariables";
    DestinyComponentType[DestinyComponentType["Craftables"] = 1300] = "Craftables";
})(DestinyComponentType = exports.DestinyComponentType || (exports.DestinyComponentType = {}));
var DestinyPresentationNodeState;
(function (DestinyPresentationNodeState) {
    DestinyPresentationNodeState[DestinyPresentationNodeState["None"] = 0] = "None";
    DestinyPresentationNodeState[DestinyPresentationNodeState["Invisible"] = 1] = "Invisible";
    DestinyPresentationNodeState[DestinyPresentationNodeState["Obscured"] = 2] = "Obscured";
})(DestinyPresentationNodeState = exports.DestinyPresentationNodeState || (exports.DestinyPresentationNodeState = {}));
var DestinyRecordState;
(function (DestinyRecordState) {
    DestinyRecordState[DestinyRecordState["None"] = 0] = "None";
    DestinyRecordState[DestinyRecordState["RecordRedeemed"] = 1] = "RecordRedeemed";
    DestinyRecordState[DestinyRecordState["RewardUnavailable"] = 2] = "RewardUnavailable";
    DestinyRecordState[DestinyRecordState["ObjectiveNotCompleted"] = 4] = "ObjectiveNotCompleted";
    DestinyRecordState[DestinyRecordState["Obscured"] = 8] = "Obscured";
    DestinyRecordState[DestinyRecordState["Invisible"] = 16] = "Invisible";
    DestinyRecordState[DestinyRecordState["EntitlementUnowned"] = 32] = "EntitlementUnowned";
    DestinyRecordState[DestinyRecordState["CanEquipTitle"] = 64] = "CanEquipTitle";
})(DestinyRecordState = exports.DestinyRecordState || (exports.DestinyRecordState = {}));
var DestinyCollectibleState;
(function (DestinyCollectibleState) {
    DestinyCollectibleState[DestinyCollectibleState["None"] = 0] = "None";
    DestinyCollectibleState[DestinyCollectibleState["NotAcquired"] = 1] = "NotAcquired";
    DestinyCollectibleState[DestinyCollectibleState["Obscured"] = 2] = "Obscured";
    DestinyCollectibleState[DestinyCollectibleState["Invisible"] = 4] = "Invisible";
    DestinyCollectibleState[DestinyCollectibleState["CannotAffordMaterialRequirements"] = 8] = "CannotAffordMaterialRequirements";
    DestinyCollectibleState[DestinyCollectibleState["InventorySpaceUnavailable"] = 16] = "InventorySpaceUnavailable";
    DestinyCollectibleState[DestinyCollectibleState["UniquenessViolation"] = 32] = "UniquenessViolation";
    DestinyCollectibleState[DestinyCollectibleState["PurchaseDisabled"] = 64] = "PurchaseDisabled";
})(DestinyCollectibleState = exports.DestinyCollectibleState || (exports.DestinyCollectibleState = {}));
var DestinyPartyMemberStates;
(function (DestinyPartyMemberStates) {
    DestinyPartyMemberStates[DestinyPartyMemberStates["None"] = 0] = "None";
    DestinyPartyMemberStates[DestinyPartyMemberStates["FireteamMember"] = 1] = "FireteamMember";
    DestinyPartyMemberStates[DestinyPartyMemberStates["PosseMember"] = 2] = "PosseMember";
    DestinyPartyMemberStates[DestinyPartyMemberStates["GroupMember"] = 4] = "GroupMember";
    DestinyPartyMemberStates[DestinyPartyMemberStates["PartyLeader"] = 8] = "PartyLeader";
})(DestinyPartyMemberStates = exports.DestinyPartyMemberStates || (exports.DestinyPartyMemberStates = {}));
var DestinyGamePrivacySetting;
(function (DestinyGamePrivacySetting) {
    DestinyGamePrivacySetting[DestinyGamePrivacySetting["Open"] = 0] = "Open";
    DestinyGamePrivacySetting[DestinyGamePrivacySetting["ClanAndFriendsOnly"] = 1] = "ClanAndFriendsOnly";
    DestinyGamePrivacySetting[DestinyGamePrivacySetting["FriendsOnly"] = 2] = "FriendsOnly";
    DestinyGamePrivacySetting[DestinyGamePrivacySetting["InvitationOnly"] = 3] = "InvitationOnly";
    DestinyGamePrivacySetting[DestinyGamePrivacySetting["Closed"] = 4] = "Closed";
})(DestinyGamePrivacySetting = exports.DestinyGamePrivacySetting || (exports.DestinyGamePrivacySetting = {}));
var DestinyJoinClosedReasons;
(function (DestinyJoinClosedReasons) {
    DestinyJoinClosedReasons[DestinyJoinClosedReasons["None"] = 0] = "None";
    DestinyJoinClosedReasons[DestinyJoinClosedReasons["InMatchmaking"] = 1] = "InMatchmaking";
    DestinyJoinClosedReasons[DestinyJoinClosedReasons["Loading"] = 2] = "Loading";
    DestinyJoinClosedReasons[DestinyJoinClosedReasons["SoloMode"] = 4] = "SoloMode";
    DestinyJoinClosedReasons[DestinyJoinClosedReasons["InternalReasons"] = 8] = "InternalReasons";
    DestinyJoinClosedReasons[DestinyJoinClosedReasons["DisallowedByGameState"] = 16] = "DisallowedByGameState";
    DestinyJoinClosedReasons[DestinyJoinClosedReasons["Offline"] = 32768] = "Offline";
})(DestinyJoinClosedReasons = exports.DestinyJoinClosedReasons || (exports.DestinyJoinClosedReasons = {}));
var DestinyRace;
(function (DestinyRace) {
    DestinyRace[DestinyRace["Human"] = 0] = "Human";
    DestinyRace[DestinyRace["Awoken"] = 1] = "Awoken";
    DestinyRace[DestinyRace["Exo"] = 2] = "Exo";
    DestinyRace[DestinyRace["Unknown"] = 3] = "Unknown";
})(DestinyRace = exports.DestinyRace || (exports.DestinyRace = {}));
var DestinyMilestoneDisplayPreference;
(function (DestinyMilestoneDisplayPreference) {
    DestinyMilestoneDisplayPreference[DestinyMilestoneDisplayPreference["MilestoneDefinition"] = 0] = "MilestoneDefinition";
    DestinyMilestoneDisplayPreference[DestinyMilestoneDisplayPreference["CurrentQuestSteps"] = 1] = "CurrentQuestSteps";
    DestinyMilestoneDisplayPreference[DestinyMilestoneDisplayPreference["CurrentActivityChallenges"] = 2] = "CurrentActivityChallenges";
})(DestinyMilestoneDisplayPreference = exports.DestinyMilestoneDisplayPreference || (exports.DestinyMilestoneDisplayPreference = {}));
var DestinyMilestoneType;
(function (DestinyMilestoneType) {
    DestinyMilestoneType[DestinyMilestoneType["Unknown"] = 0] = "Unknown";
    DestinyMilestoneType[DestinyMilestoneType["Tutorial"] = 1] = "Tutorial";
    DestinyMilestoneType[DestinyMilestoneType["OneTime"] = 2] = "OneTime";
    DestinyMilestoneType[DestinyMilestoneType["Weekly"] = 3] = "Weekly";
    DestinyMilestoneType[DestinyMilestoneType["Daily"] = 4] = "Daily";
    DestinyMilestoneType[DestinyMilestoneType["Special"] = 5] = "Special";
})(DestinyMilestoneType = exports.DestinyMilestoneType || (exports.DestinyMilestoneType = {}));
var DestinyActivityDifficultyTier;
(function (DestinyActivityDifficultyTier) {
    DestinyActivityDifficultyTier[DestinyActivityDifficultyTier["Trivial"] = 0] = "Trivial";
    DestinyActivityDifficultyTier[DestinyActivityDifficultyTier["Easy"] = 1] = "Easy";
    DestinyActivityDifficultyTier[DestinyActivityDifficultyTier["Normal"] = 2] = "Normal";
    DestinyActivityDifficultyTier[DestinyActivityDifficultyTier["Challenging"] = 3] = "Challenging";
    DestinyActivityDifficultyTier[DestinyActivityDifficultyTier["Hard"] = 4] = "Hard";
    DestinyActivityDifficultyTier[DestinyActivityDifficultyTier["Brave"] = 5] = "Brave";
    DestinyActivityDifficultyTier[DestinyActivityDifficultyTier["AlmostImpossible"] = 6] = "AlmostImpossible";
    DestinyActivityDifficultyTier[DestinyActivityDifficultyTier["Impossible"] = 7] = "Impossible";
})(DestinyActivityDifficultyTier = exports.DestinyActivityDifficultyTier || (exports.DestinyActivityDifficultyTier = {}));
var EquipFailureReason;
(function (EquipFailureReason) {
    EquipFailureReason[EquipFailureReason["None"] = 0] = "None";
    EquipFailureReason[EquipFailureReason["ItemUnequippable"] = 1] = "ItemUnequippable";
    EquipFailureReason[EquipFailureReason["ItemUniqueEquipRestricted"] = 2] = "ItemUniqueEquipRestricted";
    EquipFailureReason[EquipFailureReason["ItemFailedUnlockCheck"] = 4] = "ItemFailedUnlockCheck";
    EquipFailureReason[EquipFailureReason["ItemFailedLevelCheck"] = 8] = "ItemFailedLevelCheck";
    EquipFailureReason[EquipFailureReason["ItemWrapped"] = 16] = "ItemWrapped";
    EquipFailureReason[EquipFailureReason["ItemNotLoaded"] = 32] = "ItemNotLoaded";
    EquipFailureReason[EquipFailureReason["ItemEquipBlocklisted"] = 64] = "ItemEquipBlocklisted";
    EquipFailureReason[EquipFailureReason["ItemLoadoutRequirementNotMet"] = 128] = "ItemLoadoutRequirementNotMet";
})(EquipFailureReason = exports.EquipFailureReason || (exports.EquipFailureReason = {}));
var DestinyTalentNodeState;
(function (DestinyTalentNodeState) {
    DestinyTalentNodeState[DestinyTalentNodeState["Invalid"] = 0] = "Invalid";
    DestinyTalentNodeState[DestinyTalentNodeState["CanUpgrade"] = 1] = "CanUpgrade";
    DestinyTalentNodeState[DestinyTalentNodeState["NoPoints"] = 2] = "NoPoints";
    DestinyTalentNodeState[DestinyTalentNodeState["NoPrerequisites"] = 3] = "NoPrerequisites";
    DestinyTalentNodeState[DestinyTalentNodeState["NoSteps"] = 4] = "NoSteps";
    DestinyTalentNodeState[DestinyTalentNodeState["NoUnlock"] = 5] = "NoUnlock";
    DestinyTalentNodeState[DestinyTalentNodeState["NoMaterial"] = 6] = "NoMaterial";
    DestinyTalentNodeState[DestinyTalentNodeState["NoGridLevel"] = 7] = "NoGridLevel";
    DestinyTalentNodeState[DestinyTalentNodeState["SwappingLocked"] = 8] = "SwappingLocked";
    DestinyTalentNodeState[DestinyTalentNodeState["MustSwap"] = 9] = "MustSwap";
    DestinyTalentNodeState[DestinyTalentNodeState["Complete"] = 10] = "Complete";
    DestinyTalentNodeState[DestinyTalentNodeState["Unknown"] = 11] = "Unknown";
    DestinyTalentNodeState[DestinyTalentNodeState["CreationOnly"] = 12] = "CreationOnly";
    DestinyTalentNodeState[DestinyTalentNodeState["Hidden"] = 13] = "Hidden";
})(DestinyTalentNodeState = exports.DestinyTalentNodeState || (exports.DestinyTalentNodeState = {}));
var DestinyVendorFilter;
(function (DestinyVendorFilter) {
    DestinyVendorFilter[DestinyVendorFilter["None"] = 0] = "None";
    DestinyVendorFilter[DestinyVendorFilter["ApiPurchasable"] = 1] = "ApiPurchasable";
})(DestinyVendorFilter = exports.DestinyVendorFilter || (exports.DestinyVendorFilter = {}));
var VendorItemStatus;
(function (VendorItemStatus) {
    VendorItemStatus[VendorItemStatus["Success"] = 0] = "Success";
    VendorItemStatus[VendorItemStatus["NoInventorySpace"] = 1] = "NoInventorySpace";
    VendorItemStatus[VendorItemStatus["NoFunds"] = 2] = "NoFunds";
    VendorItemStatus[VendorItemStatus["NoProgression"] = 4] = "NoProgression";
    VendorItemStatus[VendorItemStatus["NoUnlock"] = 8] = "NoUnlock";
    VendorItemStatus[VendorItemStatus["NoQuantity"] = 16] = "NoQuantity";
    VendorItemStatus[VendorItemStatus["OutsidePurchaseWindow"] = 32] = "OutsidePurchaseWindow";
    VendorItemStatus[VendorItemStatus["NotAvailable"] = 64] = "NotAvailable";
    VendorItemStatus[VendorItemStatus["UniquenessViolation"] = 128] = "UniquenessViolation";
    VendorItemStatus[VendorItemStatus["UnknownError"] = 256] = "UnknownError";
    VendorItemStatus[VendorItemStatus["AlreadySelling"] = 512] = "AlreadySelling";
    VendorItemStatus[VendorItemStatus["Unsellable"] = 1024] = "Unsellable";
    VendorItemStatus[VendorItemStatus["SellingInhibited"] = 2048] = "SellingInhibited";
    VendorItemStatus[VendorItemStatus["AlreadyOwned"] = 4096] = "AlreadyOwned";
    VendorItemStatus[VendorItemStatus["DisplayOnly"] = 8192] = "DisplayOnly";
})(VendorItemStatus = exports.VendorItemStatus || (exports.VendorItemStatus = {}));
var DestinyVendorItemState;
(function (DestinyVendorItemState) {
    DestinyVendorItemState[DestinyVendorItemState["None"] = 0] = "None";
    DestinyVendorItemState[DestinyVendorItemState["Incomplete"] = 1] = "Incomplete";
    DestinyVendorItemState[DestinyVendorItemState["RewardAvailable"] = 2] = "RewardAvailable";
    DestinyVendorItemState[DestinyVendorItemState["Complete"] = 4] = "Complete";
    DestinyVendorItemState[DestinyVendorItemState["New"] = 8] = "New";
    DestinyVendorItemState[DestinyVendorItemState["Featured"] = 16] = "Featured";
    DestinyVendorItemState[DestinyVendorItemState["Ending"] = 32] = "Ending";
    DestinyVendorItemState[DestinyVendorItemState["OnSale"] = 64] = "OnSale";
    DestinyVendorItemState[DestinyVendorItemState["Owned"] = 128] = "Owned";
    DestinyVendorItemState[DestinyVendorItemState["WideView"] = 256] = "WideView";
    DestinyVendorItemState[DestinyVendorItemState["NexusAttention"] = 512] = "NexusAttention";
    DestinyVendorItemState[DestinyVendorItemState["SetDiscount"] = 1024] = "SetDiscount";
    DestinyVendorItemState[DestinyVendorItemState["PriceDrop"] = 2048] = "PriceDrop";
    DestinyVendorItemState[DestinyVendorItemState["DailyOffer"] = 4096] = "DailyOffer";
    DestinyVendorItemState[DestinyVendorItemState["Charity"] = 8192] = "Charity";
    DestinyVendorItemState[DestinyVendorItemState["SeasonalRewardExpiration"] = 16384] = "SeasonalRewardExpiration";
    DestinyVendorItemState[DestinyVendorItemState["BestDeal"] = 32768] = "BestDeal";
    DestinyVendorItemState[DestinyVendorItemState["Popular"] = 65536] = "Popular";
    DestinyVendorItemState[DestinyVendorItemState["Free"] = 131072] = "Free";
    DestinyVendorItemState[DestinyVendorItemState["Locked"] = 262144] = "Locked";
    DestinyVendorItemState[DestinyVendorItemState["Paracausal"] = 524288] = "Paracausal";
    DestinyVendorItemState[DestinyVendorItemState["Cryptarch"] = 1048576] = "Cryptarch";
})(DestinyVendorItemState = exports.DestinyVendorItemState || (exports.DestinyVendorItemState = {}));
var DestinySocketArrayType;
(function (DestinySocketArrayType) {
    DestinySocketArrayType[DestinySocketArrayType["Default"] = 0] = "Default";
    DestinySocketArrayType[DestinySocketArrayType["Intrinsic"] = 1] = "Intrinsic";
})(DestinySocketArrayType = exports.DestinySocketArrayType || (exports.DestinySocketArrayType = {}));
var DestinyStatsGroupType;
(function (DestinyStatsGroupType) {
    DestinyStatsGroupType[DestinyStatsGroupType["None"] = 0] = "None";
    DestinyStatsGroupType[DestinyStatsGroupType["General"] = 1] = "General";
    DestinyStatsGroupType[DestinyStatsGroupType["Weapons"] = 2] = "Weapons";
    DestinyStatsGroupType[DestinyStatsGroupType["Medals"] = 3] = "Medals";
    DestinyStatsGroupType[DestinyStatsGroupType["ReservedGroups"] = 100] = "ReservedGroups";
    DestinyStatsGroupType[DestinyStatsGroupType["Leaderboard"] = 101] = "Leaderboard";
    DestinyStatsGroupType[DestinyStatsGroupType["Activity"] = 102] = "Activity";
    DestinyStatsGroupType[DestinyStatsGroupType["UniqueWeapon"] = 103] = "UniqueWeapon";
    DestinyStatsGroupType[DestinyStatsGroupType["Internal"] = 104] = "Internal";
})(DestinyStatsGroupType = exports.DestinyStatsGroupType || (exports.DestinyStatsGroupType = {}));
var DestinyStatsCategoryType;
(function (DestinyStatsCategoryType) {
    DestinyStatsCategoryType[DestinyStatsCategoryType["None"] = 0] = "None";
    DestinyStatsCategoryType[DestinyStatsCategoryType["Kills"] = 1] = "Kills";
    DestinyStatsCategoryType[DestinyStatsCategoryType["Assists"] = 2] = "Assists";
    DestinyStatsCategoryType[DestinyStatsCategoryType["Deaths"] = 3] = "Deaths";
    DestinyStatsCategoryType[DestinyStatsCategoryType["Criticals"] = 4] = "Criticals";
    DestinyStatsCategoryType[DestinyStatsCategoryType["KDa"] = 5] = "KDa";
    DestinyStatsCategoryType[DestinyStatsCategoryType["KD"] = 6] = "KD";
    DestinyStatsCategoryType[DestinyStatsCategoryType["Score"] = 7] = "Score";
    DestinyStatsCategoryType[DestinyStatsCategoryType["Entered"] = 8] = "Entered";
    DestinyStatsCategoryType[DestinyStatsCategoryType["TimePlayed"] = 9] = "TimePlayed";
    DestinyStatsCategoryType[DestinyStatsCategoryType["MedalWins"] = 10] = "MedalWins";
    DestinyStatsCategoryType[DestinyStatsCategoryType["MedalGame"] = 11] = "MedalGame";
    DestinyStatsCategoryType[DestinyStatsCategoryType["MedalSpecialKills"] = 12] = "MedalSpecialKills";
    DestinyStatsCategoryType[DestinyStatsCategoryType["MedalSprees"] = 13] = "MedalSprees";
    DestinyStatsCategoryType[DestinyStatsCategoryType["MedalMultiKills"] = 14] = "MedalMultiKills";
    DestinyStatsCategoryType[DestinyStatsCategoryType["MedalAbilities"] = 15] = "MedalAbilities";
})(DestinyStatsCategoryType = exports.DestinyStatsCategoryType || (exports.DestinyStatsCategoryType = {}));
var UnitType;
(function (UnitType) {
    UnitType[UnitType["None"] = 0] = "None";
    UnitType[UnitType["Count"] = 1] = "Count";
    UnitType[UnitType["PerGame"] = 2] = "PerGame";
    UnitType[UnitType["Seconds"] = 3] = "Seconds";
    UnitType[UnitType["Points"] = 4] = "Points";
    UnitType[UnitType["Team"] = 5] = "Team";
    UnitType[UnitType["Distance"] = 6] = "Distance";
    UnitType[UnitType["Percent"] = 7] = "Percent";
    UnitType[UnitType["Ratio"] = 8] = "Ratio";
    UnitType[UnitType["Boolean"] = 9] = "Boolean";
    UnitType[UnitType["WeaponType"] = 10] = "WeaponType";
    UnitType[UnitType["Standing"] = 11] = "Standing";
    UnitType[UnitType["Milliseconds"] = 12] = "Milliseconds";
    UnitType[UnitType["CompletionReason"] = 13] = "CompletionReason";
})(UnitType = exports.UnitType || (exports.UnitType = {}));
var DestinyStatsMergeMethod;
(function (DestinyStatsMergeMethod) {
    DestinyStatsMergeMethod[DestinyStatsMergeMethod["Add"] = 0] = "Add";
    DestinyStatsMergeMethod[DestinyStatsMergeMethod["Min"] = 1] = "Min";
    DestinyStatsMergeMethod[DestinyStatsMergeMethod["Max"] = 2] = "Max";
})(DestinyStatsMergeMethod = exports.DestinyStatsMergeMethod || (exports.DestinyStatsMergeMethod = {}));
var PeriodType;
(function (PeriodType) {
    PeriodType[PeriodType["None"] = 0] = "None";
    PeriodType[PeriodType["Daily"] = 1] = "Daily";
    PeriodType[PeriodType["AllTime"] = 2] = "AllTime";
    PeriodType[PeriodType["Activity"] = 3] = "Activity";
})(PeriodType = exports.PeriodType || (exports.PeriodType = {}));
var AwaType;
(function (AwaType) {
    AwaType[AwaType["None"] = 0] = "None";
    AwaType[AwaType["InsertPlugs"] = 1] = "InsertPlugs";
})(AwaType = exports.AwaType || (exports.AwaType = {}));
var AwaUserSelection;
(function (AwaUserSelection) {
    AwaUserSelection[AwaUserSelection["None"] = 0] = "None";
    AwaUserSelection[AwaUserSelection["Rejected"] = 1] = "Rejected";
    AwaUserSelection[AwaUserSelection["Approved"] = 2] = "Approved";
})(AwaUserSelection = exports.AwaUserSelection || (exports.AwaUserSelection = {}));
var AwaResponseReason;
(function (AwaResponseReason) {
    AwaResponseReason[AwaResponseReason["None"] = 0] = "None";
    AwaResponseReason[AwaResponseReason["Answered"] = 1] = "Answered";
    AwaResponseReason[AwaResponseReason["TimedOut"] = 2] = "TimedOut";
    AwaResponseReason[AwaResponseReason["Replaced"] = 3] = "Replaced";
})(AwaResponseReason = exports.AwaResponseReason || (exports.AwaResponseReason = {}));
var PlatformErrorCodes;
(function (PlatformErrorCodes) {
    PlatformErrorCodes[PlatformErrorCodes["None"] = 0] = "None";
    PlatformErrorCodes[PlatformErrorCodes["Success"] = 1] = "Success";
    PlatformErrorCodes[PlatformErrorCodes["TransportException"] = 2] = "TransportException";
    PlatformErrorCodes[PlatformErrorCodes["UnhandledException"] = 3] = "UnhandledException";
    PlatformErrorCodes[PlatformErrorCodes["NotImplemented"] = 4] = "NotImplemented";
    PlatformErrorCodes[PlatformErrorCodes["SystemDisabled"] = 5] = "SystemDisabled";
    PlatformErrorCodes[PlatformErrorCodes["FailedToLoadAvailableLocalesConfiguration"] = 6] = "FailedToLoadAvailableLocalesConfiguration";
    PlatformErrorCodes[PlatformErrorCodes["ParameterParseFailure"] = 7] = "ParameterParseFailure";
    PlatformErrorCodes[PlatformErrorCodes["ParameterInvalidRange"] = 8] = "ParameterInvalidRange";
    PlatformErrorCodes[PlatformErrorCodes["BadRequest"] = 9] = "BadRequest";
    PlatformErrorCodes[PlatformErrorCodes["AuthenticationInvalid"] = 10] = "AuthenticationInvalid";
    PlatformErrorCodes[PlatformErrorCodes["DataNotFound"] = 11] = "DataNotFound";
    PlatformErrorCodes[PlatformErrorCodes["InsufficientPrivileges"] = 12] = "InsufficientPrivileges";
    PlatformErrorCodes[PlatformErrorCodes["Duplicate"] = 13] = "Duplicate";
    PlatformErrorCodes[PlatformErrorCodes["UnknownSqlResult"] = 14] = "UnknownSqlResult";
    PlatformErrorCodes[PlatformErrorCodes["ValidationError"] = 15] = "ValidationError";
    PlatformErrorCodes[PlatformErrorCodes["ValidationMissingFieldError"] = 16] = "ValidationMissingFieldError";
    PlatformErrorCodes[PlatformErrorCodes["ValidationInvalidInputError"] = 17] = "ValidationInvalidInputError";
    PlatformErrorCodes[PlatformErrorCodes["InvalidParameters"] = 18] = "InvalidParameters";
    PlatformErrorCodes[PlatformErrorCodes["ParameterNotFound"] = 19] = "ParameterNotFound";
    PlatformErrorCodes[PlatformErrorCodes["UnhandledHttpException"] = 20] = "UnhandledHttpException";
    PlatformErrorCodes[PlatformErrorCodes["NotFound"] = 21] = "NotFound";
    PlatformErrorCodes[PlatformErrorCodes["WebAuthModuleAsyncFailed"] = 22] = "WebAuthModuleAsyncFailed";
    PlatformErrorCodes[PlatformErrorCodes["InvalidReturnValue"] = 23] = "InvalidReturnValue";
    PlatformErrorCodes[PlatformErrorCodes["UserBanned"] = 24] = "UserBanned";
    PlatformErrorCodes[PlatformErrorCodes["InvalidPostBody"] = 25] = "InvalidPostBody";
    PlatformErrorCodes[PlatformErrorCodes["MissingPostBody"] = 26] = "MissingPostBody";
    PlatformErrorCodes[PlatformErrorCodes["ExternalServiceTimeout"] = 27] = "ExternalServiceTimeout";
    PlatformErrorCodes[PlatformErrorCodes["ValidationLengthError"] = 28] = "ValidationLengthError";
    PlatformErrorCodes[PlatformErrorCodes["ValidationRangeError"] = 29] = "ValidationRangeError";
    PlatformErrorCodes[PlatformErrorCodes["JsonDeserializationError"] = 30] = "JsonDeserializationError";
    PlatformErrorCodes[PlatformErrorCodes["ThrottleLimitExceeded"] = 31] = "ThrottleLimitExceeded";
    PlatformErrorCodes[PlatformErrorCodes["ValidationTagError"] = 32] = "ValidationTagError";
    PlatformErrorCodes[PlatformErrorCodes["ValidationProfanityError"] = 33] = "ValidationProfanityError";
    PlatformErrorCodes[PlatformErrorCodes["ValidationUrlFormatError"] = 34] = "ValidationUrlFormatError";
    PlatformErrorCodes[PlatformErrorCodes["ThrottleLimitExceededMinutes"] = 35] = "ThrottleLimitExceededMinutes";
    PlatformErrorCodes[PlatformErrorCodes["ThrottleLimitExceededMomentarily"] = 36] = "ThrottleLimitExceededMomentarily";
    PlatformErrorCodes[PlatformErrorCodes["ThrottleLimitExceededSeconds"] = 37] = "ThrottleLimitExceededSeconds";
    PlatformErrorCodes[PlatformErrorCodes["ExternalServiceUnknown"] = 38] = "ExternalServiceUnknown";
    PlatformErrorCodes[PlatformErrorCodes["ValidationWordLengthError"] = 39] = "ValidationWordLengthError";
    PlatformErrorCodes[PlatformErrorCodes["ValidationInvisibleUnicode"] = 40] = "ValidationInvisibleUnicode";
    PlatformErrorCodes[PlatformErrorCodes["ValidationBadNames"] = 41] = "ValidationBadNames";
    PlatformErrorCodes[PlatformErrorCodes["ExternalServiceFailed"] = 42] = "ExternalServiceFailed";
    PlatformErrorCodes[PlatformErrorCodes["ServiceRetired"] = 43] = "ServiceRetired";
    PlatformErrorCodes[PlatformErrorCodes["UnknownSqlException"] = 44] = "UnknownSqlException";
    PlatformErrorCodes[PlatformErrorCodes["UnsupportedLocale"] = 45] = "UnsupportedLocale";
    PlatformErrorCodes[PlatformErrorCodes["InvalidPageNumber"] = 46] = "InvalidPageNumber";
    PlatformErrorCodes[PlatformErrorCodes["MaximumPageSizeExceeded"] = 47] = "MaximumPageSizeExceeded";
    PlatformErrorCodes[PlatformErrorCodes["ServiceUnsupported"] = 48] = "ServiceUnsupported";
    PlatformErrorCodes[PlatformErrorCodes["ValidationMaximumUnicodeCombiningCharacters"] = 49] = "ValidationMaximumUnicodeCombiningCharacters";
    PlatformErrorCodes[PlatformErrorCodes["ValidationMaximumSequentialCarriageReturns"] = 50] = "ValidationMaximumSequentialCarriageReturns";
    PlatformErrorCodes[PlatformErrorCodes["PerEndpointRequestThrottleExceeded"] = 51] = "PerEndpointRequestThrottleExceeded";
    PlatformErrorCodes[PlatformErrorCodes["AuthContextCacheAssertion"] = 52] = "AuthContextCacheAssertion";
    PlatformErrorCodes[PlatformErrorCodes["ExPlatformStringValidationError"] = 53] = "ExPlatformStringValidationError";
    PlatformErrorCodes[PlatformErrorCodes["PerApplicationThrottleExceeded"] = 54] = "PerApplicationThrottleExceeded";
    PlatformErrorCodes[PlatformErrorCodes["PerApplicationAnonymousThrottleExceeded"] = 55] = "PerApplicationAnonymousThrottleExceeded";
    PlatformErrorCodes[PlatformErrorCodes["PerApplicationAuthenticatedThrottleExceeded"] = 56] = "PerApplicationAuthenticatedThrottleExceeded";
    PlatformErrorCodes[PlatformErrorCodes["PerUserThrottleExceeded"] = 57] = "PerUserThrottleExceeded";
    PlatformErrorCodes[PlatformErrorCodes["PayloadSignatureVerificationFailure"] = 58] = "PayloadSignatureVerificationFailure";
    PlatformErrorCodes[PlatformErrorCodes["InvalidServiceAuthContext"] = 59] = "InvalidServiceAuthContext";
    PlatformErrorCodes[PlatformErrorCodes["ObsoleteCredentialType"] = 89] = "ObsoleteCredentialType";
    PlatformErrorCodes[PlatformErrorCodes["UnableToUnPairMobileApp"] = 90] = "UnableToUnPairMobileApp";
    PlatformErrorCodes[PlatformErrorCodes["UnableToPairMobileApp"] = 91] = "UnableToPairMobileApp";
    PlatformErrorCodes[PlatformErrorCodes["CannotUseMobileAuthWithNonMobileProvider"] = 92] = "CannotUseMobileAuthWithNonMobileProvider";
    PlatformErrorCodes[PlatformErrorCodes["MissingDeviceCookie"] = 93] = "MissingDeviceCookie";
    PlatformErrorCodes[PlatformErrorCodes["FacebookTokenExpired"] = 94] = "FacebookTokenExpired";
    PlatformErrorCodes[PlatformErrorCodes["AuthTicketRequired"] = 95] = "AuthTicketRequired";
    PlatformErrorCodes[PlatformErrorCodes["CookieContextRequired"] = 96] = "CookieContextRequired";
    PlatformErrorCodes[PlatformErrorCodes["UnknownAuthenticationError"] = 97] = "UnknownAuthenticationError";
    PlatformErrorCodes[PlatformErrorCodes["BungieNetAccountCreationRequired"] = 98] = "BungieNetAccountCreationRequired";
    PlatformErrorCodes[PlatformErrorCodes["WebAuthRequired"] = 99] = "WebAuthRequired";
    PlatformErrorCodes[PlatformErrorCodes["ContentUnknownSqlResult"] = 100] = "ContentUnknownSqlResult";
    PlatformErrorCodes[PlatformErrorCodes["ContentNeedUniquePath"] = 101] = "ContentNeedUniquePath";
    PlatformErrorCodes[PlatformErrorCodes["ContentSqlException"] = 102] = "ContentSqlException";
    PlatformErrorCodes[PlatformErrorCodes["ContentNotFound"] = 103] = "ContentNotFound";
    PlatformErrorCodes[PlatformErrorCodes["ContentSuccessWithTagAddFail"] = 104] = "ContentSuccessWithTagAddFail";
    PlatformErrorCodes[PlatformErrorCodes["ContentSearchMissingParameters"] = 105] = "ContentSearchMissingParameters";
    PlatformErrorCodes[PlatformErrorCodes["ContentInvalidId"] = 106] = "ContentInvalidId";
    PlatformErrorCodes[PlatformErrorCodes["ContentPhysicalFileDeletionError"] = 107] = "ContentPhysicalFileDeletionError";
    PlatformErrorCodes[PlatformErrorCodes["ContentPhysicalFileCreationError"] = 108] = "ContentPhysicalFileCreationError";
    PlatformErrorCodes[PlatformErrorCodes["ContentPerforceSubmissionError"] = 109] = "ContentPerforceSubmissionError";
    PlatformErrorCodes[PlatformErrorCodes["ContentPerforceInitializationError"] = 110] = "ContentPerforceInitializationError";
    PlatformErrorCodes[PlatformErrorCodes["ContentDeploymentPackageNotReadyError"] = 111] = "ContentDeploymentPackageNotReadyError";
    PlatformErrorCodes[PlatformErrorCodes["ContentUploadFailed"] = 112] = "ContentUploadFailed";
    PlatformErrorCodes[PlatformErrorCodes["ContentTooManyResults"] = 113] = "ContentTooManyResults";
    PlatformErrorCodes[PlatformErrorCodes["ContentInvalidState"] = 115] = "ContentInvalidState";
    PlatformErrorCodes[PlatformErrorCodes["ContentNavigationParentNotFound"] = 116] = "ContentNavigationParentNotFound";
    PlatformErrorCodes[PlatformErrorCodes["ContentNavigationParentUpdateError"] = 117] = "ContentNavigationParentUpdateError";
    PlatformErrorCodes[PlatformErrorCodes["DeploymentPackageNotEditable"] = 118] = "DeploymentPackageNotEditable";
    PlatformErrorCodes[PlatformErrorCodes["ContentValidationError"] = 119] = "ContentValidationError";
    PlatformErrorCodes[PlatformErrorCodes["ContentPropertiesValidationError"] = 120] = "ContentPropertiesValidationError";
    PlatformErrorCodes[PlatformErrorCodes["ContentTypeNotFound"] = 121] = "ContentTypeNotFound";
    PlatformErrorCodes[PlatformErrorCodes["DeploymentPackageNotFound"] = 122] = "DeploymentPackageNotFound";
    PlatformErrorCodes[PlatformErrorCodes["ContentSearchInvalidParameters"] = 123] = "ContentSearchInvalidParameters";
    PlatformErrorCodes[PlatformErrorCodes["ContentItemPropertyAggregationError"] = 124] = "ContentItemPropertyAggregationError";
    PlatformErrorCodes[PlatformErrorCodes["DeploymentPackageFileNotFound"] = 125] = "DeploymentPackageFileNotFound";
    PlatformErrorCodes[PlatformErrorCodes["ContentPerforceFileHistoryNotFound"] = 126] = "ContentPerforceFileHistoryNotFound";
    PlatformErrorCodes[PlatformErrorCodes["ContentAssetZipCreationFailure"] = 127] = "ContentAssetZipCreationFailure";
    PlatformErrorCodes[PlatformErrorCodes["ContentAssetZipCreationBusy"] = 128] = "ContentAssetZipCreationBusy";
    PlatformErrorCodes[PlatformErrorCodes["ContentProjectNotFound"] = 129] = "ContentProjectNotFound";
    PlatformErrorCodes[PlatformErrorCodes["ContentFolderNotFound"] = 130] = "ContentFolderNotFound";
    PlatformErrorCodes[PlatformErrorCodes["ContentPackagesInconsistent"] = 131] = "ContentPackagesInconsistent";
    PlatformErrorCodes[PlatformErrorCodes["ContentPackagesInvalidState"] = 132] = "ContentPackagesInvalidState";
    PlatformErrorCodes[PlatformErrorCodes["ContentPackagesInconsistentType"] = 133] = "ContentPackagesInconsistentType";
    PlatformErrorCodes[PlatformErrorCodes["ContentCannotDeletePackage"] = 134] = "ContentCannotDeletePackage";
    PlatformErrorCodes[PlatformErrorCodes["ContentLockedForChanges"] = 135] = "ContentLockedForChanges";
    PlatformErrorCodes[PlatformErrorCodes["ContentFileUploadFailed"] = 136] = "ContentFileUploadFailed";
    PlatformErrorCodes[PlatformErrorCodes["ContentNotReviewed"] = 137] = "ContentNotReviewed";
    PlatformErrorCodes[PlatformErrorCodes["ContentPermissionDenied"] = 138] = "ContentPermissionDenied";
    PlatformErrorCodes[PlatformErrorCodes["ContentInvalidExternalUrl"] = 139] = "ContentInvalidExternalUrl";
    PlatformErrorCodes[PlatformErrorCodes["ContentExternalFileCannotBeImportedLocally"] = 140] = "ContentExternalFileCannotBeImportedLocally";
    PlatformErrorCodes[PlatformErrorCodes["ContentTagSaveFailure"] = 141] = "ContentTagSaveFailure";
    PlatformErrorCodes[PlatformErrorCodes["ContentPerforceUnmatchedFileError"] = 142] = "ContentPerforceUnmatchedFileError";
    PlatformErrorCodes[PlatformErrorCodes["ContentPerforceChangelistResultNotFound"] = 143] = "ContentPerforceChangelistResultNotFound";
    PlatformErrorCodes[PlatformErrorCodes["ContentPerforceChangelistFileItemsNotFound"] = 144] = "ContentPerforceChangelistFileItemsNotFound";
    PlatformErrorCodes[PlatformErrorCodes["ContentPerforceInvalidRevisionError"] = 145] = "ContentPerforceInvalidRevisionError";
    PlatformErrorCodes[PlatformErrorCodes["ContentUnloadedSaveResult"] = 146] = "ContentUnloadedSaveResult";
    PlatformErrorCodes[PlatformErrorCodes["ContentPropertyInvalidNumber"] = 147] = "ContentPropertyInvalidNumber";
    PlatformErrorCodes[PlatformErrorCodes["ContentPropertyInvalidUrl"] = 148] = "ContentPropertyInvalidUrl";
    PlatformErrorCodes[PlatformErrorCodes["ContentPropertyInvalidDate"] = 149] = "ContentPropertyInvalidDate";
    PlatformErrorCodes[PlatformErrorCodes["ContentPropertyInvalidSet"] = 150] = "ContentPropertyInvalidSet";
    PlatformErrorCodes[PlatformErrorCodes["ContentPropertyCannotDeserialize"] = 151] = "ContentPropertyCannotDeserialize";
    PlatformErrorCodes[PlatformErrorCodes["ContentRegexValidationFailOnProperty"] = 152] = "ContentRegexValidationFailOnProperty";
    PlatformErrorCodes[PlatformErrorCodes["ContentMaxLengthFailOnProperty"] = 153] = "ContentMaxLengthFailOnProperty";
    PlatformErrorCodes[PlatformErrorCodes["ContentPropertyUnexpectedDeserializationError"] = 154] = "ContentPropertyUnexpectedDeserializationError";
    PlatformErrorCodes[PlatformErrorCodes["ContentPropertyRequired"] = 155] = "ContentPropertyRequired";
    PlatformErrorCodes[PlatformErrorCodes["ContentCannotCreateFile"] = 156] = "ContentCannotCreateFile";
    PlatformErrorCodes[PlatformErrorCodes["ContentInvalidMigrationFile"] = 157] = "ContentInvalidMigrationFile";
    PlatformErrorCodes[PlatformErrorCodes["ContentMigrationAlteringProcessedItem"] = 158] = "ContentMigrationAlteringProcessedItem";
    PlatformErrorCodes[PlatformErrorCodes["ContentPropertyDefinitionNotFound"] = 159] = "ContentPropertyDefinitionNotFound";
    PlatformErrorCodes[PlatformErrorCodes["ContentReviewDataChanged"] = 160] = "ContentReviewDataChanged";
    PlatformErrorCodes[PlatformErrorCodes["ContentRollbackRevisionNotInPackage"] = 161] = "ContentRollbackRevisionNotInPackage";
    PlatformErrorCodes[PlatformErrorCodes["ContentItemNotBasedOnLatestRevision"] = 162] = "ContentItemNotBasedOnLatestRevision";
    PlatformErrorCodes[PlatformErrorCodes["ContentUnauthorized"] = 163] = "ContentUnauthorized";
    PlatformErrorCodes[PlatformErrorCodes["ContentCannotCreateDeploymentPackage"] = 164] = "ContentCannotCreateDeploymentPackage";
    PlatformErrorCodes[PlatformErrorCodes["ContentUserNotFound"] = 165] = "ContentUserNotFound";
    PlatformErrorCodes[PlatformErrorCodes["ContentLocalePermissionDenied"] = 166] = "ContentLocalePermissionDenied";
    PlatformErrorCodes[PlatformErrorCodes["ContentInvalidLinkToInternalEnvironment"] = 167] = "ContentInvalidLinkToInternalEnvironment";
    PlatformErrorCodes[PlatformErrorCodes["ContentInvalidBlacklistedContent"] = 168] = "ContentInvalidBlacklistedContent";
    PlatformErrorCodes[PlatformErrorCodes["ContentMacroMalformedNoContentId"] = 169] = "ContentMacroMalformedNoContentId";
    PlatformErrorCodes[PlatformErrorCodes["ContentMacroMalformedNoTemplateType"] = 170] = "ContentMacroMalformedNoTemplateType";
    PlatformErrorCodes[PlatformErrorCodes["ContentIllegalBNetMembershipId"] = 171] = "ContentIllegalBNetMembershipId";
    PlatformErrorCodes[PlatformErrorCodes["ContentLocaleDidNotMatchExpected"] = 172] = "ContentLocaleDidNotMatchExpected";
    PlatformErrorCodes[PlatformErrorCodes["ContentBabelCallFailed"] = 173] = "ContentBabelCallFailed";
    PlatformErrorCodes[PlatformErrorCodes["ContentEnglishPostLiveForbidden"] = 174] = "ContentEnglishPostLiveForbidden";
    PlatformErrorCodes[PlatformErrorCodes["ContentLocaleEditPermissionDenied"] = 175] = "ContentLocaleEditPermissionDenied";
    PlatformErrorCodes[PlatformErrorCodes["ContentStackUnknownError"] = 176] = "ContentStackUnknownError";
    PlatformErrorCodes[PlatformErrorCodes["ContentStackNotFound"] = 177] = "ContentStackNotFound";
    PlatformErrorCodes[PlatformErrorCodes["ContentStackRateLimited"] = 178] = "ContentStackRateLimited";
    PlatformErrorCodes[PlatformErrorCodes["ContentStackTimeout"] = 179] = "ContentStackTimeout";
    PlatformErrorCodes[PlatformErrorCodes["ContentStackServiceError"] = 180] = "ContentStackServiceError";
    PlatformErrorCodes[PlatformErrorCodes["ContentStackDeserializationFailure"] = 181] = "ContentStackDeserializationFailure";
    PlatformErrorCodes[PlatformErrorCodes["UserNonUniqueName"] = 200] = "UserNonUniqueName";
    PlatformErrorCodes[PlatformErrorCodes["UserManualLinkingStepRequired"] = 201] = "UserManualLinkingStepRequired";
    PlatformErrorCodes[PlatformErrorCodes["UserCreateUnknownSqlResult"] = 202] = "UserCreateUnknownSqlResult";
    PlatformErrorCodes[PlatformErrorCodes["UserCreateUnknownSqlException"] = 203] = "UserCreateUnknownSqlException";
    PlatformErrorCodes[PlatformErrorCodes["UserMalformedMembershipId"] = 204] = "UserMalformedMembershipId";
    PlatformErrorCodes[PlatformErrorCodes["UserCannotFindRequestedUser"] = 205] = "UserCannotFindRequestedUser";
    PlatformErrorCodes[PlatformErrorCodes["UserCannotLoadAccountCredentialLinkInfo"] = 206] = "UserCannotLoadAccountCredentialLinkInfo";
    PlatformErrorCodes[PlatformErrorCodes["UserInvalidMobileAppType"] = 207] = "UserInvalidMobileAppType";
    PlatformErrorCodes[PlatformErrorCodes["UserMissingMobilePairingInfo"] = 208] = "UserMissingMobilePairingInfo";
    PlatformErrorCodes[PlatformErrorCodes["UserCannotGenerateMobileKeyWhileUsingMobileCredential"] = 209] = "UserCannotGenerateMobileKeyWhileUsingMobileCredential";
    PlatformErrorCodes[PlatformErrorCodes["UserGenerateMobileKeyExistingSlotCollision"] = 210] = "UserGenerateMobileKeyExistingSlotCollision";
    PlatformErrorCodes[PlatformErrorCodes["UserDisplayNameMissingOrInvalid"] = 211] = "UserDisplayNameMissingOrInvalid";
    PlatformErrorCodes[PlatformErrorCodes["UserCannotLoadAccountProfileData"] = 212] = "UserCannotLoadAccountProfileData";
    PlatformErrorCodes[PlatformErrorCodes["UserCannotSaveUserProfileData"] = 213] = "UserCannotSaveUserProfileData";
    PlatformErrorCodes[PlatformErrorCodes["UserEmailMissingOrInvalid"] = 214] = "UserEmailMissingOrInvalid";
    PlatformErrorCodes[PlatformErrorCodes["UserTermsOfUseRequired"] = 215] = "UserTermsOfUseRequired";
    PlatformErrorCodes[PlatformErrorCodes["UserCannotCreateNewAccountWhileLoggedIn"] = 216] = "UserCannotCreateNewAccountWhileLoggedIn";
    PlatformErrorCodes[PlatformErrorCodes["UserCannotResolveCentralAccount"] = 217] = "UserCannotResolveCentralAccount";
    PlatformErrorCodes[PlatformErrorCodes["UserInvalidAvatar"] = 218] = "UserInvalidAvatar";
    PlatformErrorCodes[PlatformErrorCodes["UserMissingCreatedUserResult"] = 219] = "UserMissingCreatedUserResult";
    PlatformErrorCodes[PlatformErrorCodes["UserCannotChangeUniqueNameYet"] = 220] = "UserCannotChangeUniqueNameYet";
    PlatformErrorCodes[PlatformErrorCodes["UserCannotChangeDisplayNameYet"] = 221] = "UserCannotChangeDisplayNameYet";
    PlatformErrorCodes[PlatformErrorCodes["UserCannotChangeEmail"] = 222] = "UserCannotChangeEmail";
    PlatformErrorCodes[PlatformErrorCodes["UserUniqueNameMustStartWithLetter"] = 223] = "UserUniqueNameMustStartWithLetter";
    PlatformErrorCodes[PlatformErrorCodes["UserNoLinkedAccountsSupportFriendListings"] = 224] = "UserNoLinkedAccountsSupportFriendListings";
    PlatformErrorCodes[PlatformErrorCodes["UserAcknowledgmentTableFull"] = 225] = "UserAcknowledgmentTableFull";
    PlatformErrorCodes[PlatformErrorCodes["UserCreationDestinyMembershipRequired"] = 226] = "UserCreationDestinyMembershipRequired";
    PlatformErrorCodes[PlatformErrorCodes["UserFriendsTokenNeedsRefresh"] = 227] = "UserFriendsTokenNeedsRefresh";
    PlatformErrorCodes[PlatformErrorCodes["UserEmailValidationUnknown"] = 228] = "UserEmailValidationUnknown";
    PlatformErrorCodes[PlatformErrorCodes["UserEmailValidationLimit"] = 229] = "UserEmailValidationLimit";
    PlatformErrorCodes[PlatformErrorCodes["TransactionEmailSendFailure"] = 230] = "TransactionEmailSendFailure";
    PlatformErrorCodes[PlatformErrorCodes["MailHookPermissionFailure"] = 231] = "MailHookPermissionFailure";
    PlatformErrorCodes[PlatformErrorCodes["MailServiceRateLimit"] = 232] = "MailServiceRateLimit";
    PlatformErrorCodes[PlatformErrorCodes["UserEmailMustBeVerified"] = 233] = "UserEmailMustBeVerified";
    PlatformErrorCodes[PlatformErrorCodes["UserMustAllowCustomerServiceEmails"] = 234] = "UserMustAllowCustomerServiceEmails";
    PlatformErrorCodes[PlatformErrorCodes["NonTransactionalEmailSendFailure"] = 235] = "NonTransactionalEmailSendFailure";
    PlatformErrorCodes[PlatformErrorCodes["UnknownErrorSettingGlobalDisplayName"] = 236] = "UnknownErrorSettingGlobalDisplayName";
    PlatformErrorCodes[PlatformErrorCodes["DuplicateGlobalDisplayName"] = 237] = "DuplicateGlobalDisplayName";
    PlatformErrorCodes[PlatformErrorCodes["ErrorRunningNameValidationChecks"] = 238] = "ErrorRunningNameValidationChecks";
    PlatformErrorCodes[PlatformErrorCodes["ErrorDatabaseGlobalName"] = 239] = "ErrorDatabaseGlobalName";
    PlatformErrorCodes[PlatformErrorCodes["ErrorNoAvailableNameChanges"] = 240] = "ErrorNoAvailableNameChanges";
    PlatformErrorCodes[PlatformErrorCodes["ErrorNameAlreadySetToInput"] = 241] = "ErrorNameAlreadySetToInput";
    PlatformErrorCodes[PlatformErrorCodes["UserDisplayNameLessThanMinLength"] = 242] = "UserDisplayNameLessThanMinLength";
    PlatformErrorCodes[PlatformErrorCodes["UserDisplayNameGreaterThanMaxLength"] = 243] = "UserDisplayNameGreaterThanMaxLength";
    PlatformErrorCodes[PlatformErrorCodes["UserDisplayNameContainsUnacceptableOrInvalidContent"] = 244] = "UserDisplayNameContainsUnacceptableOrInvalidContent";
    PlatformErrorCodes[PlatformErrorCodes["MessagingUnknownError"] = 300] = "MessagingUnknownError";
    PlatformErrorCodes[PlatformErrorCodes["MessagingSelfError"] = 301] = "MessagingSelfError";
    PlatformErrorCodes[PlatformErrorCodes["MessagingSendThrottle"] = 302] = "MessagingSendThrottle";
    PlatformErrorCodes[PlatformErrorCodes["MessagingNoBody"] = 303] = "MessagingNoBody";
    PlatformErrorCodes[PlatformErrorCodes["MessagingTooManyUsers"] = 304] = "MessagingTooManyUsers";
    PlatformErrorCodes[PlatformErrorCodes["MessagingCanNotLeaveConversation"] = 305] = "MessagingCanNotLeaveConversation";
    PlatformErrorCodes[PlatformErrorCodes["MessagingUnableToSend"] = 306] = "MessagingUnableToSend";
    PlatformErrorCodes[PlatformErrorCodes["MessagingDeletedUserForbidden"] = 307] = "MessagingDeletedUserForbidden";
    PlatformErrorCodes[PlatformErrorCodes["MessagingCannotDeleteExternalConversation"] = 308] = "MessagingCannotDeleteExternalConversation";
    PlatformErrorCodes[PlatformErrorCodes["MessagingGroupChatDisabled"] = 309] = "MessagingGroupChatDisabled";
    PlatformErrorCodes[PlatformErrorCodes["MessagingMustIncludeSelfInPrivateMessage"] = 310] = "MessagingMustIncludeSelfInPrivateMessage";
    PlatformErrorCodes[PlatformErrorCodes["MessagingSenderIsBanned"] = 311] = "MessagingSenderIsBanned";
    PlatformErrorCodes[PlatformErrorCodes["MessagingGroupOptionalChatExceededMaximum"] = 312] = "MessagingGroupOptionalChatExceededMaximum";
    PlatformErrorCodes[PlatformErrorCodes["PrivateMessagingRequiresDestinyMembership"] = 313] = "PrivateMessagingRequiresDestinyMembership";
    PlatformErrorCodes[PlatformErrorCodes["AddSurveyAnswersUnknownSqlException"] = 400] = "AddSurveyAnswersUnknownSqlException";
    PlatformErrorCodes[PlatformErrorCodes["ForumBodyCannotBeEmpty"] = 500] = "ForumBodyCannotBeEmpty";
    PlatformErrorCodes[PlatformErrorCodes["ForumSubjectCannotBeEmptyOnTopicPost"] = 501] = "ForumSubjectCannotBeEmptyOnTopicPost";
    PlatformErrorCodes[PlatformErrorCodes["ForumCannotLocateParentPost"] = 502] = "ForumCannotLocateParentPost";
    PlatformErrorCodes[PlatformErrorCodes["ForumThreadLockedForReplies"] = 503] = "ForumThreadLockedForReplies";
    PlatformErrorCodes[PlatformErrorCodes["ForumUnknownSqlResultDuringCreatePost"] = 504] = "ForumUnknownSqlResultDuringCreatePost";
    PlatformErrorCodes[PlatformErrorCodes["ForumUnknownTagCreationError"] = 505] = "ForumUnknownTagCreationError";
    PlatformErrorCodes[PlatformErrorCodes["ForumUnknownSqlResultDuringTagItem"] = 506] = "ForumUnknownSqlResultDuringTagItem";
    PlatformErrorCodes[PlatformErrorCodes["ForumUnknownExceptionCreatePost"] = 507] = "ForumUnknownExceptionCreatePost";
    PlatformErrorCodes[PlatformErrorCodes["ForumQuestionMustBeTopicPost"] = 508] = "ForumQuestionMustBeTopicPost";
    PlatformErrorCodes[PlatformErrorCodes["ForumExceptionDuringTagSearch"] = 509] = "ForumExceptionDuringTagSearch";
    PlatformErrorCodes[PlatformErrorCodes["ForumExceptionDuringTopicRetrieval"] = 510] = "ForumExceptionDuringTopicRetrieval";
    PlatformErrorCodes[PlatformErrorCodes["ForumAliasedTagError"] = 511] = "ForumAliasedTagError";
    PlatformErrorCodes[PlatformErrorCodes["ForumCannotLocateThread"] = 512] = "ForumCannotLocateThread";
    PlatformErrorCodes[PlatformErrorCodes["ForumUnknownExceptionEditPost"] = 513] = "ForumUnknownExceptionEditPost";
    PlatformErrorCodes[PlatformErrorCodes["ForumCannotLocatePost"] = 514] = "ForumCannotLocatePost";
    PlatformErrorCodes[PlatformErrorCodes["ForumUnknownExceptionGetOrCreateTags"] = 515] = "ForumUnknownExceptionGetOrCreateTags";
    PlatformErrorCodes[PlatformErrorCodes["ForumEditPermissionDenied"] = 516] = "ForumEditPermissionDenied";
    PlatformErrorCodes[PlatformErrorCodes["ForumUnknownSqlResultDuringTagIdRetrieval"] = 517] = "ForumUnknownSqlResultDuringTagIdRetrieval";
    PlatformErrorCodes[PlatformErrorCodes["ForumCannotGetRating"] = 518] = "ForumCannotGetRating";
    PlatformErrorCodes[PlatformErrorCodes["ForumUnknownExceptionGetRating"] = 519] = "ForumUnknownExceptionGetRating";
    PlatformErrorCodes[PlatformErrorCodes["ForumRatingsAccessError"] = 520] = "ForumRatingsAccessError";
    PlatformErrorCodes[PlatformErrorCodes["ForumRelatedPostAccessError"] = 521] = "ForumRelatedPostAccessError";
    PlatformErrorCodes[PlatformErrorCodes["ForumLatestReplyAccessError"] = 522] = "ForumLatestReplyAccessError";
    PlatformErrorCodes[PlatformErrorCodes["ForumUserStatusAccessError"] = 523] = "ForumUserStatusAccessError";
    PlatformErrorCodes[PlatformErrorCodes["ForumAuthorAccessError"] = 524] = "ForumAuthorAccessError";
    PlatformErrorCodes[PlatformErrorCodes["ForumGroupAccessError"] = 525] = "ForumGroupAccessError";
    PlatformErrorCodes[PlatformErrorCodes["ForumUrlExpectedButMissing"] = 526] = "ForumUrlExpectedButMissing";
    PlatformErrorCodes[PlatformErrorCodes["ForumRepliesCannotBeEmpty"] = 527] = "ForumRepliesCannotBeEmpty";
    PlatformErrorCodes[PlatformErrorCodes["ForumRepliesCannotBeInDifferentGroups"] = 528] = "ForumRepliesCannotBeInDifferentGroups";
    PlatformErrorCodes[PlatformErrorCodes["ForumSubTopicCannotBeCreatedAtThisThreadLevel"] = 529] = "ForumSubTopicCannotBeCreatedAtThisThreadLevel";
    PlatformErrorCodes[PlatformErrorCodes["ForumCannotCreateContentTopic"] = 530] = "ForumCannotCreateContentTopic";
    PlatformErrorCodes[PlatformErrorCodes["ForumTopicDoesNotExist"] = 531] = "ForumTopicDoesNotExist";
    PlatformErrorCodes[PlatformErrorCodes["ForumContentCommentsNotAllowed"] = 532] = "ForumContentCommentsNotAllowed";
    PlatformErrorCodes[PlatformErrorCodes["ForumUnknownSqlResultDuringEditPost"] = 533] = "ForumUnknownSqlResultDuringEditPost";
    PlatformErrorCodes[PlatformErrorCodes["ForumUnknownSqlResultDuringGetPost"] = 534] = "ForumUnknownSqlResultDuringGetPost";
    PlatformErrorCodes[PlatformErrorCodes["ForumPostValidationBadUrl"] = 535] = "ForumPostValidationBadUrl";
    PlatformErrorCodes[PlatformErrorCodes["ForumBodyTooLong"] = 536] = "ForumBodyTooLong";
    PlatformErrorCodes[PlatformErrorCodes["ForumSubjectTooLong"] = 537] = "ForumSubjectTooLong";
    PlatformErrorCodes[PlatformErrorCodes["ForumAnnouncementNotAllowed"] = 538] = "ForumAnnouncementNotAllowed";
    PlatformErrorCodes[PlatformErrorCodes["ForumCannotShareOwnPost"] = 539] = "ForumCannotShareOwnPost";
    PlatformErrorCodes[PlatformErrorCodes["ForumEditNoOp"] = 540] = "ForumEditNoOp";
    PlatformErrorCodes[PlatformErrorCodes["ForumUnknownDatabaseErrorDuringGetPost"] = 541] = "ForumUnknownDatabaseErrorDuringGetPost";
    PlatformErrorCodes[PlatformErrorCodes["ForumExceeedMaximumRowLimit"] = 542] = "ForumExceeedMaximumRowLimit";
    PlatformErrorCodes[PlatformErrorCodes["ForumCannotSharePrivatePost"] = 543] = "ForumCannotSharePrivatePost";
    PlatformErrorCodes[PlatformErrorCodes["ForumCannotCrossPostBetweenGroups"] = 544] = "ForumCannotCrossPostBetweenGroups";
    PlatformErrorCodes[PlatformErrorCodes["ForumIncompatibleCategories"] = 555] = "ForumIncompatibleCategories";
    PlatformErrorCodes[PlatformErrorCodes["ForumCannotUseTheseCategoriesOnNonTopicPost"] = 556] = "ForumCannotUseTheseCategoriesOnNonTopicPost";
    PlatformErrorCodes[PlatformErrorCodes["ForumCanOnlyDeleteTopics"] = 557] = "ForumCanOnlyDeleteTopics";
    PlatformErrorCodes[PlatformErrorCodes["ForumDeleteSqlException"] = 558] = "ForumDeleteSqlException";
    PlatformErrorCodes[PlatformErrorCodes["ForumDeleteSqlUnknownResult"] = 559] = "ForumDeleteSqlUnknownResult";
    PlatformErrorCodes[PlatformErrorCodes["ForumTooManyTags"] = 560] = "ForumTooManyTags";
    PlatformErrorCodes[PlatformErrorCodes["ForumCanOnlyRateTopics"] = 561] = "ForumCanOnlyRateTopics";
    PlatformErrorCodes[PlatformErrorCodes["ForumBannedPostsCannotBeEdited"] = 562] = "ForumBannedPostsCannotBeEdited";
    PlatformErrorCodes[PlatformErrorCodes["ForumThreadRootIsBanned"] = 563] = "ForumThreadRootIsBanned";
    PlatformErrorCodes[PlatformErrorCodes["ForumCannotUseOfficialTagCategoryAsTag"] = 564] = "ForumCannotUseOfficialTagCategoryAsTag";
    PlatformErrorCodes[PlatformErrorCodes["ForumAnswerCannotBeMadeOnCreatePost"] = 565] = "ForumAnswerCannotBeMadeOnCreatePost";
    PlatformErrorCodes[PlatformErrorCodes["ForumAnswerCannotBeMadeOnEditPost"] = 566] = "ForumAnswerCannotBeMadeOnEditPost";
    PlatformErrorCodes[PlatformErrorCodes["ForumAnswerPostIdIsNotADirectReplyOfQuestion"] = 567] = "ForumAnswerPostIdIsNotADirectReplyOfQuestion";
    PlatformErrorCodes[PlatformErrorCodes["ForumAnswerTopicIdIsNotAQuestion"] = 568] = "ForumAnswerTopicIdIsNotAQuestion";
    PlatformErrorCodes[PlatformErrorCodes["ForumUnknownExceptionDuringMarkAnswer"] = 569] = "ForumUnknownExceptionDuringMarkAnswer";
    PlatformErrorCodes[PlatformErrorCodes["ForumUnknownSqlResultDuringMarkAnswer"] = 570] = "ForumUnknownSqlResultDuringMarkAnswer";
    PlatformErrorCodes[PlatformErrorCodes["ForumCannotRateYourOwnPosts"] = 571] = "ForumCannotRateYourOwnPosts";
    PlatformErrorCodes[PlatformErrorCodes["ForumPollsMustBeTheFirstPostInTopic"] = 572] = "ForumPollsMustBeTheFirstPostInTopic";
    PlatformErrorCodes[PlatformErrorCodes["ForumInvalidPollInput"] = 573] = "ForumInvalidPollInput";
    PlatformErrorCodes[PlatformErrorCodes["ForumGroupAdminEditNonMember"] = 574] = "ForumGroupAdminEditNonMember";
    PlatformErrorCodes[PlatformErrorCodes["ForumCannotEditModeratorEditedPost"] = 575] = "ForumCannotEditModeratorEditedPost";
    PlatformErrorCodes[PlatformErrorCodes["ForumRequiresDestinyMembership"] = 576] = "ForumRequiresDestinyMembership";
    PlatformErrorCodes[PlatformErrorCodes["ForumUnexpectedError"] = 577] = "ForumUnexpectedError";
    PlatformErrorCodes[PlatformErrorCodes["ForumAgeLock"] = 578] = "ForumAgeLock";
    PlatformErrorCodes[PlatformErrorCodes["ForumMaxPages"] = 579] = "ForumMaxPages";
    PlatformErrorCodes[PlatformErrorCodes["ForumMaxPagesOldestFirst"] = 580] = "ForumMaxPagesOldestFirst";
    PlatformErrorCodes[PlatformErrorCodes["ForumCannotApplyForumIdWithoutTags"] = 581] = "ForumCannotApplyForumIdWithoutTags";
    PlatformErrorCodes[PlatformErrorCodes["ForumCannotApplyForumIdToNonTopics"] = 582] = "ForumCannotApplyForumIdToNonTopics";
    PlatformErrorCodes[PlatformErrorCodes["ForumCannotDownvoteCommunityCreations"] = 583] = "ForumCannotDownvoteCommunityCreations";
    PlatformErrorCodes[PlatformErrorCodes["ForumTopicsMustHaveOfficialCategory"] = 584] = "ForumTopicsMustHaveOfficialCategory";
    PlatformErrorCodes[PlatformErrorCodes["ForumRecruitmentTopicMalformed"] = 585] = "ForumRecruitmentTopicMalformed";
    PlatformErrorCodes[PlatformErrorCodes["ForumRecruitmentTopicNotFound"] = 586] = "ForumRecruitmentTopicNotFound";
    PlatformErrorCodes[PlatformErrorCodes["ForumRecruitmentTopicNoSlotsRemaining"] = 587] = "ForumRecruitmentTopicNoSlotsRemaining";
    PlatformErrorCodes[PlatformErrorCodes["ForumRecruitmentTopicKickBan"] = 588] = "ForumRecruitmentTopicKickBan";
    PlatformErrorCodes[PlatformErrorCodes["ForumRecruitmentTopicRequirementsNotMet"] = 589] = "ForumRecruitmentTopicRequirementsNotMet";
    PlatformErrorCodes[PlatformErrorCodes["ForumRecruitmentTopicNoPlayers"] = 590] = "ForumRecruitmentTopicNoPlayers";
    PlatformErrorCodes[PlatformErrorCodes["ForumRecruitmentApproveFailMessageBan"] = 591] = "ForumRecruitmentApproveFailMessageBan";
    PlatformErrorCodes[PlatformErrorCodes["ForumRecruitmentGlobalBan"] = 592] = "ForumRecruitmentGlobalBan";
    PlatformErrorCodes[PlatformErrorCodes["ForumUserBannedFromThisTopic"] = 593] = "ForumUserBannedFromThisTopic";
    PlatformErrorCodes[PlatformErrorCodes["ForumRecruitmentFireteamMembersOnly"] = 594] = "ForumRecruitmentFireteamMembersOnly";
    PlatformErrorCodes[PlatformErrorCodes["ForumRequiresDestiny2Progress"] = 595] = "ForumRequiresDestiny2Progress";
    PlatformErrorCodes[PlatformErrorCodes["ForumRequiresDestiny2EntitlementPurchase"] = 596] = "ForumRequiresDestiny2EntitlementPurchase";
    PlatformErrorCodes[PlatformErrorCodes["GroupMembershipApplicationAlreadyResolved"] = 601] = "GroupMembershipApplicationAlreadyResolved";
    PlatformErrorCodes[PlatformErrorCodes["GroupMembershipAlreadyApplied"] = 602] = "GroupMembershipAlreadyApplied";
    PlatformErrorCodes[PlatformErrorCodes["GroupMembershipInsufficientPrivileges"] = 603] = "GroupMembershipInsufficientPrivileges";
    PlatformErrorCodes[PlatformErrorCodes["GroupIdNotReturnedFromCreation"] = 604] = "GroupIdNotReturnedFromCreation";
    PlatformErrorCodes[PlatformErrorCodes["GroupSearchInvalidParameters"] = 605] = "GroupSearchInvalidParameters";
    PlatformErrorCodes[PlatformErrorCodes["GroupMembershipPendingApplicationNotFound"] = 606] = "GroupMembershipPendingApplicationNotFound";
    PlatformErrorCodes[PlatformErrorCodes["GroupInvalidId"] = 607] = "GroupInvalidId";
    PlatformErrorCodes[PlatformErrorCodes["GroupInvalidMembershipId"] = 608] = "GroupInvalidMembershipId";
    PlatformErrorCodes[PlatformErrorCodes["GroupInvalidMembershipType"] = 609] = "GroupInvalidMembershipType";
    PlatformErrorCodes[PlatformErrorCodes["GroupMissingTags"] = 610] = "GroupMissingTags";
    PlatformErrorCodes[PlatformErrorCodes["GroupMembershipNotFound"] = 611] = "GroupMembershipNotFound";
    PlatformErrorCodes[PlatformErrorCodes["GroupInvalidRating"] = 612] = "GroupInvalidRating";
    PlatformErrorCodes[PlatformErrorCodes["GroupUserFollowingAccessError"] = 613] = "GroupUserFollowingAccessError";
    PlatformErrorCodes[PlatformErrorCodes["GroupUserMembershipAccessError"] = 614] = "GroupUserMembershipAccessError";
    PlatformErrorCodes[PlatformErrorCodes["GroupCreatorAccessError"] = 615] = "GroupCreatorAccessError";
    PlatformErrorCodes[PlatformErrorCodes["GroupAdminAccessError"] = 616] = "GroupAdminAccessError";
    PlatformErrorCodes[PlatformErrorCodes["GroupPrivatePostNotViewable"] = 617] = "GroupPrivatePostNotViewable";
    PlatformErrorCodes[PlatformErrorCodes["GroupMembershipNotLoggedIn"] = 618] = "GroupMembershipNotLoggedIn";
    PlatformErrorCodes[PlatformErrorCodes["GroupNotDeleted"] = 619] = "GroupNotDeleted";
    PlatformErrorCodes[PlatformErrorCodes["GroupUnknownErrorUndeletingGroup"] = 620] = "GroupUnknownErrorUndeletingGroup";
    PlatformErrorCodes[PlatformErrorCodes["GroupDeleted"] = 621] = "GroupDeleted";
    PlatformErrorCodes[PlatformErrorCodes["GroupNotFound"] = 622] = "GroupNotFound";
    PlatformErrorCodes[PlatformErrorCodes["GroupMemberBanned"] = 623] = "GroupMemberBanned";
    PlatformErrorCodes[PlatformErrorCodes["GroupMembershipClosed"] = 624] = "GroupMembershipClosed";
    PlatformErrorCodes[PlatformErrorCodes["GroupPrivatePostOverrideError"] = 625] = "GroupPrivatePostOverrideError";
    PlatformErrorCodes[PlatformErrorCodes["GroupNameTaken"] = 626] = "GroupNameTaken";
    PlatformErrorCodes[PlatformErrorCodes["GroupDeletionGracePeriodExpired"] = 627] = "GroupDeletionGracePeriodExpired";
    PlatformErrorCodes[PlatformErrorCodes["GroupCannotCheckBanStatus"] = 628] = "GroupCannotCheckBanStatus";
    PlatformErrorCodes[PlatformErrorCodes["GroupMaximumMembershipCountReached"] = 629] = "GroupMaximumMembershipCountReached";
    PlatformErrorCodes[PlatformErrorCodes["NoDestinyAccountForClanPlatform"] = 630] = "NoDestinyAccountForClanPlatform";
    PlatformErrorCodes[PlatformErrorCodes["AlreadyRequestingMembershipForClanPlatform"] = 631] = "AlreadyRequestingMembershipForClanPlatform";
    PlatformErrorCodes[PlatformErrorCodes["AlreadyClanMemberOnPlatform"] = 632] = "AlreadyClanMemberOnPlatform";
    PlatformErrorCodes[PlatformErrorCodes["GroupJoinedCannotSetClanName"] = 633] = "GroupJoinedCannotSetClanName";
    PlatformErrorCodes[PlatformErrorCodes["GroupLeftCannotClearClanName"] = 634] = "GroupLeftCannotClearClanName";
    PlatformErrorCodes[PlatformErrorCodes["GroupRelationshipRequestPending"] = 635] = "GroupRelationshipRequestPending";
    PlatformErrorCodes[PlatformErrorCodes["GroupRelationshipRequestBlocked"] = 636] = "GroupRelationshipRequestBlocked";
    PlatformErrorCodes[PlatformErrorCodes["GroupRelationshipRequestNotFound"] = 637] = "GroupRelationshipRequestNotFound";
    PlatformErrorCodes[PlatformErrorCodes["GroupRelationshipBlockNotFound"] = 638] = "GroupRelationshipBlockNotFound";
    PlatformErrorCodes[PlatformErrorCodes["GroupRelationshipNotFound"] = 639] = "GroupRelationshipNotFound";
    PlatformErrorCodes[PlatformErrorCodes["GroupAlreadyAllied"] = 641] = "GroupAlreadyAllied";
    PlatformErrorCodes[PlatformErrorCodes["GroupAlreadyMember"] = 642] = "GroupAlreadyMember";
    PlatformErrorCodes[PlatformErrorCodes["GroupRelationshipAlreadyExists"] = 643] = "GroupRelationshipAlreadyExists";
    PlatformErrorCodes[PlatformErrorCodes["InvalidGroupTypesForRelationshipRequest"] = 644] = "InvalidGroupTypesForRelationshipRequest";
    PlatformErrorCodes[PlatformErrorCodes["GroupAtMaximumAlliances"] = 646] = "GroupAtMaximumAlliances";
    PlatformErrorCodes[PlatformErrorCodes["GroupCannotSetClanOnlySettings"] = 647] = "GroupCannotSetClanOnlySettings";
    PlatformErrorCodes[PlatformErrorCodes["ClanCannotSetTwoDefaultPostTypes"] = 648] = "ClanCannotSetTwoDefaultPostTypes";
    PlatformErrorCodes[PlatformErrorCodes["GroupMemberInvalidMemberType"] = 649] = "GroupMemberInvalidMemberType";
    PlatformErrorCodes[PlatformErrorCodes["GroupInvalidPlatformType"] = 650] = "GroupInvalidPlatformType";
    PlatformErrorCodes[PlatformErrorCodes["GroupMemberInvalidSort"] = 651] = "GroupMemberInvalidSort";
    PlatformErrorCodes[PlatformErrorCodes["GroupInvalidResolveState"] = 652] = "GroupInvalidResolveState";
    PlatformErrorCodes[PlatformErrorCodes["ClanAlreadyEnabledForPlatform"] = 653] = "ClanAlreadyEnabledForPlatform";
    PlatformErrorCodes[PlatformErrorCodes["ClanNotEnabledForPlatform"] = 654] = "ClanNotEnabledForPlatform";
    PlatformErrorCodes[PlatformErrorCodes["ClanEnabledButCouldNotJoinNoAccount"] = 655] = "ClanEnabledButCouldNotJoinNoAccount";
    PlatformErrorCodes[PlatformErrorCodes["ClanEnabledButCouldNotJoinAlreadyMember"] = 656] = "ClanEnabledButCouldNotJoinAlreadyMember";
    PlatformErrorCodes[PlatformErrorCodes["ClanCannotJoinNoCredential"] = 657] = "ClanCannotJoinNoCredential";
    PlatformErrorCodes[PlatformErrorCodes["NoClanMembershipForPlatform"] = 658] = "NoClanMembershipForPlatform";
    PlatformErrorCodes[PlatformErrorCodes["GroupToGroupFollowLimitReached"] = 659] = "GroupToGroupFollowLimitReached";
    PlatformErrorCodes[PlatformErrorCodes["ChildGroupAlreadyInAlliance"] = 660] = "ChildGroupAlreadyInAlliance";
    PlatformErrorCodes[PlatformErrorCodes["OwnerGroupAlreadyInAlliance"] = 661] = "OwnerGroupAlreadyInAlliance";
    PlatformErrorCodes[PlatformErrorCodes["AllianceOwnerCannotJoinAlliance"] = 662] = "AllianceOwnerCannotJoinAlliance";
    PlatformErrorCodes[PlatformErrorCodes["GroupNotInAlliance"] = 663] = "GroupNotInAlliance";
    PlatformErrorCodes[PlatformErrorCodes["ChildGroupCannotInviteToAlliance"] = 664] = "ChildGroupCannotInviteToAlliance";
    PlatformErrorCodes[PlatformErrorCodes["GroupToGroupAlreadyFollowed"] = 665] = "GroupToGroupAlreadyFollowed";
    PlatformErrorCodes[PlatformErrorCodes["GroupToGroupNotFollowing"] = 666] = "GroupToGroupNotFollowing";
    PlatformErrorCodes[PlatformErrorCodes["ClanMaximumMembershipReached"] = 667] = "ClanMaximumMembershipReached";
    PlatformErrorCodes[PlatformErrorCodes["ClanNameNotValid"] = 668] = "ClanNameNotValid";
    PlatformErrorCodes[PlatformErrorCodes["ClanNameNotValidError"] = 669] = "ClanNameNotValidError";
    PlatformErrorCodes[PlatformErrorCodes["AllianceOwnerNotDefined"] = 670] = "AllianceOwnerNotDefined";
    PlatformErrorCodes[PlatformErrorCodes["AllianceChildNotDefined"] = 671] = "AllianceChildNotDefined";
    PlatformErrorCodes[PlatformErrorCodes["ClanCultureIllegalCharacters"] = 672] = "ClanCultureIllegalCharacters";
    PlatformErrorCodes[PlatformErrorCodes["ClanTagIllegalCharacters"] = 673] = "ClanTagIllegalCharacters";
    PlatformErrorCodes[PlatformErrorCodes["ClanRequiresInvitation"] = 674] = "ClanRequiresInvitation";
    PlatformErrorCodes[PlatformErrorCodes["ClanMembershipClosed"] = 675] = "ClanMembershipClosed";
    PlatformErrorCodes[PlatformErrorCodes["ClanInviteAlreadyMember"] = 676] = "ClanInviteAlreadyMember";
    PlatformErrorCodes[PlatformErrorCodes["GroupInviteAlreadyMember"] = 677] = "GroupInviteAlreadyMember";
    PlatformErrorCodes[PlatformErrorCodes["GroupJoinApprovalRequired"] = 678] = "GroupJoinApprovalRequired";
    PlatformErrorCodes[PlatformErrorCodes["ClanTagRequired"] = 679] = "ClanTagRequired";
    PlatformErrorCodes[PlatformErrorCodes["GroupNameCannotStartOrEndWithWhiteSpace"] = 680] = "GroupNameCannotStartOrEndWithWhiteSpace";
    PlatformErrorCodes[PlatformErrorCodes["ClanCallsignCannotStartOrEndWithWhiteSpace"] = 681] = "ClanCallsignCannotStartOrEndWithWhiteSpace";
    PlatformErrorCodes[PlatformErrorCodes["ClanMigrationFailed"] = 682] = "ClanMigrationFailed";
    PlatformErrorCodes[PlatformErrorCodes["ClanNotEnabledAlreadyMemberOfAnotherClan"] = 683] = "ClanNotEnabledAlreadyMemberOfAnotherClan";
    PlatformErrorCodes[PlatformErrorCodes["GroupModerationNotPermittedOnNonMembers"] = 684] = "GroupModerationNotPermittedOnNonMembers";
    PlatformErrorCodes[PlatformErrorCodes["ClanCreationInWorldServerFailed"] = 685] = "ClanCreationInWorldServerFailed";
    PlatformErrorCodes[PlatformErrorCodes["ClanNotFound"] = 686] = "ClanNotFound";
    PlatformErrorCodes[PlatformErrorCodes["ClanMembershipLevelDoesNotPermitThatAction"] = 687] = "ClanMembershipLevelDoesNotPermitThatAction";
    PlatformErrorCodes[PlatformErrorCodes["ClanMemberNotFound"] = 688] = "ClanMemberNotFound";
    PlatformErrorCodes[PlatformErrorCodes["ClanMissingMembershipApprovers"] = 689] = "ClanMissingMembershipApprovers";
    PlatformErrorCodes[PlatformErrorCodes["ClanInWrongStateForRequestedAction"] = 690] = "ClanInWrongStateForRequestedAction";
    PlatformErrorCodes[PlatformErrorCodes["ClanNameAlreadyUsed"] = 691] = "ClanNameAlreadyUsed";
    PlatformErrorCodes[PlatformErrorCodes["ClanTooFewMembers"] = 692] = "ClanTooFewMembers";
    PlatformErrorCodes[PlatformErrorCodes["ClanInfoCannotBeWhitespace"] = 693] = "ClanInfoCannotBeWhitespace";
    PlatformErrorCodes[PlatformErrorCodes["GroupCultureThrottle"] = 694] = "GroupCultureThrottle";
    PlatformErrorCodes[PlatformErrorCodes["ClanTargetDisallowsInvites"] = 695] = "ClanTargetDisallowsInvites";
    PlatformErrorCodes[PlatformErrorCodes["ClanInvalidOperation"] = 696] = "ClanInvalidOperation";
    PlatformErrorCodes[PlatformErrorCodes["ClanFounderCannotLeaveWithoutAbdication"] = 697] = "ClanFounderCannotLeaveWithoutAbdication";
    PlatformErrorCodes[PlatformErrorCodes["ClanNameReserved"] = 698] = "ClanNameReserved";
    PlatformErrorCodes[PlatformErrorCodes["ClanApplicantInClanSoNowInvited"] = 699] = "ClanApplicantInClanSoNowInvited";
    PlatformErrorCodes[PlatformErrorCodes["ActivitiesUnknownException"] = 701] = "ActivitiesUnknownException";
    PlatformErrorCodes[PlatformErrorCodes["ActivitiesParameterNull"] = 702] = "ActivitiesParameterNull";
    PlatformErrorCodes[PlatformErrorCodes["ActivityCountsDiabled"] = 703] = "ActivityCountsDiabled";
    PlatformErrorCodes[PlatformErrorCodes["ActivitySearchInvalidParameters"] = 704] = "ActivitySearchInvalidParameters";
    PlatformErrorCodes[PlatformErrorCodes["ActivityPermissionDenied"] = 705] = "ActivityPermissionDenied";
    PlatformErrorCodes[PlatformErrorCodes["ShareAlreadyShared"] = 706] = "ShareAlreadyShared";
    PlatformErrorCodes[PlatformErrorCodes["ActivityLoggingDisabled"] = 707] = "ActivityLoggingDisabled";
    PlatformErrorCodes[PlatformErrorCodes["ClanRequiresExistingDestinyAccount"] = 750] = "ClanRequiresExistingDestinyAccount";
    PlatformErrorCodes[PlatformErrorCodes["ClanNameRestricted"] = 751] = "ClanNameRestricted";
    PlatformErrorCodes[PlatformErrorCodes["ClanCreationBan"] = 752] = "ClanCreationBan";
    PlatformErrorCodes[PlatformErrorCodes["ClanCreationTenureRequirementsNotMet"] = 753] = "ClanCreationTenureRequirementsNotMet";
    PlatformErrorCodes[PlatformErrorCodes["ClanFieldContainsReservedTerms"] = 754] = "ClanFieldContainsReservedTerms";
    PlatformErrorCodes[PlatformErrorCodes["ClanFieldContainsInappropriateContent"] = 755] = "ClanFieldContainsInappropriateContent";
    PlatformErrorCodes[PlatformErrorCodes["ItemAlreadyFollowed"] = 801] = "ItemAlreadyFollowed";
    PlatformErrorCodes[PlatformErrorCodes["ItemNotFollowed"] = 802] = "ItemNotFollowed";
    PlatformErrorCodes[PlatformErrorCodes["CannotFollowSelf"] = 803] = "CannotFollowSelf";
    PlatformErrorCodes[PlatformErrorCodes["GroupFollowLimitExceeded"] = 804] = "GroupFollowLimitExceeded";
    PlatformErrorCodes[PlatformErrorCodes["TagFollowLimitExceeded"] = 805] = "TagFollowLimitExceeded";
    PlatformErrorCodes[PlatformErrorCodes["UserFollowLimitExceeded"] = 806] = "UserFollowLimitExceeded";
    PlatformErrorCodes[PlatformErrorCodes["FollowUnsupportedEntityType"] = 807] = "FollowUnsupportedEntityType";
    PlatformErrorCodes[PlatformErrorCodes["NoValidTagsInList"] = 900] = "NoValidTagsInList";
    PlatformErrorCodes[PlatformErrorCodes["BelowMinimumSuggestionLength"] = 901] = "BelowMinimumSuggestionLength";
    PlatformErrorCodes[PlatformErrorCodes["CannotGetSuggestionsOnMultipleTagsSimultaneously"] = 902] = "CannotGetSuggestionsOnMultipleTagsSimultaneously";
    PlatformErrorCodes[PlatformErrorCodes["NotAValidPartialTag"] = 903] = "NotAValidPartialTag";
    PlatformErrorCodes[PlatformErrorCodes["TagSuggestionsUnknownSqlResult"] = 904] = "TagSuggestionsUnknownSqlResult";
    PlatformErrorCodes[PlatformErrorCodes["TagsUnableToLoadPopularTagsFromDatabase"] = 905] = "TagsUnableToLoadPopularTagsFromDatabase";
    PlatformErrorCodes[PlatformErrorCodes["TagInvalid"] = 906] = "TagInvalid";
    PlatformErrorCodes[PlatformErrorCodes["TagNotFound"] = 907] = "TagNotFound";
    PlatformErrorCodes[PlatformErrorCodes["SingleTagExpected"] = 908] = "SingleTagExpected";
    PlatformErrorCodes[PlatformErrorCodes["TagsExceededMaximumPerItem"] = 909] = "TagsExceededMaximumPerItem";
    PlatformErrorCodes[PlatformErrorCodes["IgnoreInvalidParameters"] = 1000] = "IgnoreInvalidParameters";
    PlatformErrorCodes[PlatformErrorCodes["IgnoreSqlException"] = 1001] = "IgnoreSqlException";
    PlatformErrorCodes[PlatformErrorCodes["IgnoreErrorRetrievingGroupPermissions"] = 1002] = "IgnoreErrorRetrievingGroupPermissions";
    PlatformErrorCodes[PlatformErrorCodes["IgnoreErrorInsufficientPermission"] = 1003] = "IgnoreErrorInsufficientPermission";
    PlatformErrorCodes[PlatformErrorCodes["IgnoreErrorRetrievingItem"] = 1004] = "IgnoreErrorRetrievingItem";
    PlatformErrorCodes[PlatformErrorCodes["IgnoreCannotIgnoreSelf"] = 1005] = "IgnoreCannotIgnoreSelf";
    PlatformErrorCodes[PlatformErrorCodes["IgnoreIllegalType"] = 1006] = "IgnoreIllegalType";
    PlatformErrorCodes[PlatformErrorCodes["IgnoreNotFound"] = 1007] = "IgnoreNotFound";
    PlatformErrorCodes[PlatformErrorCodes["IgnoreUserGloballyIgnored"] = 1008] = "IgnoreUserGloballyIgnored";
    PlatformErrorCodes[PlatformErrorCodes["IgnoreUserIgnored"] = 1009] = "IgnoreUserIgnored";
    PlatformErrorCodes[PlatformErrorCodes["TargetUserIgnored"] = 1010] = "TargetUserIgnored";
    PlatformErrorCodes[PlatformErrorCodes["NotificationSettingInvalid"] = 1100] = "NotificationSettingInvalid";
    PlatformErrorCodes[PlatformErrorCodes["PsnApiExpiredAccessToken"] = 1204] = "PsnApiExpiredAccessToken";
    PlatformErrorCodes[PlatformErrorCodes["PSNExForbidden"] = 1205] = "PSNExForbidden";
    PlatformErrorCodes[PlatformErrorCodes["PSNExSystemDisabled"] = 1218] = "PSNExSystemDisabled";
    PlatformErrorCodes[PlatformErrorCodes["PsnApiErrorCodeUnknown"] = 1223] = "PsnApiErrorCodeUnknown";
    PlatformErrorCodes[PlatformErrorCodes["PsnApiErrorWebException"] = 1224] = "PsnApiErrorWebException";
    PlatformErrorCodes[PlatformErrorCodes["PsnApiBadRequest"] = 1225] = "PsnApiBadRequest";
    PlatformErrorCodes[PlatformErrorCodes["PsnApiAccessTokenRequired"] = 1226] = "PsnApiAccessTokenRequired";
    PlatformErrorCodes[PlatformErrorCodes["PsnApiInvalidAccessToken"] = 1227] = "PsnApiInvalidAccessToken";
    PlatformErrorCodes[PlatformErrorCodes["PsnApiBannedUser"] = 1229] = "PsnApiBannedUser";
    PlatformErrorCodes[PlatformErrorCodes["PsnApiAccountUpgradeRequired"] = 1230] = "PsnApiAccountUpgradeRequired";
    PlatformErrorCodes[PlatformErrorCodes["PsnApiServiceTemporarilyUnavailable"] = 1231] = "PsnApiServiceTemporarilyUnavailable";
    PlatformErrorCodes[PlatformErrorCodes["PsnApiServerBusy"] = 1232] = "PsnApiServerBusy";
    PlatformErrorCodes[PlatformErrorCodes["PsnApiUnderMaintenance"] = 1233] = "PsnApiUnderMaintenance";
    PlatformErrorCodes[PlatformErrorCodes["PsnApiProfileUserNotFound"] = 1234] = "PsnApiProfileUserNotFound";
    PlatformErrorCodes[PlatformErrorCodes["PsnApiProfilePrivacyRestriction"] = 1235] = "PsnApiProfilePrivacyRestriction";
    PlatformErrorCodes[PlatformErrorCodes["PsnApiProfileUnderMaintenance"] = 1236] = "PsnApiProfileUnderMaintenance";
    PlatformErrorCodes[PlatformErrorCodes["PsnApiAccountAttributeMissing"] = 1237] = "PsnApiAccountAttributeMissing";
    PlatformErrorCodes[PlatformErrorCodes["PsnApiNoPermission"] = 1238] = "PsnApiNoPermission";
    PlatformErrorCodes[PlatformErrorCodes["PsnApiTargetUserBlocked"] = 1239] = "PsnApiTargetUserBlocked";
    PlatformErrorCodes[PlatformErrorCodes["PsnApiJwksMissing"] = 1240] = "PsnApiJwksMissing";
    PlatformErrorCodes[PlatformErrorCodes["PsnApiJwtMalformedHeader"] = 1241] = "PsnApiJwtMalformedHeader";
    PlatformErrorCodes[PlatformErrorCodes["PsnApiJwtMalformedPayload"] = 1242] = "PsnApiJwtMalformedPayload";
    PlatformErrorCodes[PlatformErrorCodes["XblExSystemDisabled"] = 1300] = "XblExSystemDisabled";
    PlatformErrorCodes[PlatformErrorCodes["XblExUnknownError"] = 1301] = "XblExUnknownError";
    PlatformErrorCodes[PlatformErrorCodes["XblApiErrorWebException"] = 1302] = "XblApiErrorWebException";
    PlatformErrorCodes[PlatformErrorCodes["XblStsTokenInvalid"] = 1303] = "XblStsTokenInvalid";
    PlatformErrorCodes[PlatformErrorCodes["XblStsMissingToken"] = 1304] = "XblStsMissingToken";
    PlatformErrorCodes[PlatformErrorCodes["XblStsExpiredToken"] = 1305] = "XblStsExpiredToken";
    PlatformErrorCodes[PlatformErrorCodes["XblAccessToTheSandboxDenied"] = 1306] = "XblAccessToTheSandboxDenied";
    PlatformErrorCodes[PlatformErrorCodes["XblMsaResponseMissing"] = 1307] = "XblMsaResponseMissing";
    PlatformErrorCodes[PlatformErrorCodes["XblMsaAccessTokenExpired"] = 1308] = "XblMsaAccessTokenExpired";
    PlatformErrorCodes[PlatformErrorCodes["XblMsaInvalidRequest"] = 1309] = "XblMsaInvalidRequest";
    PlatformErrorCodes[PlatformErrorCodes["XblMsaFriendsRequireSignIn"] = 1310] = "XblMsaFriendsRequireSignIn";
    PlatformErrorCodes[PlatformErrorCodes["XblUserActionRequired"] = 1311] = "XblUserActionRequired";
    PlatformErrorCodes[PlatformErrorCodes["XblParentalControls"] = 1312] = "XblParentalControls";
    PlatformErrorCodes[PlatformErrorCodes["XblDeveloperAccount"] = 1313] = "XblDeveloperAccount";
    PlatformErrorCodes[PlatformErrorCodes["XblUserTokenExpired"] = 1314] = "XblUserTokenExpired";
    PlatformErrorCodes[PlatformErrorCodes["XblUserTokenInvalid"] = 1315] = "XblUserTokenInvalid";
    PlatformErrorCodes[PlatformErrorCodes["XblOffline"] = 1316] = "XblOffline";
    PlatformErrorCodes[PlatformErrorCodes["XblUnknownErrorCode"] = 1317] = "XblUnknownErrorCode";
    PlatformErrorCodes[PlatformErrorCodes["XblMsaInvalidGrant"] = 1318] = "XblMsaInvalidGrant";
    PlatformErrorCodes[PlatformErrorCodes["ReportNotYetResolved"] = 1400] = "ReportNotYetResolved";
    PlatformErrorCodes[PlatformErrorCodes["ReportOverturnDoesNotChangeDecision"] = 1401] = "ReportOverturnDoesNotChangeDecision";
    PlatformErrorCodes[PlatformErrorCodes["ReportNotFound"] = 1402] = "ReportNotFound";
    PlatformErrorCodes[PlatformErrorCodes["ReportAlreadyReported"] = 1403] = "ReportAlreadyReported";
    PlatformErrorCodes[PlatformErrorCodes["ReportInvalidResolution"] = 1404] = "ReportInvalidResolution";
    PlatformErrorCodes[PlatformErrorCodes["ReportNotAssignedToYou"] = 1405] = "ReportNotAssignedToYou";
    PlatformErrorCodes[PlatformErrorCodes["LegacyGameStatsSystemDisabled"] = 1500] = "LegacyGameStatsSystemDisabled";
    PlatformErrorCodes[PlatformErrorCodes["LegacyGameStatsUnknownError"] = 1501] = "LegacyGameStatsUnknownError";
    PlatformErrorCodes[PlatformErrorCodes["LegacyGameStatsMalformedSneakerNetCode"] = 1502] = "LegacyGameStatsMalformedSneakerNetCode";
    PlatformErrorCodes[PlatformErrorCodes["DestinyAccountAcquisitionFailure"] = 1600] = "DestinyAccountAcquisitionFailure";
    PlatformErrorCodes[PlatformErrorCodes["DestinyAccountNotFound"] = 1601] = "DestinyAccountNotFound";
    PlatformErrorCodes[PlatformErrorCodes["DestinyBuildStatsDatabaseError"] = 1602] = "DestinyBuildStatsDatabaseError";
    PlatformErrorCodes[PlatformErrorCodes["DestinyCharacterStatsDatabaseError"] = 1603] = "DestinyCharacterStatsDatabaseError";
    PlatformErrorCodes[PlatformErrorCodes["DestinyPvPStatsDatabaseError"] = 1604] = "DestinyPvPStatsDatabaseError";
    PlatformErrorCodes[PlatformErrorCodes["DestinyPvEStatsDatabaseError"] = 1605] = "DestinyPvEStatsDatabaseError";
    PlatformErrorCodes[PlatformErrorCodes["DestinyGrimoireStatsDatabaseError"] = 1606] = "DestinyGrimoireStatsDatabaseError";
    PlatformErrorCodes[PlatformErrorCodes["DestinyStatsParameterMembershipTypeParseError"] = 1607] = "DestinyStatsParameterMembershipTypeParseError";
    PlatformErrorCodes[PlatformErrorCodes["DestinyStatsParameterMembershipIdParseError"] = 1608] = "DestinyStatsParameterMembershipIdParseError";
    PlatformErrorCodes[PlatformErrorCodes["DestinyStatsParameterRangeParseError"] = 1609] = "DestinyStatsParameterRangeParseError";
    PlatformErrorCodes[PlatformErrorCodes["DestinyStringItemHashNotFound"] = 1610] = "DestinyStringItemHashNotFound";
    PlatformErrorCodes[PlatformErrorCodes["DestinyStringSetNotFound"] = 1611] = "DestinyStringSetNotFound";
    PlatformErrorCodes[PlatformErrorCodes["DestinyContentLookupNotFoundForKey"] = 1612] = "DestinyContentLookupNotFoundForKey";
    PlatformErrorCodes[PlatformErrorCodes["DestinyContentItemNotFound"] = 1613] = "DestinyContentItemNotFound";
    PlatformErrorCodes[PlatformErrorCodes["DestinyContentSectionNotFound"] = 1614] = "DestinyContentSectionNotFound";
    PlatformErrorCodes[PlatformErrorCodes["DestinyContentPropertyNotFound"] = 1615] = "DestinyContentPropertyNotFound";
    PlatformErrorCodes[PlatformErrorCodes["DestinyContentConfigNotFound"] = 1616] = "DestinyContentConfigNotFound";
    PlatformErrorCodes[PlatformErrorCodes["DestinyContentPropertyBucketValueNotFound"] = 1617] = "DestinyContentPropertyBucketValueNotFound";
    PlatformErrorCodes[PlatformErrorCodes["DestinyUnexpectedError"] = 1618] = "DestinyUnexpectedError";
    PlatformErrorCodes[PlatformErrorCodes["DestinyInvalidAction"] = 1619] = "DestinyInvalidAction";
    PlatformErrorCodes[PlatformErrorCodes["DestinyCharacterNotFound"] = 1620] = "DestinyCharacterNotFound";
    PlatformErrorCodes[PlatformErrorCodes["DestinyInvalidFlag"] = 1621] = "DestinyInvalidFlag";
    PlatformErrorCodes[PlatformErrorCodes["DestinyInvalidRequest"] = 1622] = "DestinyInvalidRequest";
    PlatformErrorCodes[PlatformErrorCodes["DestinyItemNotFound"] = 1623] = "DestinyItemNotFound";
    PlatformErrorCodes[PlatformErrorCodes["DestinyInvalidCustomizationChoices"] = 1624] = "DestinyInvalidCustomizationChoices";
    PlatformErrorCodes[PlatformErrorCodes["DestinyVendorItemNotFound"] = 1625] = "DestinyVendorItemNotFound";
    PlatformErrorCodes[PlatformErrorCodes["DestinyInternalError"] = 1626] = "DestinyInternalError";
    PlatformErrorCodes[PlatformErrorCodes["DestinyVendorNotFound"] = 1627] = "DestinyVendorNotFound";
    PlatformErrorCodes[PlatformErrorCodes["DestinyRecentActivitiesDatabaseError"] = 1628] = "DestinyRecentActivitiesDatabaseError";
    PlatformErrorCodes[PlatformErrorCodes["DestinyItemBucketNotFound"] = 1629] = "DestinyItemBucketNotFound";
    PlatformErrorCodes[PlatformErrorCodes["DestinyInvalidMembershipType"] = 1630] = "DestinyInvalidMembershipType";
    PlatformErrorCodes[PlatformErrorCodes["DestinyVersionIncompatibility"] = 1631] = "DestinyVersionIncompatibility";
    PlatformErrorCodes[PlatformErrorCodes["DestinyItemAlreadyInInventory"] = 1632] = "DestinyItemAlreadyInInventory";
    PlatformErrorCodes[PlatformErrorCodes["DestinyBucketNotFound"] = 1633] = "DestinyBucketNotFound";
    PlatformErrorCodes[PlatformErrorCodes["DestinyCharacterNotInTower"] = 1634] = "DestinyCharacterNotInTower";
    PlatformErrorCodes[PlatformErrorCodes["DestinyCharacterNotLoggedIn"] = 1635] = "DestinyCharacterNotLoggedIn";
    PlatformErrorCodes[PlatformErrorCodes["DestinyDefinitionsNotLoaded"] = 1636] = "DestinyDefinitionsNotLoaded";
    PlatformErrorCodes[PlatformErrorCodes["DestinyInventoryFull"] = 1637] = "DestinyInventoryFull";
    PlatformErrorCodes[PlatformErrorCodes["DestinyItemFailedLevelCheck"] = 1638] = "DestinyItemFailedLevelCheck";
    PlatformErrorCodes[PlatformErrorCodes["DestinyItemFailedUnlockCheck"] = 1639] = "DestinyItemFailedUnlockCheck";
    PlatformErrorCodes[PlatformErrorCodes["DestinyItemUnequippable"] = 1640] = "DestinyItemUnequippable";
    PlatformErrorCodes[PlatformErrorCodes["DestinyItemUniqueEquipRestricted"] = 1641] = "DestinyItemUniqueEquipRestricted";
    PlatformErrorCodes[PlatformErrorCodes["DestinyNoRoomInDestination"] = 1642] = "DestinyNoRoomInDestination";
    PlatformErrorCodes[PlatformErrorCodes["DestinyServiceFailure"] = 1643] = "DestinyServiceFailure";
    PlatformErrorCodes[PlatformErrorCodes["DestinyServiceRetired"] = 1644] = "DestinyServiceRetired";
    PlatformErrorCodes[PlatformErrorCodes["DestinyTransferFailed"] = 1645] = "DestinyTransferFailed";
    PlatformErrorCodes[PlatformErrorCodes["DestinyTransferNotFoundForSourceBucket"] = 1646] = "DestinyTransferNotFoundForSourceBucket";
    PlatformErrorCodes[PlatformErrorCodes["DestinyUnexpectedResultInVendorTransferCheck"] = 1647] = "DestinyUnexpectedResultInVendorTransferCheck";
    PlatformErrorCodes[PlatformErrorCodes["DestinyUniquenessViolation"] = 1648] = "DestinyUniquenessViolation";
    PlatformErrorCodes[PlatformErrorCodes["DestinyErrorDeserializationFailure"] = 1649] = "DestinyErrorDeserializationFailure";
    PlatformErrorCodes[PlatformErrorCodes["DestinyValidAccountTicketRequired"] = 1650] = "DestinyValidAccountTicketRequired";
    PlatformErrorCodes[PlatformErrorCodes["DestinyShardRelayClientTimeout"] = 1651] = "DestinyShardRelayClientTimeout";
    PlatformErrorCodes[PlatformErrorCodes["DestinyShardRelayProxyTimeout"] = 1652] = "DestinyShardRelayProxyTimeout";
    PlatformErrorCodes[PlatformErrorCodes["DestinyPGCRNotFound"] = 1653] = "DestinyPGCRNotFound";
    PlatformErrorCodes[PlatformErrorCodes["DestinyAccountMustBeOffline"] = 1654] = "DestinyAccountMustBeOffline";
    PlatformErrorCodes[PlatformErrorCodes["DestinyCanOnlyEquipInGame"] = 1655] = "DestinyCanOnlyEquipInGame";
    PlatformErrorCodes[PlatformErrorCodes["DestinyCannotPerformActionOnEquippedItem"] = 1656] = "DestinyCannotPerformActionOnEquippedItem";
    PlatformErrorCodes[PlatformErrorCodes["DestinyQuestAlreadyCompleted"] = 1657] = "DestinyQuestAlreadyCompleted";
    PlatformErrorCodes[PlatformErrorCodes["DestinyQuestAlreadyTracked"] = 1658] = "DestinyQuestAlreadyTracked";
    PlatformErrorCodes[PlatformErrorCodes["DestinyTrackableQuestsFull"] = 1659] = "DestinyTrackableQuestsFull";
    PlatformErrorCodes[PlatformErrorCodes["DestinyItemNotTransferrable"] = 1660] = "DestinyItemNotTransferrable";
    PlatformErrorCodes[PlatformErrorCodes["DestinyVendorPurchaseNotAllowed"] = 1661] = "DestinyVendorPurchaseNotAllowed";
    PlatformErrorCodes[PlatformErrorCodes["DestinyContentVersionMismatch"] = 1662] = "DestinyContentVersionMismatch";
    PlatformErrorCodes[PlatformErrorCodes["DestinyItemActionForbidden"] = 1663] = "DestinyItemActionForbidden";
    PlatformErrorCodes[PlatformErrorCodes["DestinyRefundInvalid"] = 1664] = "DestinyRefundInvalid";
    PlatformErrorCodes[PlatformErrorCodes["DestinyPrivacyRestriction"] = 1665] = "DestinyPrivacyRestriction";
    PlatformErrorCodes[PlatformErrorCodes["DestinyActionInsufficientPrivileges"] = 1666] = "DestinyActionInsufficientPrivileges";
    PlatformErrorCodes[PlatformErrorCodes["DestinyInvalidClaimException"] = 1667] = "DestinyInvalidClaimException";
    PlatformErrorCodes[PlatformErrorCodes["DestinyLegacyPlatformRestricted"] = 1668] = "DestinyLegacyPlatformRestricted";
    PlatformErrorCodes[PlatformErrorCodes["DestinyLegacyPlatformInUse"] = 1669] = "DestinyLegacyPlatformInUse";
    PlatformErrorCodes[PlatformErrorCodes["DestinyLegacyPlatformInaccessible"] = 1670] = "DestinyLegacyPlatformInaccessible";
    PlatformErrorCodes[PlatformErrorCodes["DestinyCannotPerformActionAtThisLocation"] = 1671] = "DestinyCannotPerformActionAtThisLocation";
    PlatformErrorCodes[PlatformErrorCodes["DestinyThrottledByGameServer"] = 1672] = "DestinyThrottledByGameServer";
    PlatformErrorCodes[PlatformErrorCodes["DestinyItemNotTransferrableHasSideEffects"] = 1673] = "DestinyItemNotTransferrableHasSideEffects";
    PlatformErrorCodes[PlatformErrorCodes["DestinyItemLocked"] = 1674] = "DestinyItemLocked";
    PlatformErrorCodes[PlatformErrorCodes["DestinyCannotAffordMaterialRequirements"] = 1675] = "DestinyCannotAffordMaterialRequirements";
    PlatformErrorCodes[PlatformErrorCodes["DestinyFailedPlugInsertionRules"] = 1676] = "DestinyFailedPlugInsertionRules";
    PlatformErrorCodes[PlatformErrorCodes["DestinySocketNotFound"] = 1677] = "DestinySocketNotFound";
    PlatformErrorCodes[PlatformErrorCodes["DestinySocketActionNotAllowed"] = 1678] = "DestinySocketActionNotAllowed";
    PlatformErrorCodes[PlatformErrorCodes["DestinySocketAlreadyHasPlug"] = 1679] = "DestinySocketAlreadyHasPlug";
    PlatformErrorCodes[PlatformErrorCodes["DestinyPlugItemNotAvailable"] = 1680] = "DestinyPlugItemNotAvailable";
    PlatformErrorCodes[PlatformErrorCodes["DestinyCharacterLoggedInNotAllowed"] = 1681] = "DestinyCharacterLoggedInNotAllowed";
    PlatformErrorCodes[PlatformErrorCodes["DestinyPublicAccountNotAccessible"] = 1682] = "DestinyPublicAccountNotAccessible";
    PlatformErrorCodes[PlatformErrorCodes["DestinyClaimsItemAlreadyClaimed"] = 1683] = "DestinyClaimsItemAlreadyClaimed";
    PlatformErrorCodes[PlatformErrorCodes["DestinyClaimsNoInventorySpace"] = 1684] = "DestinyClaimsNoInventorySpace";
    PlatformErrorCodes[PlatformErrorCodes["DestinyClaimsRequiredLevelNotMet"] = 1685] = "DestinyClaimsRequiredLevelNotMet";
    PlatformErrorCodes[PlatformErrorCodes["DestinyClaimsInvalidState"] = 1686] = "DestinyClaimsInvalidState";
    PlatformErrorCodes[PlatformErrorCodes["DestinyNotEnoughRoomForMultipleRewards"] = 1687] = "DestinyNotEnoughRoomForMultipleRewards";
    PlatformErrorCodes[PlatformErrorCodes["DestinyDirectBabelClientTimeout"] = 1688] = "DestinyDirectBabelClientTimeout";
    PlatformErrorCodes[PlatformErrorCodes["FbInvalidRequest"] = 1800] = "FbInvalidRequest";
    PlatformErrorCodes[PlatformErrorCodes["FbRedirectMismatch"] = 1801] = "FbRedirectMismatch";
    PlatformErrorCodes[PlatformErrorCodes["FbAccessDenied"] = 1802] = "FbAccessDenied";
    PlatformErrorCodes[PlatformErrorCodes["FbUnsupportedResponseType"] = 1803] = "FbUnsupportedResponseType";
    PlatformErrorCodes[PlatformErrorCodes["FbInvalidScope"] = 1804] = "FbInvalidScope";
    PlatformErrorCodes[PlatformErrorCodes["FbUnsupportedGrantType"] = 1805] = "FbUnsupportedGrantType";
    PlatformErrorCodes[PlatformErrorCodes["FbInvalidGrant"] = 1806] = "FbInvalidGrant";
    PlatformErrorCodes[PlatformErrorCodes["InvitationExpired"] = 1900] = "InvitationExpired";
    PlatformErrorCodes[PlatformErrorCodes["InvitationUnknownType"] = 1901] = "InvitationUnknownType";
    PlatformErrorCodes[PlatformErrorCodes["InvitationInvalidResponseStatus"] = 1902] = "InvitationInvalidResponseStatus";
    PlatformErrorCodes[PlatformErrorCodes["InvitationInvalidType"] = 1903] = "InvitationInvalidType";
    PlatformErrorCodes[PlatformErrorCodes["InvitationAlreadyPending"] = 1904] = "InvitationAlreadyPending";
    PlatformErrorCodes[PlatformErrorCodes["InvitationInsufficientPermission"] = 1905] = "InvitationInsufficientPermission";
    PlatformErrorCodes[PlatformErrorCodes["InvitationInvalidCode"] = 1906] = "InvitationInvalidCode";
    PlatformErrorCodes[PlatformErrorCodes["InvitationInvalidTargetState"] = 1907] = "InvitationInvalidTargetState";
    PlatformErrorCodes[PlatformErrorCodes["InvitationCannotBeReactivated"] = 1908] = "InvitationCannotBeReactivated";
    PlatformErrorCodes[PlatformErrorCodes["InvitationNoRecipients"] = 1910] = "InvitationNoRecipients";
    PlatformErrorCodes[PlatformErrorCodes["InvitationGroupCannotSendToSelf"] = 1911] = "InvitationGroupCannotSendToSelf";
    PlatformErrorCodes[PlatformErrorCodes["InvitationTooManyRecipients"] = 1912] = "InvitationTooManyRecipients";
    PlatformErrorCodes[PlatformErrorCodes["InvitationInvalid"] = 1913] = "InvitationInvalid";
    PlatformErrorCodes[PlatformErrorCodes["InvitationNotFound"] = 1914] = "InvitationNotFound";
    PlatformErrorCodes[PlatformErrorCodes["TokenInvalid"] = 2000] = "TokenInvalid";
    PlatformErrorCodes[PlatformErrorCodes["TokenBadFormat"] = 2001] = "TokenBadFormat";
    PlatformErrorCodes[PlatformErrorCodes["TokenAlreadyClaimed"] = 2002] = "TokenAlreadyClaimed";
    PlatformErrorCodes[PlatformErrorCodes["TokenAlreadyClaimedSelf"] = 2003] = "TokenAlreadyClaimedSelf";
    PlatformErrorCodes[PlatformErrorCodes["TokenThrottling"] = 2004] = "TokenThrottling";
    PlatformErrorCodes[PlatformErrorCodes["TokenUnknownRedemptionFailure"] = 2005] = "TokenUnknownRedemptionFailure";
    PlatformErrorCodes[PlatformErrorCodes["TokenPurchaseClaimFailedAfterTokenClaimed"] = 2006] = "TokenPurchaseClaimFailedAfterTokenClaimed";
    PlatformErrorCodes[PlatformErrorCodes["TokenUserAlreadyOwnsOffer"] = 2007] = "TokenUserAlreadyOwnsOffer";
    PlatformErrorCodes[PlatformErrorCodes["TokenInvalidOfferKey"] = 2008] = "TokenInvalidOfferKey";
    PlatformErrorCodes[PlatformErrorCodes["TokenEmailNotValidated"] = 2009] = "TokenEmailNotValidated";
    PlatformErrorCodes[PlatformErrorCodes["TokenProvisioningBadVendorOrOffer"] = 2010] = "TokenProvisioningBadVendorOrOffer";
    PlatformErrorCodes[PlatformErrorCodes["TokenPurchaseHistoryUnknownError"] = 2011] = "TokenPurchaseHistoryUnknownError";
    PlatformErrorCodes[PlatformErrorCodes["TokenThrottleStateUnknownError"] = 2012] = "TokenThrottleStateUnknownError";
    PlatformErrorCodes[PlatformErrorCodes["TokenUserAgeNotVerified"] = 2013] = "TokenUserAgeNotVerified";
    PlatformErrorCodes[PlatformErrorCodes["TokenExceededOfferMaximum"] = 2014] = "TokenExceededOfferMaximum";
    PlatformErrorCodes[PlatformErrorCodes["TokenNoAvailableUnlocks"] = 2015] = "TokenNoAvailableUnlocks";
    PlatformErrorCodes[PlatformErrorCodes["TokenMarketplaceInvalidPlatform"] = 2016] = "TokenMarketplaceInvalidPlatform";
    PlatformErrorCodes[PlatformErrorCodes["TokenNoMarketplaceCodesFound"] = 2017] = "TokenNoMarketplaceCodesFound";
    PlatformErrorCodes[PlatformErrorCodes["TokenOfferNotAvailableForRedemption"] = 2018] = "TokenOfferNotAvailableForRedemption";
    PlatformErrorCodes[PlatformErrorCodes["TokenUnlockPartialFailure"] = 2019] = "TokenUnlockPartialFailure";
    PlatformErrorCodes[PlatformErrorCodes["TokenMarketplaceInvalidRegion"] = 2020] = "TokenMarketplaceInvalidRegion";
    PlatformErrorCodes[PlatformErrorCodes["TokenOfferExpired"] = 2021] = "TokenOfferExpired";
    PlatformErrorCodes[PlatformErrorCodes["RAFExceededMaximumReferrals"] = 2022] = "RAFExceededMaximumReferrals";
    PlatformErrorCodes[PlatformErrorCodes["RAFDuplicateBond"] = 2023] = "RAFDuplicateBond";
    PlatformErrorCodes[PlatformErrorCodes["RAFNoValidVeteranDestinyMembershipsFound"] = 2024] = "RAFNoValidVeteranDestinyMembershipsFound";
    PlatformErrorCodes[PlatformErrorCodes["RAFNotAValidVeteranUser"] = 2025] = "RAFNotAValidVeteranUser";
    PlatformErrorCodes[PlatformErrorCodes["RAFCodeAlreadyClaimedOrNotFound"] = 2026] = "RAFCodeAlreadyClaimedOrNotFound";
    PlatformErrorCodes[PlatformErrorCodes["RAFMismatchedDestinyMembershipType"] = 2027] = "RAFMismatchedDestinyMembershipType";
    PlatformErrorCodes[PlatformErrorCodes["RAFUnableToAccessPurchaseHistory"] = 2028] = "RAFUnableToAccessPurchaseHistory";
    PlatformErrorCodes[PlatformErrorCodes["RAFUnableToCreateBond"] = 2029] = "RAFUnableToCreateBond";
    PlatformErrorCodes[PlatformErrorCodes["RAFUnableToFindBond"] = 2030] = "RAFUnableToFindBond";
    PlatformErrorCodes[PlatformErrorCodes["RAFUnableToRemoveBond"] = 2031] = "RAFUnableToRemoveBond";
    PlatformErrorCodes[PlatformErrorCodes["RAFCannotBondToSelf"] = 2032] = "RAFCannotBondToSelf";
    PlatformErrorCodes[PlatformErrorCodes["RAFInvalidPlatform"] = 2033] = "RAFInvalidPlatform";
    PlatformErrorCodes[PlatformErrorCodes["RAFGenerateThrottled"] = 2034] = "RAFGenerateThrottled";
    PlatformErrorCodes[PlatformErrorCodes["RAFUnableToCreateBondVersionMismatch"] = 2035] = "RAFUnableToCreateBondVersionMismatch";
    PlatformErrorCodes[PlatformErrorCodes["RAFUnableToRemoveBondVersionMismatch"] = 2036] = "RAFUnableToRemoveBondVersionMismatch";
    PlatformErrorCodes[PlatformErrorCodes["RAFRedeemThrottled"] = 2037] = "RAFRedeemThrottled";
    PlatformErrorCodes[PlatformErrorCodes["NoAvailableDiscountCode"] = 2038] = "NoAvailableDiscountCode";
    PlatformErrorCodes[PlatformErrorCodes["DiscountAlreadyClaimed"] = 2039] = "DiscountAlreadyClaimed";
    PlatformErrorCodes[PlatformErrorCodes["DiscountClaimFailure"] = 2040] = "DiscountClaimFailure";
    PlatformErrorCodes[PlatformErrorCodes["DiscountConfigurationFailure"] = 2041] = "DiscountConfigurationFailure";
    PlatformErrorCodes[PlatformErrorCodes["DiscountGenerationFailure"] = 2042] = "DiscountGenerationFailure";
    PlatformErrorCodes[PlatformErrorCodes["DiscountAlreadyExists"] = 2043] = "DiscountAlreadyExists";
    PlatformErrorCodes[PlatformErrorCodes["TokenRequiresCredentialXuid"] = 2044] = "TokenRequiresCredentialXuid";
    PlatformErrorCodes[PlatformErrorCodes["TokenRequiresCredentialPsnid"] = 2045] = "TokenRequiresCredentialPsnid";
    PlatformErrorCodes[PlatformErrorCodes["OfferRequired"] = 2046] = "OfferRequired";
    PlatformErrorCodes[PlatformErrorCodes["UnknownEververseHistoryError"] = 2047] = "UnknownEververseHistoryError";
    PlatformErrorCodes[PlatformErrorCodes["MissingEververseHistoryError"] = 2048] = "MissingEververseHistoryError";
    PlatformErrorCodes[PlatformErrorCodes["BungieRewardEmailStateInvalid"] = 2049] = "BungieRewardEmailStateInvalid";
    PlatformErrorCodes[PlatformErrorCodes["BungieRewardNotYetClaimable"] = 2050] = "BungieRewardNotYetClaimable";
    PlatformErrorCodes[PlatformErrorCodes["MissingOfferConfig"] = 2051] = "MissingOfferConfig";
    PlatformErrorCodes[PlatformErrorCodes["RAFQuestEntitlementRequiresBnet"] = 2052] = "RAFQuestEntitlementRequiresBnet";
    PlatformErrorCodes[PlatformErrorCodes["RAFQuestEntitlementTransportFailure"] = 2053] = "RAFQuestEntitlementTransportFailure";
    PlatformErrorCodes[PlatformErrorCodes["RAFQuestEntitlementUnknownFailure"] = 2054] = "RAFQuestEntitlementUnknownFailure";
    PlatformErrorCodes[PlatformErrorCodes["RAFVeteranRewardUnknownFailure"] = 2055] = "RAFVeteranRewardUnknownFailure";
    PlatformErrorCodes[PlatformErrorCodes["RAFTooEarlyToCancelBond"] = 2056] = "RAFTooEarlyToCancelBond";
    PlatformErrorCodes[PlatformErrorCodes["LoyaltyRewardAlreadyRedeemed"] = 2057] = "LoyaltyRewardAlreadyRedeemed";
    PlatformErrorCodes[PlatformErrorCodes["UnclaimedLoyaltyRewardEntryNotFound"] = 2058] = "UnclaimedLoyaltyRewardEntryNotFound";
    PlatformErrorCodes[PlatformErrorCodes["PartnerOfferPartialFailure"] = 2059] = "PartnerOfferPartialFailure";
    PlatformErrorCodes[PlatformErrorCodes["PartnerOfferAlreadyClaimed"] = 2060] = "PartnerOfferAlreadyClaimed";
    PlatformErrorCodes[PlatformErrorCodes["PartnerOfferSkuNotFound"] = 2061] = "PartnerOfferSkuNotFound";
    PlatformErrorCodes[PlatformErrorCodes["PartnerOfferSkuExpired"] = 2062] = "PartnerOfferSkuExpired";
    PlatformErrorCodes[PlatformErrorCodes["PartnerOfferPermissionFailure"] = 2063] = "PartnerOfferPermissionFailure";
    PlatformErrorCodes[PlatformErrorCodes["PartnerOfferNoDestinyAccount"] = 2064] = "PartnerOfferNoDestinyAccount";
    PlatformErrorCodes[PlatformErrorCodes["PartnerOfferApplyDataNotFound"] = 2065] = "PartnerOfferApplyDataNotFound";
    PlatformErrorCodes[PlatformErrorCodes["ApiExceededMaxKeys"] = 2100] = "ApiExceededMaxKeys";
    PlatformErrorCodes[PlatformErrorCodes["ApiInvalidOrExpiredKey"] = 2101] = "ApiInvalidOrExpiredKey";
    PlatformErrorCodes[PlatformErrorCodes["ApiKeyMissingFromRequest"] = 2102] = "ApiKeyMissingFromRequest";
    PlatformErrorCodes[PlatformErrorCodes["ApplicationDisabled"] = 2103] = "ApplicationDisabled";
    PlatformErrorCodes[PlatformErrorCodes["ApplicationExceededMax"] = 2104] = "ApplicationExceededMax";
    PlatformErrorCodes[PlatformErrorCodes["ApplicationDisallowedByScope"] = 2105] = "ApplicationDisallowedByScope";
    PlatformErrorCodes[PlatformErrorCodes["AuthorizationCodeInvalid"] = 2106] = "AuthorizationCodeInvalid";
    PlatformErrorCodes[PlatformErrorCodes["OriginHeaderDoesNotMatchKey"] = 2107] = "OriginHeaderDoesNotMatchKey";
    PlatformErrorCodes[PlatformErrorCodes["AccessNotPermittedByApplicationScope"] = 2108] = "AccessNotPermittedByApplicationScope";
    PlatformErrorCodes[PlatformErrorCodes["ApplicationNameIsTaken"] = 2109] = "ApplicationNameIsTaken";
    PlatformErrorCodes[PlatformErrorCodes["RefreshTokenNotYetValid"] = 2110] = "RefreshTokenNotYetValid";
    PlatformErrorCodes[PlatformErrorCodes["AccessTokenHasExpired"] = 2111] = "AccessTokenHasExpired";
    PlatformErrorCodes[PlatformErrorCodes["ApplicationTokenFormatNotValid"] = 2112] = "ApplicationTokenFormatNotValid";
    PlatformErrorCodes[PlatformErrorCodes["ApplicationNotConfiguredForBungieAuth"] = 2113] = "ApplicationNotConfiguredForBungieAuth";
    PlatformErrorCodes[PlatformErrorCodes["ApplicationNotConfiguredForOAuth"] = 2114] = "ApplicationNotConfiguredForOAuth";
    PlatformErrorCodes[PlatformErrorCodes["OAuthAccessTokenExpired"] = 2115] = "OAuthAccessTokenExpired";
    PlatformErrorCodes[PlatformErrorCodes["ApplicationTokenKeyIdDoesNotExist"] = 2116] = "ApplicationTokenKeyIdDoesNotExist";
    PlatformErrorCodes[PlatformErrorCodes["ProvidedTokenNotValidRefreshToken"] = 2117] = "ProvidedTokenNotValidRefreshToken";
    PlatformErrorCodes[PlatformErrorCodes["RefreshTokenExpired"] = 2118] = "RefreshTokenExpired";
    PlatformErrorCodes[PlatformErrorCodes["AuthorizationRecordInvalid"] = 2119] = "AuthorizationRecordInvalid";
    PlatformErrorCodes[PlatformErrorCodes["TokenPreviouslyRevoked"] = 2120] = "TokenPreviouslyRevoked";
    PlatformErrorCodes[PlatformErrorCodes["TokenInvalidMembership"] = 2121] = "TokenInvalidMembership";
    PlatformErrorCodes[PlatformErrorCodes["AuthorizationCodeStale"] = 2122] = "AuthorizationCodeStale";
    PlatformErrorCodes[PlatformErrorCodes["AuthorizationRecordExpired"] = 2123] = "AuthorizationRecordExpired";
    PlatformErrorCodes[PlatformErrorCodes["AuthorizationRecordRevoked"] = 2124] = "AuthorizationRecordRevoked";
    PlatformErrorCodes[PlatformErrorCodes["AuthorizationRecordInactiveApiKey"] = 2125] = "AuthorizationRecordInactiveApiKey";
    PlatformErrorCodes[PlatformErrorCodes["AuthorizationRecordApiKeyMatching"] = 2126] = "AuthorizationRecordApiKeyMatching";
    PlatformErrorCodes[PlatformErrorCodes["PartnershipInvalidType"] = 2200] = "PartnershipInvalidType";
    PlatformErrorCodes[PlatformErrorCodes["PartnershipValidationError"] = 2201] = "PartnershipValidationError";
    PlatformErrorCodes[PlatformErrorCodes["PartnershipValidationTimeout"] = 2202] = "PartnershipValidationTimeout";
    PlatformErrorCodes[PlatformErrorCodes["PartnershipAccessFailure"] = 2203] = "PartnershipAccessFailure";
    PlatformErrorCodes[PlatformErrorCodes["PartnershipAccountInvalid"] = 2204] = "PartnershipAccountInvalid";
    PlatformErrorCodes[PlatformErrorCodes["PartnershipGetAccountInfoFailure"] = 2205] = "PartnershipGetAccountInfoFailure";
    PlatformErrorCodes[PlatformErrorCodes["PartnershipDisabled"] = 2206] = "PartnershipDisabled";
    PlatformErrorCodes[PlatformErrorCodes["PartnershipAlreadyExists"] = 2207] = "PartnershipAlreadyExists";
    PlatformErrorCodes[PlatformErrorCodes["CommunityStreamingUnavailable"] = 2300] = "CommunityStreamingUnavailable";
    PlatformErrorCodes[PlatformErrorCodes["TwitchNotLinked"] = 2500] = "TwitchNotLinked";
    PlatformErrorCodes[PlatformErrorCodes["TwitchAccountNotFound"] = 2501] = "TwitchAccountNotFound";
    PlatformErrorCodes[PlatformErrorCodes["TwitchCouldNotLoadDestinyInfo"] = 2502] = "TwitchCouldNotLoadDestinyInfo";
    PlatformErrorCodes[PlatformErrorCodes["TwitchCouldNotRegisterUser"] = 2503] = "TwitchCouldNotRegisterUser";
    PlatformErrorCodes[PlatformErrorCodes["TwitchCouldNotUnregisterUser"] = 2504] = "TwitchCouldNotUnregisterUser";
    PlatformErrorCodes[PlatformErrorCodes["TwitchRequiresRelinking"] = 2505] = "TwitchRequiresRelinking";
    PlatformErrorCodes[PlatformErrorCodes["TwitchNoPlatformChosen"] = 2506] = "TwitchNoPlatformChosen";
    PlatformErrorCodes[PlatformErrorCodes["TwitchDropHistoryPermissionFailure"] = 2507] = "TwitchDropHistoryPermissionFailure";
    PlatformErrorCodes[PlatformErrorCodes["TwitchDropsRepairPartialFailure"] = 2508] = "TwitchDropsRepairPartialFailure";
    PlatformErrorCodes[PlatformErrorCodes["TwitchNotAuthorized"] = 2509] = "TwitchNotAuthorized";
    PlatformErrorCodes[PlatformErrorCodes["TwitchUnknownAuthorizationFailure"] = 2510] = "TwitchUnknownAuthorizationFailure";
    PlatformErrorCodes[PlatformErrorCodes["TrendingCategoryNotFound"] = 2600] = "TrendingCategoryNotFound";
    PlatformErrorCodes[PlatformErrorCodes["TrendingEntryTypeNotSupported"] = 2601] = "TrendingEntryTypeNotSupported";
    PlatformErrorCodes[PlatformErrorCodes["ReportOffenderNotInPgcr"] = 2700] = "ReportOffenderNotInPgcr";
    PlatformErrorCodes[PlatformErrorCodes["ReportRequestorNotInPgcr"] = 2701] = "ReportRequestorNotInPgcr";
    PlatformErrorCodes[PlatformErrorCodes["ReportSubmissionFailed"] = 2702] = "ReportSubmissionFailed";
    PlatformErrorCodes[PlatformErrorCodes["ReportCannotReportSelf"] = 2703] = "ReportCannotReportSelf";
    PlatformErrorCodes[PlatformErrorCodes["AwaTypeDisabled"] = 2800] = "AwaTypeDisabled";
    PlatformErrorCodes[PlatformErrorCodes["AwaTooManyPendingRequests"] = 2801] = "AwaTooManyPendingRequests";
    PlatformErrorCodes[PlatformErrorCodes["AwaTheFeatureRequiresARegisteredDevice"] = 2802] = "AwaTheFeatureRequiresARegisteredDevice";
    PlatformErrorCodes[PlatformErrorCodes["AwaRequestWasUnansweredForTooLong"] = 2803] = "AwaRequestWasUnansweredForTooLong";
    PlatformErrorCodes[PlatformErrorCodes["AwaWriteRequestMissingOrInvalidToken"] = 2804] = "AwaWriteRequestMissingOrInvalidToken";
    PlatformErrorCodes[PlatformErrorCodes["AwaWriteRequestTokenExpired"] = 2805] = "AwaWriteRequestTokenExpired";
    PlatformErrorCodes[PlatformErrorCodes["AwaWriteRequestTokenUsageLimitReached"] = 2806] = "AwaWriteRequestTokenUsageLimitReached";
    PlatformErrorCodes[PlatformErrorCodes["SteamWebApiError"] = 2900] = "SteamWebApiError";
    PlatformErrorCodes[PlatformErrorCodes["SteamWebNullResponseError"] = 2901] = "SteamWebNullResponseError";
    PlatformErrorCodes[PlatformErrorCodes["SteamAccountRequired"] = 2902] = "SteamAccountRequired";
    PlatformErrorCodes[PlatformErrorCodes["SteamNotAuthorized"] = 2903] = "SteamNotAuthorized";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamNotFound"] = 3000] = "ClanFireteamNotFound";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamAddNoAlternatesForImmediate"] = 3001] = "ClanFireteamAddNoAlternatesForImmediate";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamFull"] = 3002] = "ClanFireteamFull";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamAltFull"] = 3003] = "ClanFireteamAltFull";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamBlocked"] = 3004] = "ClanFireteamBlocked";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamPlayerEntryNotFound"] = 3005] = "ClanFireteamPlayerEntryNotFound";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamPermissions"] = 3006] = "ClanFireteamPermissions";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamInvalidPlatform"] = 3007] = "ClanFireteamInvalidPlatform";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamCannotAdjustSlotCount"] = 3008] = "ClanFireteamCannotAdjustSlotCount";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamInvalidPlayerPlatform"] = 3009] = "ClanFireteamInvalidPlayerPlatform";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamNotReadyForInvitesNotEnoughPlayers"] = 3010] = "ClanFireteamNotReadyForInvitesNotEnoughPlayers";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamGameInvitesNotSupportForPlatform"] = 3011] = "ClanFireteamGameInvitesNotSupportForPlatform";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamPlatformInvitePreqFailure"] = 3012] = "ClanFireteamPlatformInvitePreqFailure";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamInvalidAuthContext"] = 3013] = "ClanFireteamInvalidAuthContext";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamInvalidAuthProviderPsn"] = 3014] = "ClanFireteamInvalidAuthProviderPsn";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamPs4SessionFull"] = 3015] = "ClanFireteamPs4SessionFull";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamInvalidAuthToken"] = 3016] = "ClanFireteamInvalidAuthToken";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamScheduledFireteamsDisabled"] = 3017] = "ClanFireteamScheduledFireteamsDisabled";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamNotReadyForInvitesNotScheduledYet"] = 3018] = "ClanFireteamNotReadyForInvitesNotScheduledYet";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamNotReadyForInvitesClosed"] = 3019] = "ClanFireteamNotReadyForInvitesClosed";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamScheduledFireteamsRequireAdminPermissions"] = 3020] = "ClanFireteamScheduledFireteamsRequireAdminPermissions";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamNonPublicMustHaveClan"] = 3021] = "ClanFireteamNonPublicMustHaveClan";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamPublicCreationRestriction"] = 3022] = "ClanFireteamPublicCreationRestriction";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamAlreadyJoined"] = 3023] = "ClanFireteamAlreadyJoined";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamScheduledFireteamsRange"] = 3024] = "ClanFireteamScheduledFireteamsRange";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamPublicCreationRestrictionExtended"] = 3025] = "ClanFireteamPublicCreationRestrictionExtended";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamExpired"] = 3026] = "ClanFireteamExpired";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamInvalidAuthProvider"] = 3027] = "ClanFireteamInvalidAuthProvider";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamInvalidAuthProviderXuid"] = 3028] = "ClanFireteamInvalidAuthProviderXuid";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamThrottle"] = 3029] = "ClanFireteamThrottle";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamTooManyOpenScheduledFireteams"] = 3030] = "ClanFireteamTooManyOpenScheduledFireteams";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamCannotReopenScheduledFireteams"] = 3031] = "ClanFireteamCannotReopenScheduledFireteams";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamJoinNoAccountSpecified"] = 3032] = "ClanFireteamJoinNoAccountSpecified";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamMinDestiny2ProgressForCreation"] = 3033] = "ClanFireteamMinDestiny2ProgressForCreation";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamMinDestiny2ProgressForJoin"] = 3034] = "ClanFireteamMinDestiny2ProgressForJoin";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamSMSOrPurchaseRequiredCreate"] = 3035] = "ClanFireteamSMSOrPurchaseRequiredCreate";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamPurchaseRequiredCreate"] = 3036] = "ClanFireteamPurchaseRequiredCreate";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamSMSOrPurchaseRequiredJoin"] = 3037] = "ClanFireteamSMSOrPurchaseRequiredJoin";
    PlatformErrorCodes[PlatformErrorCodes["ClanFireteamPurchaseRequiredJoin"] = 3038] = "ClanFireteamPurchaseRequiredJoin";
    PlatformErrorCodes[PlatformErrorCodes["CrossSaveOverriddenAccountNotFound"] = 3200] = "CrossSaveOverriddenAccountNotFound";
    PlatformErrorCodes[PlatformErrorCodes["CrossSaveTooManyOverriddenPlatforms"] = 3201] = "CrossSaveTooManyOverriddenPlatforms";
    PlatformErrorCodes[PlatformErrorCodes["CrossSaveNoOverriddenPlatforms"] = 3202] = "CrossSaveNoOverriddenPlatforms";
    PlatformErrorCodes[PlatformErrorCodes["CrossSavePrimaryAccountNotFound"] = 3203] = "CrossSavePrimaryAccountNotFound";
    PlatformErrorCodes[PlatformErrorCodes["CrossSaveRequestInvalid"] = 3204] = "CrossSaveRequestInvalid";
    PlatformErrorCodes[PlatformErrorCodes["CrossSaveBungieAccountValidationFailure"] = 3206] = "CrossSaveBungieAccountValidationFailure";
    PlatformErrorCodes[PlatformErrorCodes["CrossSaveOverriddenPlatformNotAllowed"] = 3207] = "CrossSaveOverriddenPlatformNotAllowed";
    PlatformErrorCodes[PlatformErrorCodes["CrossSaveThresholdExceeded"] = 3208] = "CrossSaveThresholdExceeded";
    PlatformErrorCodes[PlatformErrorCodes["CrossSaveIncompatibleMembershipType"] = 3209] = "CrossSaveIncompatibleMembershipType";
    PlatformErrorCodes[PlatformErrorCodes["CrossSaveCouldNotFindLinkedAccountForMembershipType"] = 3210] = "CrossSaveCouldNotFindLinkedAccountForMembershipType";
    PlatformErrorCodes[PlatformErrorCodes["CrossSaveCouldNotCreateDestinyProfileForMembershipType"] = 3211] = "CrossSaveCouldNotCreateDestinyProfileForMembershipType";
    PlatformErrorCodes[PlatformErrorCodes["CrossSaveErrorCreatingDestinyProfileForMembershipType"] = 3212] = "CrossSaveErrorCreatingDestinyProfileForMembershipType";
    PlatformErrorCodes[PlatformErrorCodes["CrossSaveCannotOverrideSelf"] = 3213] = "CrossSaveCannotOverrideSelf";
    PlatformErrorCodes[PlatformErrorCodes["CrossSaveRecentSilverPurchase"] = 3214] = "CrossSaveRecentSilverPurchase";
    PlatformErrorCodes[PlatformErrorCodes["CrossSaveSilverBalanceNegative"] = 3215] = "CrossSaveSilverBalanceNegative";
    PlatformErrorCodes[PlatformErrorCodes["CrossSaveAccountNotAuthenticated"] = 3216] = "CrossSaveAccountNotAuthenticated";
    PlatformErrorCodes[PlatformErrorCodes["ErrorOneAccountAlreadyActive"] = 3217] = "ErrorOneAccountAlreadyActive";
    PlatformErrorCodes[PlatformErrorCodes["ErrorOneAccountDestinyRestriction"] = 3218] = "ErrorOneAccountDestinyRestriction";
    PlatformErrorCodes[PlatformErrorCodes["CrossSaveMustMigrateToSteam"] = 3219] = "CrossSaveMustMigrateToSteam";
    PlatformErrorCodes[PlatformErrorCodes["CrossSaveSteamAlreadyPaired"] = 3220] = "CrossSaveSteamAlreadyPaired";
    PlatformErrorCodes[PlatformErrorCodes["CrossSaveCannotPairJustSteamAndBlizzard"] = 3221] = "CrossSaveCannotPairJustSteamAndBlizzard";
    PlatformErrorCodes[PlatformErrorCodes["CrossSaveCannotPairSteamAloneBeforeShadowkeep"] = 3222] = "CrossSaveCannotPairSteamAloneBeforeShadowkeep";
    PlatformErrorCodes[PlatformErrorCodes["AuthVerificationNotLinkedToAccount"] = 3300] = "AuthVerificationNotLinkedToAccount";
    PlatformErrorCodes[PlatformErrorCodes["PCMigrationMissingBlizzard"] = 3400] = "PCMigrationMissingBlizzard";
    PlatformErrorCodes[PlatformErrorCodes["PCMigrationMissingSteam"] = 3401] = "PCMigrationMissingSteam";
    PlatformErrorCodes[PlatformErrorCodes["PCMigrationInvalidBlizzard"] = 3402] = "PCMigrationInvalidBlizzard";
    PlatformErrorCodes[PlatformErrorCodes["PCMigrationInvalidSteam"] = 3403] = "PCMigrationInvalidSteam";
    PlatformErrorCodes[PlatformErrorCodes["PCMigrationUnknownFailure"] = 3404] = "PCMigrationUnknownFailure";
    PlatformErrorCodes[PlatformErrorCodes["PCMigrationUnknownException"] = 3405] = "PCMigrationUnknownException";
    PlatformErrorCodes[PlatformErrorCodes["PCMigrationNotLinked"] = 3406] = "PCMigrationNotLinked";
    PlatformErrorCodes[PlatformErrorCodes["PCMigrationAccountsAlreadyUsed"] = 3407] = "PCMigrationAccountsAlreadyUsed";
    PlatformErrorCodes[PlatformErrorCodes["PCMigrationStepFailed"] = 3408] = "PCMigrationStepFailed";
    PlatformErrorCodes[PlatformErrorCodes["PCMigrationInvalidBlizzardCrossSaveState"] = 3409] = "PCMigrationInvalidBlizzardCrossSaveState";
    PlatformErrorCodes[PlatformErrorCodes["PCMigrationDestinationBanned"] = 3410] = "PCMigrationDestinationBanned";
    PlatformErrorCodes[PlatformErrorCodes["PCMigrationDestinyFailure"] = 3411] = "PCMigrationDestinyFailure";
    PlatformErrorCodes[PlatformErrorCodes["PCMigrationSilverTransferFailed"] = 3412] = "PCMigrationSilverTransferFailed";
    PlatformErrorCodes[PlatformErrorCodes["PCMigrationEntitlementTransferFailed"] = 3413] = "PCMigrationEntitlementTransferFailed";
    PlatformErrorCodes[PlatformErrorCodes["PCMigrationCannotStompClanFounder"] = 3414] = "PCMigrationCannotStompClanFounder";
    PlatformErrorCodes[PlatformErrorCodes["UnsupportedBrowser"] = 3500] = "UnsupportedBrowser";
    PlatformErrorCodes[PlatformErrorCodes["StadiaAccountRequired"] = 3600] = "StadiaAccountRequired";
    PlatformErrorCodes[PlatformErrorCodes["ErrorPhoneValidationTooManyUses"] = 3702] = "ErrorPhoneValidationTooManyUses";
    PlatformErrorCodes[PlatformErrorCodes["ErrorPhoneValidationNoAssociatedPhone"] = 3703] = "ErrorPhoneValidationNoAssociatedPhone";
    PlatformErrorCodes[PlatformErrorCodes["ErrorPhoneValidationCodeInvalid"] = 3705] = "ErrorPhoneValidationCodeInvalid";
    PlatformErrorCodes[PlatformErrorCodes["ErrorPhoneValidationBanned"] = 3706] = "ErrorPhoneValidationBanned";
    PlatformErrorCodes[PlatformErrorCodes["ErrorPhoneValidationCodeTooRecentlySent"] = 3707] = "ErrorPhoneValidationCodeTooRecentlySent";
    PlatformErrorCodes[PlatformErrorCodes["ErrorPhoneValidationCodeExpired"] = 3708] = "ErrorPhoneValidationCodeExpired";
    PlatformErrorCodes[PlatformErrorCodes["ErrorPhoneValidationInvalidNumberType"] = 3709] = "ErrorPhoneValidationInvalidNumberType";
    PlatformErrorCodes[PlatformErrorCodes["ErrorPhoneValidationCodeTooRecentlyChecked"] = 3710] = "ErrorPhoneValidationCodeTooRecentlyChecked";
    PlatformErrorCodes[PlatformErrorCodes["ApplePushErrorUnknown"] = 3800] = "ApplePushErrorUnknown";
    PlatformErrorCodes[PlatformErrorCodes["ApplePushErrorNull"] = 3801] = "ApplePushErrorNull";
    PlatformErrorCodes[PlatformErrorCodes["ApplePushErrorTimeout"] = 3802] = "ApplePushErrorTimeout";
    PlatformErrorCodes[PlatformErrorCodes["ApplePushBadRequest"] = 3803] = "ApplePushBadRequest";
    PlatformErrorCodes[PlatformErrorCodes["ApplePushFailedAuth"] = 3804] = "ApplePushFailedAuth";
    PlatformErrorCodes[PlatformErrorCodes["ApplePushThrottled"] = 3805] = "ApplePushThrottled";
    PlatformErrorCodes[PlatformErrorCodes["ApplePushServiceUnavailable"] = 3806] = "ApplePushServiceUnavailable";
    PlatformErrorCodes[PlatformErrorCodes["NotAnImageOrVideo"] = 3807] = "NotAnImageOrVideo";
    PlatformErrorCodes[PlatformErrorCodes["ErrorBungieFriendsBlockFailed"] = 3900] = "ErrorBungieFriendsBlockFailed";
    PlatformErrorCodes[PlatformErrorCodes["ErrorBungieFriendsAutoReject"] = 3901] = "ErrorBungieFriendsAutoReject";
    PlatformErrorCodes[PlatformErrorCodes["ErrorBungieFriendsNoRequestFound"] = 3902] = "ErrorBungieFriendsNoRequestFound";
    PlatformErrorCodes[PlatformErrorCodes["ErrorBungieFriendsAlreadyFriends"] = 3903] = "ErrorBungieFriendsAlreadyFriends";
    PlatformErrorCodes[PlatformErrorCodes["ErrorBungieFriendsUnableToRemoveRequest"] = 3904] = "ErrorBungieFriendsUnableToRemoveRequest";
    PlatformErrorCodes[PlatformErrorCodes["ErrorBungieFriendsUnableToRemove"] = 3905] = "ErrorBungieFriendsUnableToRemove";
    PlatformErrorCodes[PlatformErrorCodes["ErrorBungieFriendsIdenticalSourceTarget"] = 3906] = "ErrorBungieFriendsIdenticalSourceTarget";
    PlatformErrorCodes[PlatformErrorCodes["ErrorBungieFriendsSelf"] = 3907] = "ErrorBungieFriendsSelf";
    PlatformErrorCodes[PlatformErrorCodes["ErrorBungieBlockSelf"] = 3908] = "ErrorBungieBlockSelf";
    PlatformErrorCodes[PlatformErrorCodes["ErrorBungieFriendsListFull"] = 3910] = "ErrorBungieFriendsListFull";
    PlatformErrorCodes[PlatformErrorCodes["ErrorBungieBlockListFull"] = 3911] = "ErrorBungieBlockListFull";
    PlatformErrorCodes[PlatformErrorCodes["ErrorEgsUnknown"] = 4000] = "ErrorEgsUnknown";
    PlatformErrorCodes[PlatformErrorCodes["ErrorEgsBadRequest"] = 4001] = "ErrorEgsBadRequest";
    PlatformErrorCodes[PlatformErrorCodes["ErrorEgsNotAuthorized"] = 4002] = "ErrorEgsNotAuthorized";
    PlatformErrorCodes[PlatformErrorCodes["ErrorEgsForbidden"] = 4003] = "ErrorEgsForbidden";
    PlatformErrorCodes[PlatformErrorCodes["ErrorEgsAccountNotFound"] = 4004] = "ErrorEgsAccountNotFound";
    PlatformErrorCodes[PlatformErrorCodes["ErrorEgsWebException"] = 4005] = "ErrorEgsWebException";
    PlatformErrorCodes[PlatformErrorCodes["ErrorEgsUnavailable"] = 4006] = "ErrorEgsUnavailable";
    PlatformErrorCodes[PlatformErrorCodes["ErrorEgsJwksMissing"] = 4007] = "ErrorEgsJwksMissing";
    PlatformErrorCodes[PlatformErrorCodes["ErrorEgsJwtMalformedHeader"] = 4008] = "ErrorEgsJwtMalformedHeader";
    PlatformErrorCodes[PlatformErrorCodes["ErrorEgsJwtMalformedPayload"] = 4009] = "ErrorEgsJwtMalformedPayload";
})(PlatformErrorCodes = exports.PlatformErrorCodes || (exports.PlatformErrorCodes = {}));
var DropStateEnum;
(function (DropStateEnum) {
    DropStateEnum[DropStateEnum["Claimed"] = 0] = "Claimed";
    DropStateEnum[DropStateEnum["Applied"] = 1] = "Applied";
    DropStateEnum[DropStateEnum["Fulfilled"] = 2] = "Fulfilled";
})(DropStateEnum = exports.DropStateEnum || (exports.DropStateEnum = {}));
var ComponentPrivacySetting;
(function (ComponentPrivacySetting) {
    ComponentPrivacySetting[ComponentPrivacySetting["None"] = 0] = "None";
    ComponentPrivacySetting[ComponentPrivacySetting["Public"] = 1] = "Public";
    ComponentPrivacySetting[ComponentPrivacySetting["Private"] = 2] = "Private";
})(ComponentPrivacySetting = exports.ComponentPrivacySetting || (exports.ComponentPrivacySetting = {}));
var TrendingEntryType;
(function (TrendingEntryType) {
    TrendingEntryType[TrendingEntryType["News"] = 0] = "News";
    TrendingEntryType[TrendingEntryType["DestinyItem"] = 1] = "DestinyItem";
    TrendingEntryType[TrendingEntryType["DestinyActivity"] = 2] = "DestinyActivity";
    TrendingEntryType[TrendingEntryType["DestinyRitual"] = 3] = "DestinyRitual";
    TrendingEntryType[TrendingEntryType["SupportArticle"] = 4] = "SupportArticle";
    TrendingEntryType[TrendingEntryType["Creation"] = 5] = "Creation";
    TrendingEntryType[TrendingEntryType["Stream"] = 6] = "Stream";
    TrendingEntryType[TrendingEntryType["Update"] = 7] = "Update";
    TrendingEntryType[TrendingEntryType["Link"] = 8] = "Link";
    TrendingEntryType[TrendingEntryType["ForumTag"] = 9] = "ForumTag";
    TrendingEntryType[TrendingEntryType["Container"] = 10] = "Container";
    TrendingEntryType[TrendingEntryType["Release"] = 11] = "Release";
})(TrendingEntryType = exports.TrendingEntryType || (exports.TrendingEntryType = {}));
var FireteamDateRange;
(function (FireteamDateRange) {
    FireteamDateRange[FireteamDateRange["All"] = 0] = "All";
    FireteamDateRange[FireteamDateRange["Now"] = 1] = "Now";
    FireteamDateRange[FireteamDateRange["TwentyFourHours"] = 2] = "TwentyFourHours";
    FireteamDateRange[FireteamDateRange["FortyEightHours"] = 3] = "FortyEightHours";
    FireteamDateRange[FireteamDateRange["ThisWeek"] = 4] = "ThisWeek";
})(FireteamDateRange = exports.FireteamDateRange || (exports.FireteamDateRange = {}));
var FireteamPlatform;
(function (FireteamPlatform) {
    FireteamPlatform[FireteamPlatform["Any"] = 0] = "Any";
    FireteamPlatform[FireteamPlatform["Playstation4"] = 1] = "Playstation4";
    FireteamPlatform[FireteamPlatform["XboxOne"] = 2] = "XboxOne";
    FireteamPlatform[FireteamPlatform["Blizzard"] = 3] = "Blizzard";
    FireteamPlatform[FireteamPlatform["Steam"] = 4] = "Steam";
    FireteamPlatform[FireteamPlatform["Stadia"] = 5] = "Stadia";
    FireteamPlatform[FireteamPlatform["Egs"] = 6] = "Egs";
})(FireteamPlatform = exports.FireteamPlatform || (exports.FireteamPlatform = {}));
var FireteamPublicSearchOption;
(function (FireteamPublicSearchOption) {
    FireteamPublicSearchOption[FireteamPublicSearchOption["PublicAndPrivate"] = 0] = "PublicAndPrivate";
    FireteamPublicSearchOption[FireteamPublicSearchOption["PublicOnly"] = 1] = "PublicOnly";
    FireteamPublicSearchOption[FireteamPublicSearchOption["PrivateOnly"] = 2] = "PrivateOnly";
})(FireteamPublicSearchOption = exports.FireteamPublicSearchOption || (exports.FireteamPublicSearchOption = {}));
var FireteamSlotSearch;
(function (FireteamSlotSearch) {
    FireteamSlotSearch[FireteamSlotSearch["NoSlotRestriction"] = 0] = "NoSlotRestriction";
    FireteamSlotSearch[FireteamSlotSearch["HasOpenPlayerSlots"] = 1] = "HasOpenPlayerSlots";
    FireteamSlotSearch[FireteamSlotSearch["HasOpenPlayerOrAltSlots"] = 2] = "HasOpenPlayerOrAltSlots";
})(FireteamSlotSearch = exports.FireteamSlotSearch || (exports.FireteamSlotSearch = {}));
var FireteamPlatformInviteResult;
(function (FireteamPlatformInviteResult) {
    FireteamPlatformInviteResult[FireteamPlatformInviteResult["None"] = 0] = "None";
    FireteamPlatformInviteResult[FireteamPlatformInviteResult["Success"] = 1] = "Success";
    FireteamPlatformInviteResult[FireteamPlatformInviteResult["AlreadyInFireteam"] = 2] = "AlreadyInFireteam";
    FireteamPlatformInviteResult[FireteamPlatformInviteResult["Throttled"] = 3] = "Throttled";
    FireteamPlatformInviteResult[FireteamPlatformInviteResult["ServiceError"] = 4] = "ServiceError";
})(FireteamPlatformInviteResult = exports.FireteamPlatformInviteResult || (exports.FireteamPlatformInviteResult = {}));
var PresenceStatus;
(function (PresenceStatus) {
    PresenceStatus[PresenceStatus["OfflineOrUnknown"] = 0] = "OfflineOrUnknown";
    PresenceStatus[PresenceStatus["Online"] = 1] = "Online";
})(PresenceStatus = exports.PresenceStatus || (exports.PresenceStatus = {}));
var PresenceOnlineStateFlags;
(function (PresenceOnlineStateFlags) {
    PresenceOnlineStateFlags[PresenceOnlineStateFlags["None"] = 0] = "None";
    PresenceOnlineStateFlags[PresenceOnlineStateFlags["Destiny1"] = 1] = "Destiny1";
    PresenceOnlineStateFlags[PresenceOnlineStateFlags["Destiny2"] = 2] = "Destiny2";
})(PresenceOnlineStateFlags = exports.PresenceOnlineStateFlags || (exports.PresenceOnlineStateFlags = {}));
var FriendRelationshipState;
(function (FriendRelationshipState) {
    FriendRelationshipState[FriendRelationshipState["Unknown"] = 0] = "Unknown";
    FriendRelationshipState[FriendRelationshipState["Friend"] = 1] = "Friend";
    FriendRelationshipState[FriendRelationshipState["IncomingRequest"] = 2] = "IncomingRequest";
    FriendRelationshipState[FriendRelationshipState["OutgoingRequest"] = 3] = "OutgoingRequest";
})(FriendRelationshipState = exports.FriendRelationshipState || (exports.FriendRelationshipState = {}));
var PlatformFriendType;
(function (PlatformFriendType) {
    PlatformFriendType[PlatformFriendType["Unknown"] = 0] = "Unknown";
    PlatformFriendType[PlatformFriendType["Xbox"] = 1] = "Xbox";
    PlatformFriendType[PlatformFriendType["PSN"] = 2] = "PSN";
    PlatformFriendType[PlatformFriendType["Steam"] = 3] = "Steam";
    PlatformFriendType[PlatformFriendType["Egs"] = 4] = "Egs";
})(PlatformFriendType = exports.PlatformFriendType || (exports.PlatformFriendType = {}));
var GlobalAlertLevel;
(function (GlobalAlertLevel) {
    GlobalAlertLevel[GlobalAlertLevel["Unknown"] = 0] = "Unknown";
    GlobalAlertLevel[GlobalAlertLevel["Blue"] = 1] = "Blue";
    GlobalAlertLevel[GlobalAlertLevel["Yellow"] = 2] = "Yellow";
    GlobalAlertLevel[GlobalAlertLevel["Red"] = 3] = "Red";
})(GlobalAlertLevel = exports.GlobalAlertLevel || (exports.GlobalAlertLevel = {}));
var GlobalAlertType;
(function (GlobalAlertType) {
    GlobalAlertType[GlobalAlertType["GlobalAlert"] = 0] = "GlobalAlert";
    GlobalAlertType[GlobalAlertType["StreamingAlert"] = 1] = "StreamingAlert";
})(GlobalAlertType = exports.GlobalAlertType || (exports.GlobalAlertType = {}));
