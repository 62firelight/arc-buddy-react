"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateOptions = exports.parseAuthenticationHeaders = exports.formatQueryStrings = void 0;
function formatQueryStrings(uri, queryObject) {
    // Querystring example : { "components": components }
    const allKeys = Object.keys(queryObject || {});
    const allValues = Object.values(queryObject || {});
    let formattedQuerystring = "";
    allValues.forEach((item, index) => {
        if (item !== null && item !== undefined) {
            const startingChar = index === 0 ? "?" : "&";
            const formattedItem = typeof item === "object" ? item.join(",") : item;
            formattedQuerystring += `${startingChar}${allKeys[index]}=${formattedItem}`;
        }
    });
    return `${uri}${formattedQuerystring}`;
}
exports.formatQueryStrings = formatQueryStrings;
function parseAuthenticationHeaders(headers, tokens) {
    let newObject = {};
    if (tokens && tokens.access_token)
        newObject = { Authorization: `Bearer ${tokens.access_token}` };
    return { ...headers, ...newObject };
}
exports.parseAuthenticationHeaders = parseAuthenticationHeaders;
function generateOptions(changes) {
    const host = changes.HOST || "https://www.bungie.net";
    return {
        host,
        urls: {
            api: `${host}/Platform`,
            authorization: `${host}/en/OAuth/Authorize`,
            token: `${host}/Platform/App/OAuth/token`,
        },
        app: {
            client_id: changes.CLIENT_ID,
            client_secret: changes.CLIENT_SECRET || undefined,
            redirect_uri: changes.REDIRECT_URI || undefined,
        },
        headers: {
            "X-API-Key": changes.API_KEY,
        },
    };
}
exports.generateOptions = generateOptions;
